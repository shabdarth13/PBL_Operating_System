__all__ = ['babel']

# Don't look below, you will not understand this Python code :) I don't.

from js2py.pyjs import *
# setting scope
var = Scope( JS_BUILTINS )
set_global_object(var)

# Code follows:
var.registers([])
@Js
def PyJs_anonymous_1_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'babel', u'require', u'babelPresetEs2015', u'exports', u'module'])
    Js(u'use strict')
    var.put(u'babel', var.get(u'require')(Js(u'babel-core')))
    var.put(u'babelPresetEs2015', var.get(u'require')(Js(u'babel-preset-es2015')))
    var.get(u'Object').put(u'babelPresetEs2015', var.get(u'babelPresetEs2015'))
    var.get(u'Object').put(u'babel', var.get(u'babel'))
PyJs_anonymous_1_._set_name(u'anonymous')
PyJs_Object_2_ = Js({u'babel-core':Js(5.0),u'babel-preset-es2015':Js(95.0)})
@Js
def PyJs_anonymous_3_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    @Js
    def PyJs_anonymous_4_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        return JsRegExp(u'/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g')
    PyJs_anonymous_4_._set_name(u'anonymous')
    var.get(u'module').put(u'exports', PyJs_anonymous_4_)
PyJs_anonymous_3_._set_name(u'anonymous')
PyJs_Object_5_ = Js({})
@Js
def PyJs_anonymous_6_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'assembleStyles', u'require', u'exports', u'module'])
    @Js
    def PyJsHoisted_assembleStyles_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'styles'])
        PyJs_Object_8_ = Js({u'reset':Js([Js(0.0), Js(0.0)]),u'bold':Js([Js(1.0), Js(22.0)]),u'dim':Js([Js(2.0), Js(22.0)]),u'italic':Js([Js(3.0), Js(23.0)]),u'underline':Js([Js(4.0), Js(24.0)]),u'inverse':Js([Js(7.0), Js(27.0)]),u'hidden':Js([Js(8.0), Js(28.0)]),u'strikethrough':Js([Js(9.0), Js(29.0)])})
        PyJs_Object_9_ = Js({u'black':Js([Js(30.0), Js(39.0)]),u'red':Js([Js(31.0), Js(39.0)]),u'green':Js([Js(32.0), Js(39.0)]),u'yellow':Js([Js(33.0), Js(39.0)]),u'blue':Js([Js(34.0), Js(39.0)]),u'magenta':Js([Js(35.0), Js(39.0)]),u'cyan':Js([Js(36.0), Js(39.0)]),u'white':Js([Js(37.0), Js(39.0)]),u'gray':Js([Js(90.0), Js(39.0)])})
        PyJs_Object_10_ = Js({u'bgBlack':Js([Js(40.0), Js(49.0)]),u'bgRed':Js([Js(41.0), Js(49.0)]),u'bgGreen':Js([Js(42.0), Js(49.0)]),u'bgYellow':Js([Js(43.0), Js(49.0)]),u'bgBlue':Js([Js(44.0), Js(49.0)]),u'bgMagenta':Js([Js(45.0), Js(49.0)]),u'bgCyan':Js([Js(46.0), Js(49.0)]),u'bgWhite':Js([Js(47.0), Js(49.0)])})
        PyJs_Object_7_ = Js({u'modifiers':PyJs_Object_8_,u'colors':PyJs_Object_9_,u'bgColors':PyJs_Object_10_})
        var.put(u'styles', PyJs_Object_7_)
        var.get(u'styles').get(u'colors').put(u'grey', var.get(u'styles').get(u'colors').get(u'gray'))
        @Js
        def PyJs_anonymous_11_(groupName, this, arguments, var=var):
            var = Scope({u'this':this, u'groupName':groupName, u'arguments':arguments}, var)
            var.registers([u'groupName', u'group'])
            var.put(u'group', var.get(u'styles').get(var.get(u'groupName')))
            @Js
            def PyJs_anonymous_12_(styleName, this, arguments, var=var):
                var = Scope({u'this':this, u'styleName':styleName, u'arguments':arguments}, var)
                var.registers([u'style', u'styleName'])
                var.put(u'style', var.get(u'group').get(var.get(u'styleName')))
                PyJs_Object_13_ = Js({u'open':((Js(u'\x1b[')+var.get(u'style').get(u'0'))+Js(u'm')),u'close':((Js(u'\x1b[')+var.get(u'style').get(u'1'))+Js(u'm'))})
                var.get(u'styles').put(var.get(u'styleName'), var.get(u'group').put(var.get(u'styleName'), PyJs_Object_13_))
            PyJs_anonymous_12_._set_name(u'anonymous')
            var.get(u'Object').callprop(u'keys', var.get(u'group')).callprop(u'forEach', PyJs_anonymous_12_)
            PyJs_Object_14_ = Js({u'value':var.get(u'group'),u'enumerable':Js(False)})
            var.get(u'Object').callprop(u'defineProperty', var.get(u'styles'), var.get(u'groupName'), PyJs_Object_14_)
        PyJs_anonymous_11_._set_name(u'anonymous')
        var.get(u'Object').callprop(u'keys', var.get(u'styles')).callprop(u'forEach', PyJs_anonymous_11_)
        return var.get(u'styles')
    PyJsHoisted_assembleStyles_.func_name = u'assembleStyles'
    var.put(u'assembleStyles', PyJsHoisted_assembleStyles_)
    Js(u'use strict')
    pass
    PyJs_Object_15_ = Js({u'enumerable':var.get(u'true'),u'get':var.get(u'assembleStyles')})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'module'), Js(u'exports'), PyJs_Object_15_)
PyJs_anonymous_6_._set_name(u'anonymous')
PyJs_Object_16_ = Js({})
@Js
def PyJs_anonymous_17_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'defs', u'_esutils2', u'exports', u'_jsTokens2', u'_esutils', u'require', u'NEWLINE', u'module', u'BRACKET', u'JSX_TAG', u'_chalk', u'getTokenType', u'_interopRequireDefault', u'highlight', u'_jsTokens', u'_chalk2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_22_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_22_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_highlight_(text, this, arguments, var=var):
        var = Scope({u'this':this, u'text':text, u'arguments':arguments}, var)
        var.registers([u'text'])
        @Js
        def PyJs_anonymous_24_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'_len', u'_key', u'args', u'type', u'colorize'])
            #for JS loop
            var.put(u'_len', var.get(u'arguments').get(u'length'))
            var.put(u'args', var.get(u'Array')(var.get(u'_len')))
            var.put(u'_key', Js(0.0))
            while (var.get(u'_key')<var.get(u'_len')):
                try:
                    var.get(u'args').put(var.get(u'_key'), var.get(u'arguments').get(var.get(u'_key')))
                finally:
                        (var.put(u'_key',Js(var.get(u'_key').to_number())+Js(1))-Js(1))
            var.put(u'type', var.get(u'getTokenType')(var.get(u'args')))
            var.put(u'colorize', var.get(u'defs').get(var.get(u'type')))
            if var.get(u'colorize'):
                @Js
                def PyJs_anonymous_25_(str, this, arguments, var=var):
                    var = Scope({u'this':this, u'arguments':arguments, u'str':str}, var)
                    var.registers([u'str'])
                    return var.get(u'colorize')(var.get(u'str'))
                PyJs_anonymous_25_._set_name(u'anonymous')
                return var.get(u'args').get(u'0').callprop(u'split', var.get(u'NEWLINE')).callprop(u'map', PyJs_anonymous_25_).callprop(u'join', Js(u'\n'))
            else:
                return var.get(u'args').get(u'0')
        PyJs_anonymous_24_._set_name(u'anonymous')
        return var.get(u'text').callprop(u'replace', var.get(u'_jsTokens2').get(u'default'), PyJs_anonymous_24_)
    PyJsHoisted_highlight_.func_name = u'highlight'
    var.put(u'highlight', PyJsHoisted_highlight_)
    @Js
    def PyJsHoisted_getTokenType_(match, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'match':match}, var)
        var.registers([u'_match$slice', u'text', u'token', u'match', u'offset'])
        var.put(u'_match$slice', var.get(u'match').callprop(u'slice', (-Js(2.0))))
        var.put(u'offset', var.get(u'_match$slice').get(u'0'))
        var.put(u'text', var.get(u'_match$slice').get(u'1'))
        var.put(u'token', var.get(u'_jsTokens2').get(u'default').callprop(u'matchToToken', var.get(u'match')))
        if PyJsStrictEq(var.get(u'token').get(u'type'),Js(u'name')):
            if var.get(u'_esutils2').get(u'default').get(u'keyword').callprop(u'isReservedWordES6', var.get(u'token').get(u'value')):
                return Js(u'keyword')
            if (var.get(u'JSX_TAG').callprop(u'test', var.get(u'token').get(u'value')) and (PyJsStrictEq(var.get(u'text').get((var.get(u'offset')-Js(1.0))),Js(u'<')) or (var.get(u'text').callprop(u'substr', (var.get(u'offset')-Js(2.0)), Js(2.0))==Js(u'</')))):
                return Js(u'jsx_tag')
            if PyJsStrictNeq(var.get(u'token').get(u'value').get(u'0'),var.get(u'token').get(u'value').get(u'0').callprop(u'toLowerCase')):
                return Js(u'capitalized')
        if (PyJsStrictEq(var.get(u'token').get(u'type'),Js(u'punctuator')) and var.get(u'BRACKET').callprop(u'test', var.get(u'token').get(u'value'))):
            return Js(u'bracket')
        return var.get(u'token').get(u'type')
    PyJsHoisted_getTokenType_.func_name = u'getTokenType'
    var.put(u'getTokenType', PyJsHoisted_getTokenType_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_18_(rawLines, lineNumber, colNumber, this, arguments, var=var):
        var = Scope({u'this':this, u'lineNumber':lineNumber, u'colNumber':colNumber, u'arguments':arguments, u'rawLines':rawLines}, var)
        var.registers([u'end', u'rawLines', u'linesBelow', u'lines', u'highlighted', u'start', u'colNumber', u'frame', u'lineNumber', u'maybeHighlight', u'numberMaxWidth', u'linesAbove', u'opts'])
        PyJs_Object_19_ = Js({})
        var.put(u'opts', (PyJs_Object_19_ if ((var.get(u'arguments').get(u'length')<=Js(3.0)) or PyJsStrictEq(var.get(u'arguments').get(u'3'),var.get(u'undefined'))) else var.get(u'arguments').get(u'3')))
        var.put(u'colNumber', var.get(u'Math').callprop(u'max', var.get(u'colNumber'), Js(0.0)))
        var.put(u'highlighted', (var.get(u'opts').get(u'highlightCode') and var.get(u'_chalk2').get(u'default').get(u'supportsColor')))
        @Js
        def PyJs_maybeHighlight_20_(chalkFn, string, this, arguments, var=var):
            var = Scope({u'this':this, u'chalkFn':chalkFn, u'maybeHighlight':PyJs_maybeHighlight_20_, u'string':string, u'arguments':arguments}, var)
            var.registers([u'chalkFn', u'string'])
            return (var.get(u'chalkFn')(var.get(u'string')) if var.get(u'highlighted') else var.get(u'string'))
        PyJs_maybeHighlight_20_._set_name(u'maybeHighlight')
        var.put(u'maybeHighlight', PyJs_maybeHighlight_20_)
        if var.get(u'highlighted'):
            var.put(u'rawLines', var.get(u'highlight')(var.get(u'rawLines')))
        var.put(u'linesAbove', (var.get(u'opts').get(u'linesAbove') or Js(2.0)))
        var.put(u'linesBelow', (var.get(u'opts').get(u'linesBelow') or Js(3.0)))
        var.put(u'lines', var.get(u'rawLines').callprop(u'split', var.get(u'NEWLINE')))
        var.put(u'start', var.get(u'Math').callprop(u'max', (var.get(u'lineNumber')-(var.get(u'linesAbove')+Js(1.0))), Js(0.0)))
        var.put(u'end', var.get(u'Math').callprop(u'min', var.get(u'lines').get(u'length'), (var.get(u'lineNumber')+var.get(u'linesBelow'))))
        if (var.get(u'lineNumber').neg() and var.get(u'colNumber').neg()):
            var.put(u'start', Js(0.0))
            var.put(u'end', var.get(u'lines').get(u'length'))
        var.put(u'numberMaxWidth', var.get(u'String')(var.get(u'end')).get(u'length'))
        @Js
        def PyJs_anonymous_21_(line, index, this, arguments, var=var):
            var = Scope({u'this':this, u'index':index, u'line':line, u'arguments':arguments}, var)
            var.registers([u'markerSpacing', u'index', u'markerLine', u'gutter', u'number', u'paddedNumber', u'line'])
            var.put(u'number', ((var.get(u'start')+Js(1.0))+var.get(u'index')))
            var.put(u'paddedNumber', (Js(u' ')+var.get(u'number')).callprop(u'slice', (-var.get(u'numberMaxWidth'))))
            var.put(u'gutter', ((Js(u' ')+var.get(u'paddedNumber'))+Js(u' | ')))
            if PyJsStrictEq(var.get(u'number'),var.get(u'lineNumber')):
                var.put(u'markerLine', Js(u''))
                if var.get(u'colNumber'):
                    var.put(u'markerSpacing', var.get(u'line').callprop(u'slice', Js(0.0), (var.get(u'colNumber')-Js(1.0))).callprop(u'replace', JsRegExp(u'/[^\\t]/g'), Js(u' ')))
                    var.put(u'markerLine', Js([Js(u'\n '), var.get(u'maybeHighlight')(var.get(u'defs').get(u'gutter'), var.get(u'gutter').callprop(u'replace', JsRegExp(u'/\\d/g'), Js(u' '))), var.get(u'markerSpacing'), var.get(u'maybeHighlight')(var.get(u'defs').get(u'marker'), Js(u'^'))]).callprop(u'join', Js(u'')))
                return Js([var.get(u'maybeHighlight')(var.get(u'defs').get(u'marker'), Js(u'>')), var.get(u'maybeHighlight')(var.get(u'defs').get(u'gutter'), var.get(u'gutter')), var.get(u'line'), var.get(u'markerLine')]).callprop(u'join', Js(u''))
            else:
                return ((Js(u' ')+var.get(u'maybeHighlight')(var.get(u'defs').get(u'gutter'), var.get(u'gutter')))+var.get(u'line'))
        PyJs_anonymous_21_._set_name(u'anonymous')
        var.put(u'frame', var.get(u'lines').callprop(u'slice', var.get(u'start'), var.get(u'end')).callprop(u'map', PyJs_anonymous_21_).callprop(u'join', Js(u'\n')))
        if var.get(u'highlighted'):
            return var.get(u'_chalk2').get(u'default').callprop(u'reset', var.get(u'frame'))
        else:
            return var.get(u'frame')
    PyJs_anonymous_18_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_18_)
    var.put(u'_jsTokens', var.get(u'require')(Js(u'js-tokens')))
    var.put(u'_jsTokens2', var.get(u'_interopRequireDefault')(var.get(u'_jsTokens')))
    var.put(u'_esutils', var.get(u'require')(Js(u'esutils')))
    var.put(u'_esutils2', var.get(u'_interopRequireDefault')(var.get(u'_esutils')))
    var.put(u'_chalk', var.get(u'require')(Js(u'chalk')))
    var.put(u'_chalk2', var.get(u'_interopRequireDefault')(var.get(u'_chalk')))
    pass
    PyJs_Object_23_ = Js({u'keyword':var.get(u'_chalk2').get(u'default').get(u'cyan'),u'capitalized':var.get(u'_chalk2').get(u'default').get(u'yellow'),u'jsx_tag':var.get(u'_chalk2').get(u'default').get(u'yellow'),u'punctuator':var.get(u'_chalk2').get(u'default').get(u'yellow'),u'number':var.get(u'_chalk2').get(u'default').get(u'magenta'),u'string':var.get(u'_chalk2').get(u'default').get(u'green'),u'regex':var.get(u'_chalk2').get(u'default').get(u'magenta'),u'comment':var.get(u'_chalk2').get(u'default').get(u'grey'),u'invalid':var.get(u'_chalk2').get(u'default').get(u'white').get(u'bgRed').get(u'bold'),u'gutter':var.get(u'_chalk2').get(u'default').get(u'grey'),u'marker':var.get(u'_chalk2').get(u'default').get(u'red').get(u'bold')})
    var.put(u'defs', PyJs_Object_23_)
    var.put(u'NEWLINE', JsRegExp(u'/\\r\\n|[\\n\\r\\u2028\\u2029]/'))
    var.put(u'JSX_TAG', JsRegExp(u'/^[a-z][\\w-]*$/i'))
    var.put(u'BRACKET', JsRegExp(u'/^[()\\[\\]{}]$/'))
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_17_._set_name(u'anonymous')
PyJs_Object_26_ = Js({u'chalk':Js(265.0),u'esutils':Js(276.0),u'js-tokens':Js(282.0)})
@Js
def PyJs_anonymous_27_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    var.get(u'module').put(u'exports', var.get(u'require')(Js(u'./lib/api/node.js')))
PyJs_anonymous_27_._set_name(u'anonymous')
PyJs_Object_28_ = Js({u'./lib/api/node.js':Js(6.0)})
@Js
def PyJs_anonymous_29_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_isFunction', u'_fs', u'_pipeline2', u'_file', u'_babelTemplate', u'_buildExternalHelpers', u'transformFile', u'_interopRequireDefault', u'_babelTraverse', u'_pipeline', u'transform', u'_fs2', u'_babelMessages', u'exports', u'_babelTraverse2', u'_interopRequireWildcard', u'Plugin', u'_babelTypes', u'analyse', u'pipeline', u'_util', u'util', u'module', u'_optionManager2', u'_isFunction2', u'_config', u'transformFileSync', u'messages', u'_optionManager', u'transformFromAst', u't', u'_package', u'require'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_42_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_42_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_transformFileSync_(filename, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'filename':filename}, var)
        var.registers([u'opts', u'filename'])
        PyJs_Object_45_ = Js({})
        var.put(u'opts', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else PyJs_Object_45_))
        var.get(u'opts').put(u'filename', var.get(u'filename'))
        return var.get(u'transform')(var.get(u'_fs2').get(u'default').callprop(u'readFileSync', var.get(u'filename'), Js(u'utf8')), var.get(u'opts'))
    PyJsHoisted_transformFileSync_.func_name = u'transformFileSync'
    var.put(u'transformFileSync', PyJsHoisted_transformFileSync_)
    @Js
    def PyJsHoisted_transformFile_(filename, opts, callback, this, arguments, var=var):
        var = Scope({u'this':this, u'callback':callback, u'arguments':arguments, u'opts':opts, u'filename':filename}, var)
        var.registers([u'callback', u'opts', u'filename'])
        if PyJsComma(Js(0.0),var.get(u'_isFunction2').get(u'default'))(var.get(u'opts')):
            var.put(u'callback', var.get(u'opts'))
            PyJs_Object_43_ = Js({})
            var.put(u'opts', PyJs_Object_43_)
        var.get(u'opts').put(u'filename', var.get(u'filename'))
        @Js
        def PyJs_anonymous_44_(err, code, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'err':err}, var)
            var.registers([u'code', u'result', u'err'])
            var.put(u'result', PyJsComma(Js(0.0), Js(None)))
            if var.get(u'err').neg():
                try:
                    var.put(u'result', var.get(u'transform')(var.get(u'code'), var.get(u'opts')))
                except PyJsException as PyJsTempException:
                    PyJsHolder_5f657272_67108312 = var.own.get(u'_err')
                    var.force_own_put(u'_err', PyExceptionToJs(PyJsTempException))
                    try:
                        var.put(u'err', var.get(u'_err'))
                    finally:
                        if PyJsHolder_5f657272_67108312 is not None:
                            var.own[u'_err'] = PyJsHolder_5f657272_67108312
                        else:
                            del var.own[u'_err']
                        del PyJsHolder_5f657272_67108312
            if var.get(u'err'):
                var.get(u'callback')(var.get(u'err'))
            else:
                var.get(u'callback')(var.get(u"null"), var.get(u'result'))
        PyJs_anonymous_44_._set_name(u'anonymous')
        var.get(u'_fs2').get(u'default').callprop(u'readFile', var.get(u'filename'), PyJs_anonymous_44_)
    PyJsHoisted_transformFile_.func_name = u'transformFile'
    var.put(u'transformFile', PyJsHoisted_transformFile_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_41_ = Js({})
            var.put(u'newObj', PyJs_Object_41_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_Plugin_(alias, this, arguments, var=var):
        var = Scope({u'this':this, u'alias':alias, u'arguments':arguments}, var)
        var.registers([u'alias'])
        PyJsTempException = JsToPyException(var.get(u'Error').create(((Js(u'The (')+var.get(u'alias'))+Js(u') Babel 5 plugin is being run with Babel 6.'))))
        raise PyJsTempException
    PyJsHoisted_Plugin_.func_name = u'Plugin'
    var.put(u'Plugin', PyJsHoisted_Plugin_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    def PyJs_LONG_30_(var=var):
        return var.get(u'exports').put(u'OptionManager', var.get(u'exports').put(u'traverse', var.get(u'exports').put(u'types', var.get(u'exports').put(u'messages', var.get(u'exports').put(u'util', var.get(u'exports').put(u'version', var.get(u'exports').put(u'template', var.get(u'exports').put(u'buildExternalHelpers', var.get(u'exports').put(u'options', var.get(u'exports').put(u'File', var.get(u'undefined')))))))))))
    var.get(u'exports').put(u'transformFromAst', var.get(u'exports').put(u'transform', var.get(u'exports').put(u'analyse', var.get(u'exports').put(u'Pipeline', PyJs_LONG_30_()))))
    var.put(u'_file', var.get(u'require')(Js(u'../transformation/file')))
    @Js
    def PyJs_get_32_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_32_}, var)
        var.registers([])
        return var.get(u'_interopRequireDefault')(var.get(u'_file')).get(u'default')
    PyJs_get_32_._set_name(u'get')
    PyJs_Object_31_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_32_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'File'), PyJs_Object_31_)
    var.put(u'_config', var.get(u'require')(Js(u'../transformation/file/options/config')))
    @Js
    def PyJs_get_34_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_34_}, var)
        var.registers([])
        return var.get(u'_interopRequireDefault')(var.get(u'_config')).get(u'default')
    PyJs_get_34_._set_name(u'get')
    PyJs_Object_33_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_34_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'options'), PyJs_Object_33_)
    var.put(u'_buildExternalHelpers', var.get(u'require')(Js(u'../tools/build-external-helpers')))
    @Js
    def PyJs_get_36_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_36_}, var)
        var.registers([])
        return var.get(u'_interopRequireDefault')(var.get(u'_buildExternalHelpers')).get(u'default')
    PyJs_get_36_._set_name(u'get')
    PyJs_Object_35_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_36_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'buildExternalHelpers'), PyJs_Object_35_)
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    @Js
    def PyJs_get_38_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_38_}, var)
        var.registers([])
        return var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')).get(u'default')
    PyJs_get_38_._set_name(u'get')
    PyJs_Object_37_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_38_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'template'), PyJs_Object_37_)
    var.put(u'_package', var.get(u'require')(Js(u'../../package')))
    @Js
    def PyJs_get_40_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_40_}, var)
        var.registers([])
        return var.get(u'_package').get(u'version')
    PyJs_get_40_._set_name(u'get')
    PyJs_Object_39_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_40_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'version'), PyJs_Object_39_)
    var.get(u'exports').put(u'Plugin', var.get(u'Plugin'))
    var.get(u'exports').put(u'transformFile', var.get(u'transformFile'))
    var.get(u'exports').put(u'transformFileSync', var.get(u'transformFileSync'))
    var.put(u'_isFunction', var.get(u'require')(Js(u'lodash/isFunction')))
    var.put(u'_isFunction2', var.get(u'_interopRequireDefault')(var.get(u'_isFunction')))
    var.put(u'_fs', var.get(u'require')(Js(u'fs')))
    var.put(u'_fs2', var.get(u'_interopRequireDefault')(var.get(u'_fs')))
    var.put(u'_util', var.get(u'require')(Js(u'../util')))
    var.put(u'util', var.get(u'_interopRequireWildcard')(var.get(u'_util')))
    var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
    var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
    var.put(u'_babelTraverse2', var.get(u'_interopRequireDefault')(var.get(u'_babelTraverse')))
    var.put(u'_optionManager', var.get(u'require')(Js(u'../transformation/file/options/option-manager')))
    var.put(u'_optionManager2', var.get(u'_interopRequireDefault')(var.get(u'_optionManager')))
    var.put(u'_pipeline', var.get(u'require')(Js(u'../transformation/pipeline')))
    var.put(u'_pipeline2', var.get(u'_interopRequireDefault')(var.get(u'_pipeline')))
    pass
    pass
    var.get(u'exports').put(u'util', var.get(u'util'))
    var.get(u'exports').put(u'messages', var.get(u'messages'))
    var.get(u'exports').put(u'types', var.get(u't'))
    var.get(u'exports').put(u'traverse', var.get(u'_babelTraverse2').get(u'default'))
    var.get(u'exports').put(u'OptionManager', var.get(u'_optionManager2').get(u'default'))
    pass
    var.get(u'exports').put(u'Pipeline', var.get(u'_pipeline2').get(u'default'))
    var.put(u'pipeline', var.get(u'_pipeline2').get(u'default').create())
    var.put(u'analyse', var.get(u'exports').put(u'analyse', var.get(u'pipeline').get(u'analyse').callprop(u'bind', var.get(u'pipeline'))))
    var.put(u'transform', var.get(u'exports').put(u'transform', var.get(u'pipeline').get(u'transform').callprop(u'bind', var.get(u'pipeline'))))
    var.put(u'transformFromAst', var.get(u'exports').put(u'transformFromAst', var.get(u'pipeline').get(u'transformFromAst').callprop(u'bind', var.get(u'pipeline'))))
    pass
    pass
PyJs_anonymous_29_._set_name(u'anonymous')
PyJs_Object_46_ = Js({u'../../package':Js(28.0),u'../tools/build-external-helpers':Js(11.0),u'../transformation/file':Js(12.0),u'../transformation/file/options/config':Js(16.0),u'../transformation/file/options/option-manager':Js(18.0),u'../transformation/pipeline':Js(23.0),u'../util':Js(26.0),u'babel-messages':Js(57.0),u'babel-template':Js(221.0),u'babel-traverse':Js(225.0),u'babel-types':Js(258.0),u'fs':Js(523.0),u'lodash/isFunction':Js(463.0)})
@Js
def PyJs_anonymous_47_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_mergeWith', u'require', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_mergeWith2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_50_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_50_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_48_(dest, src, this, arguments, var=var):
        var = Scope({u'dest':dest, u'src':src, u'this':this, u'arguments':arguments}, var)
        var.registers([u'dest', u'src'])
        if (var.get(u'dest').neg() or var.get(u'src').neg()):
            return var.get('undefined')
        @Js
        def PyJs_anonymous_49_(a, b, this, arguments, var=var):
            var = Scope({u'a':a, u'this':this, u'b':b, u'arguments':arguments}, var)
            var.registers([u'a', u'_isArray', u'b', u'_iterator', u'item', u'newArray', u'_i', u'_ref'])
            if (var.get(u'b') and var.get(u'Array').callprop(u'isArray', var.get(u'a'))):
                var.put(u'newArray', var.get(u'b').callprop(u'slice', Js(0.0)))
                #for JS loop
                var.put(u'_iterator', var.get(u'a'))
                var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
                var.put(u'_i', Js(0.0))
                var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
                while 1:
                    pass
                    if var.get(u'_isArray'):
                        if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                            break
                        var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                        if var.get(u'_i').get(u'done'):
                            break
                        var.put(u'_ref', var.get(u'_i').get(u'value'))
                    var.put(u'item', var.get(u'_ref'))
                    if (var.get(u'newArray').callprop(u'indexOf', var.get(u'item'))<Js(0.0)):
                        var.get(u'newArray').callprop(u'push', var.get(u'item'))
                
                return var.get(u'newArray')
        PyJs_anonymous_49_._set_name(u'anonymous')
        return PyJsComma(Js(0.0),var.get(u'_mergeWith2').get(u'default'))(var.get(u'dest'), var.get(u'src'), PyJs_anonymous_49_)
    PyJs_anonymous_48_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_48_)
    var.put(u'_mergeWith', var.get(u'require')(Js(u'lodash/mergeWith')))
    var.put(u'_mergeWith2', var.get(u'_interopRequireDefault')(var.get(u'_mergeWith')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_47_._set_name(u'anonymous')
PyJs_Object_51_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'lodash/mergeWith':Js(478.0)})
@Js
def PyJs_anonymous_52_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'require', u'_babelTypes', u'module', u't'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_54_ = Js({})
            var.put(u'newObj', PyJs_Object_54_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_53_(ast, comments, tokens, this, arguments, var=var):
        var = Scope({u'tokens':tokens, u'this':this, u'arguments':arguments, u'comments':comments, u'ast':ast}, var)
        var.registers([u'tokens', u'comments', u'ast'])
        if var.get(u'ast'):
            if PyJsStrictEq(var.get(u'ast').get(u'type'),Js(u'Program')):
                return var.get(u't').callprop(u'file', var.get(u'ast'), (var.get(u'comments') or Js([])), (var.get(u'tokens') or Js([])))
            else:
                if PyJsStrictEq(var.get(u'ast').get(u'type'),Js(u'File')):
                    return var.get(u'ast')
        PyJsTempException = JsToPyException(var.get(u'Error').create(Js(u'Not a valid ast?')))
        raise PyJsTempException
    PyJs_anonymous_53_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_53_)
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_52_._set_name(u'anonymous')
PyJs_Object_55_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_56_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    @Js
    def PyJs_anonymous_57_(process, this, arguments, var=var):
        var = Scope({u'process':process, u'this':this, u'arguments':arguments}, var)
        var.registers([u'_module', u'_typeof2', u'_typeof3', u'process', u'relativeModules', u'_module2', u'_interopRequireDefault', u'_path2', u'_path'])
        @Js
        def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj'])
            PyJs_Object_59_ = Js({u'default':var.get(u'obj')})
            return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_59_)
        PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
        var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
        Js(u'use strict')
        var.get(u'exports').put(u'__esModule', var.get(u'true'))
        var.put(u'_typeof2', var.get(u'require')(Js(u'babel-runtime/helpers/typeof')))
        var.put(u'_typeof3', var.get(u'_interopRequireDefault')(var.get(u'_typeof2')))
        @Js
        def PyJs_anonymous_58_(loc, this, arguments, var=var):
            var = Scope({u'this':this, u'loc':loc, u'arguments':arguments}, var)
            var.registers([u'relative', u'loc', u'filename', u'relativeMod'])
            var.put(u'relative', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else var.get(u'process').callprop(u'cwd')))
            if PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'_module2').get(u'default').typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'_module2').get(u'default'))),Js(u'object')):
                return var.get(u"null")
            var.put(u'relativeMod', var.get(u'relativeModules').get(var.get(u'relative')))
            if var.get(u'relativeMod').neg():
                var.put(u'relativeMod', var.get(u'_module2').get(u'default').create())
                var.put(u'filename', var.get(u'_path2').get(u'default').callprop(u'join', var.get(u'relative'), Js(u'.babelrc')))
                var.get(u'relativeMod').put(u'id', var.get(u'filename'))
                var.get(u'relativeMod').put(u'filename', var.get(u'filename'))
                var.get(u'relativeMod').put(u'paths', var.get(u'_module2').get(u'default').callprop(u'_nodeModulePaths', var.get(u'relative')))
                var.get(u'relativeModules').put(var.get(u'relative'), var.get(u'relativeMod'))
            try:
                return var.get(u'_module2').get(u'default').callprop(u'_resolveFilename', var.get(u'loc'), var.get(u'relativeMod'))
            except PyJsException as PyJsTempException:
                PyJsHolder_657272_57087007 = var.own.get(u'err')
                var.force_own_put(u'err', PyExceptionToJs(PyJsTempException))
                try:
                    return var.get(u"null")
                finally:
                    if PyJsHolder_657272_57087007 is not None:
                        var.own[u'err'] = PyJsHolder_657272_57087007
                    else:
                        del var.own[u'err']
                    del PyJsHolder_657272_57087007
        PyJs_anonymous_58_._set_name(u'anonymous')
        var.get(u'exports').put(u'default', PyJs_anonymous_58_)
        var.put(u'_module', var.get(u'require')(Js(u'module')))
        var.put(u'_module2', var.get(u'_interopRequireDefault')(var.get(u'_module')))
        var.put(u'_path', var.get(u'require')(Js(u'path')))
        var.put(u'_path2', var.get(u'_interopRequireDefault')(var.get(u'_path')))
        pass
        PyJs_Object_60_ = Js({})
        var.put(u'relativeModules', PyJs_Object_60_)
        var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
    PyJs_anonymous_57_._set_name(u'anonymous')
    PyJs_anonymous_57_.callprop(u'call', var.get(u"this"), var.get(u'require')(Js(u'_process')))
PyJs_anonymous_56_._set_name(u'anonymous')
PyJs_Object_61_ = Js({u'_process':Js(531.0),u'babel-runtime/helpers/typeof':Js(114.0),u'module':Js(523.0),u'path':Js(530.0)})
@Js
def PyJs_anonymous_62_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_map', u'_inherits3', u'_inherits2', u'require', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'module', u'Store', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2', u'_map2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_63_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_63_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_map', var.get(u'require')(Js(u'babel-runtime/core-js/map')))
    var.put(u'_map2', var.get(u'_interopRequireDefault')(var.get(u'_map')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
    var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
    var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
    var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
    pass
    @Js
    def PyJs_anonymous_64_(_Map, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'_Map':_Map}, var)
        var.registers([u'Store', u'_Map'])
        @Js
        def PyJsHoisted_Store_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'_this'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Store'))
            var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_Map').callprop(u'call', var.get(u"this"))))
            PyJs_Object_65_ = Js({})
            var.get(u'_this').put(u'dynamicData', PyJs_Object_65_)
            return var.get(u'_this')
        PyJsHoisted_Store_.func_name = u'Store'
        var.put(u'Store', PyJsHoisted_Store_)
        PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'Store'), var.get(u'_Map'))
        pass
        @Js
        def PyJs_setDynamic_66_(key, fn, this, arguments, var=var):
            var = Scope({u'this':this, u'setDynamic':PyJs_setDynamic_66_, u'fn':fn, u'key':key, u'arguments':arguments}, var)
            var.registers([u'fn', u'key'])
            var.get(u"this").get(u'dynamicData').put(var.get(u'key'), var.get(u'fn'))
        PyJs_setDynamic_66_._set_name(u'setDynamic')
        var.get(u'Store').get(u'prototype').put(u'setDynamic', PyJs_setDynamic_66_)
        @Js
        def PyJs_get_67_(key, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'key':key, u'get':PyJs_get_67_}, var)
            var.registers([u'key', u'val'])
            if var.get(u"this").callprop(u'has', var.get(u'key')):
                return var.get(u'_Map').get(u'prototype').get(u'get').callprop(u'call', var.get(u"this"), var.get(u'key'))
            else:
                if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u"this").get(u'dynamicData'), var.get(u'key')):
                    var.put(u'val', var.get(u"this").get(u'dynamicData').callprop(var.get(u'key')))
                    var.get(u"this").callprop(u'set', var.get(u'key'), var.get(u'val'))
                    return var.get(u'val')
        PyJs_get_67_._set_name(u'get')
        var.get(u'Store').get(u'prototype').put(u'get', PyJs_get_67_)
        return var.get(u'Store')
    PyJs_anonymous_64_._set_name(u'anonymous')
    var.put(u'Store', PyJs_anonymous_64_(var.get(u'_map2').get(u'default')))
    var.get(u'exports').put(u'default', var.get(u'Store'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_62_._set_name(u'anonymous')
PyJs_Object_68_ = Js({u'babel-runtime/core-js/map':Js(98.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0)})
@Js
def PyJs_anonymous_69_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_each', u'_babelTemplate', u'module', u'_babelHelpers', u'buildGlobal', u'_interopRequireDefault', u'buildVar', u'_each2', u'_babelTemplate2', u'_babelMessages', u'exports', u'_interopRequireWildcard', u'buildUmd', u'_babelTypes', u'_babelGenerator', u'buildHelpers', u'_babelGenerator2', u'buildUmdWrapper', u'require', u'messages', u'helpers', u't'])
    @Js
    def PyJsHoisted_buildVar_(namespace, builder, this, arguments, var=var):
        var = Scope({u'this':this, u'builder':builder, u'namespace':namespace, u'arguments':arguments}, var)
        var.registers([u'body', u'builder', u'namespace'])
        var.put(u'body', Js([]))
        var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'namespace'), var.get(u't').callprop(u'objectExpression', Js([])))])))
        var.get(u'builder')(var.get(u'body'))
        var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'namespace')))
        return var.get(u't').callprop(u'program', var.get(u'body'))
    PyJsHoisted_buildVar_.func_name = u'buildVar'
    var.put(u'buildVar', PyJsHoisted_buildVar_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_74_ = Js({})
            var.put(u'newObj', PyJs_Object_74_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_buildUmd_(namespace, builder, this, arguments, var=var):
        var = Scope({u'this':this, u'builder':builder, u'namespace':namespace, u'arguments':arguments}, var)
        var.registers([u'body', u'builder', u'namespace'])
        var.put(u'body', Js([]))
        var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'namespace'), var.get(u't').callprop(u'identifier', Js(u'global')))])))
        var.get(u'builder')(var.get(u'body'))
        PyJs_Object_77_ = Js({u'FACTORY_PARAMETERS':var.get(u't').callprop(u'identifier', Js(u'global')),u'BROWSER_ARGUMENTS':var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'root')), var.get(u'namespace')), var.get(u't').callprop(u'objectExpression', Js([]))),u'COMMON_ARGUMENTS':var.get(u't').callprop(u'identifier', Js(u'exports')),u'AMD_ARGUMENTS':var.get(u't').callprop(u'arrayExpression', Js([var.get(u't').callprop(u'stringLiteral', Js(u'exports'))])),u'FACTORY_BODY':var.get(u'body'),u'UMD_ROOT':var.get(u't').callprop(u'identifier', Js(u'this'))})
        return var.get(u't').callprop(u'program', Js([var.get(u'buildUmdWrapper')(PyJs_Object_77_)]))
    PyJsHoisted_buildUmd_.func_name = u'buildUmd'
    var.put(u'buildUmd', PyJsHoisted_buildUmd_)
    @Js
    def PyJsHoisted_buildHelpers_(body, namespace, whitelist, this, arguments, var=var):
        var = Scope({u'body':body, u'this':this, u'whitelist':whitelist, u'namespace':namespace, u'arguments':arguments}, var)
        var.registers([u'body', u'whitelist', u'namespace'])
        @Js
        def PyJs_anonymous_78_(name, this, arguments, var=var):
            var = Scope({u'this':this, u'name':name, u'arguments':arguments}, var)
            var.registers([u'name', u'key'])
            if (var.get(u'whitelist') and (var.get(u'whitelist').callprop(u'indexOf', var.get(u'name'))<Js(0.0))):
                return var.get('undefined')
            var.put(u'key', var.get(u't').callprop(u'identifier', var.get(u'name')))
            var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u't').callprop(u'memberExpression', var.get(u'namespace'), var.get(u'key')), var.get(u'helpers').callprop(u'get', var.get(u'name')))))
        PyJs_anonymous_78_._set_name(u'anonymous')
        PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(var.get(u'helpers').get(u'list'), PyJs_anonymous_78_)
    PyJsHoisted_buildHelpers_.func_name = u'buildHelpers'
    var.put(u'buildHelpers', PyJsHoisted_buildHelpers_)
    @Js
    def PyJsHoisted_buildGlobal_(namespace, builder, this, arguments, var=var):
        var = Scope({u'this':this, u'builder':builder, u'namespace':namespace, u'arguments':arguments}, var)
        var.registers([u'body', u'tree', u'builder', u'namespace', u'container'])
        var.put(u'body', Js([]))
        var.put(u'container', var.get(u't').callprop(u'functionExpression', var.get(u"null"), Js([var.get(u't').callprop(u'identifier', Js(u'global'))]), var.get(u't').callprop(u'blockStatement', var.get(u'body'))))
        var.put(u'tree', var.get(u't').callprop(u'program', Js([var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'container'), Js([var.get(u'helpers').callprop(u'get', Js(u'selfGlobal'))])))])))
        def PyJs_LONG_76_(var=var):
            return var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'namespace'), var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'global')), var.get(u'namespace')), var.get(u't').callprop(u'objectExpression', Js([]))))])))
        PyJs_LONG_76_()
        var.get(u'builder')(var.get(u'body'))
        return var.get(u'tree')
    PyJsHoisted_buildGlobal_.func_name = u'buildGlobal'
    var.put(u'buildGlobal', PyJsHoisted_buildGlobal_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_73_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_73_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_70_(whitelist, this, arguments, var=var):
        var = Scope({u'this':this, u'whitelist':whitelist, u'arguments':arguments}, var)
        var.registers([u'namespace', u'whitelist', u'tree', u'outputType', u'build', u'builder'])
        var.put(u'outputType', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else Js(u'global')))
        var.put(u'namespace', var.get(u't').callprop(u'identifier', Js(u'babelHelpers')))
        @Js
        def PyJs_builder_71_(body, this, arguments, var=var):
            var = Scope({u'body':body, u'this':this, u'builder':PyJs_builder_71_, u'arguments':arguments}, var)
            var.registers([u'body'])
            return var.get(u'buildHelpers')(var.get(u'body'), var.get(u'namespace'), var.get(u'whitelist'))
        PyJs_builder_71_._set_name(u'builder')
        var.put(u'builder', PyJs_builder_71_)
        var.put(u'tree', PyJsComma(Js(0.0), Js(None)))
        PyJs_Object_72_ = Js({u'global':var.get(u'buildGlobal'),u'umd':var.get(u'buildUmd'),u'var':var.get(u'buildVar')})
        var.put(u'build', PyJs_Object_72_.get(var.get(u'outputType')))
        if var.get(u'build'):
            var.put(u'tree', var.get(u'build')(var.get(u'namespace'), var.get(u'builder')))
        else:
            PyJsTempException = JsToPyException(var.get(u'Error').create(var.get(u'messages').callprop(u'get', Js(u'unsupportedOutputType'), var.get(u'outputType'))))
            raise PyJsTempException
        return PyJsComma(Js(0.0),var.get(u'_babelGenerator2').get(u'default'))(var.get(u'tree')).get(u'code')
    PyJs_anonymous_70_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_70_)
    var.put(u'_babelHelpers', var.get(u'require')(Js(u'babel-helpers')))
    var.put(u'helpers', var.get(u'_interopRequireWildcard')(var.get(u'_babelHelpers')))
    var.put(u'_babelGenerator', var.get(u'require')(Js(u'babel-generator')))
    var.put(u'_babelGenerator2', var.get(u'_interopRequireDefault')(var.get(u'_babelGenerator')))
    var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
    var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_each', var.get(u'require')(Js(u'lodash/each')))
    var.put(u'_each2', var.get(u'_interopRequireDefault')(var.get(u'_each')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    def PyJs_LONG_75_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(AMD_ARGUMENTS, factory);\n    } else if (typeof exports === "object") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      factory(BROWSER_ARGUMENTS);\n    }\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n    FACTORY_BODY\n  });\n'))
    var.put(u'buildUmdWrapper', PyJs_LONG_75_())
    pass
    pass
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_69_._set_name(u'anonymous')
PyJs_Object_79_ = Js({u'babel-generator':Js(40.0),u'babel-helpers':Js(56.0),u'babel-messages':Js(57.0),u'babel-template':Js(221.0),u'babel-types':Js(258.0),u'lodash/each':Js(443.0)})
@Js
def PyJs_anonymous_80_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    @Js
    def PyJs_anonymous_81_(process, this, arguments, var=var):
        var = Scope({u'process':process, u'this':this, u'arguments':arguments}, var)
        var.registers([u'_resolve', u'_store', u'_sourceMap', u'_shadowFunctions2', u'_babelHelpers', u'_logger2', u'_interopRequireDefault', u'_convertSourceMap', u'_getIterator3', u'_getIterator2', u'_shadowFunctions', u'_babelCodeFrame2', u'_typeof2', u'_typeof3', u'metadataVisitor', u'INTERNAL_PLUGINS', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'_babylon', u'_create2', u'errorVisitor', u'_metadata', u'_store2', u'_assign2', u'shebangRegex', u'_blockHoist', u'_classCallCheck3', u'_classCallCheck2', u'_pluginPass2', u'_sourceMap2', u'_create', u'_convertSourceMap2', u'process', u'_babelTypes', u'_babelTraverse2', u'_interopRequireWildcard', u'_inherits3', u'_inherits2', u'_pluginPass', u'_assign', u'_babelCodeFrame', u'_babelGenerator', u'_logger', u'_util', u'_defaults2', u'_path2', u'_optionManager2', u'_babelTraverse', u'util', u'_babelGenerator2', u'_blockHoist2', u'_babelHelpers2', u'_defaults', u'_optionManager', u't', u'File', u'_resolve2', u'_path'])
        @Js
        def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj'])
            PyJs_Object_83_ = Js({u'default':var.get(u'obj')})
            return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_83_)
        PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
        var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
        @Js
        def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj', u'key', u'newObj'])
            if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
                return var.get(u'obj')
            else:
                PyJs_Object_82_ = Js({})
                var.put(u'newObj', PyJs_Object_82_)
                if (var.get(u'obj')!=var.get(u"null")):
                    for PyJsTemp in var.get(u'obj'):
                        var.put(u'key', PyJsTemp)
                        if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                            var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
                var.get(u'newObj').put(u'default', var.get(u'obj'))
                return var.get(u'newObj')
        PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
        var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
        Js(u'use strict')
        var.get(u'exports').put(u'__esModule', var.get(u'true'))
        var.get(u'exports').put(u'File', var.get(u'undefined'))
        var.put(u'_typeof2', var.get(u'require')(Js(u'babel-runtime/helpers/typeof')))
        var.put(u'_typeof3', var.get(u'_interopRequireDefault')(var.get(u'_typeof2')))
        var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
        var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
        var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
        var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
        var.put(u'_assign', var.get(u'require')(Js(u'babel-runtime/core-js/object/assign')))
        var.put(u'_assign2', var.get(u'_interopRequireDefault')(var.get(u'_assign')))
        var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
        var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
        var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
        var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
        var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
        var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
        var.put(u'_babelHelpers', var.get(u'require')(Js(u'babel-helpers')))
        var.put(u'_babelHelpers2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelpers')))
        var.put(u'_metadata', var.get(u'require')(Js(u'./metadata')))
        var.put(u'metadataVisitor', var.get(u'_interopRequireWildcard')(var.get(u'_metadata')))
        var.put(u'_convertSourceMap', var.get(u'require')(Js(u'convert-source-map')))
        var.put(u'_convertSourceMap2', var.get(u'_interopRequireDefault')(var.get(u'_convertSourceMap')))
        var.put(u'_optionManager', var.get(u'require')(Js(u'./options/option-manager')))
        var.put(u'_optionManager2', var.get(u'_interopRequireDefault')(var.get(u'_optionManager')))
        var.put(u'_pluginPass', var.get(u'require')(Js(u'../plugin-pass')))
        var.put(u'_pluginPass2', var.get(u'_interopRequireDefault')(var.get(u'_pluginPass')))
        var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
        var.put(u'_babelTraverse2', var.get(u'_interopRequireDefault')(var.get(u'_babelTraverse')))
        var.put(u'_sourceMap', var.get(u'require')(Js(u'source-map')))
        var.put(u'_sourceMap2', var.get(u'_interopRequireDefault')(var.get(u'_sourceMap')))
        var.put(u'_babelGenerator', var.get(u'require')(Js(u'babel-generator')))
        var.put(u'_babelGenerator2', var.get(u'_interopRequireDefault')(var.get(u'_babelGenerator')))
        var.put(u'_babelCodeFrame', var.get(u'require')(Js(u'babel-code-frame')))
        var.put(u'_babelCodeFrame2', var.get(u'_interopRequireDefault')(var.get(u'_babelCodeFrame')))
        var.put(u'_defaults', var.get(u'require')(Js(u'lodash/defaults')))
        var.put(u'_defaults2', var.get(u'_interopRequireDefault')(var.get(u'_defaults')))
        var.put(u'_logger', var.get(u'require')(Js(u'./logger')))
        var.put(u'_logger2', var.get(u'_interopRequireDefault')(var.get(u'_logger')))
        var.put(u'_store', var.get(u'require')(Js(u'../../store')))
        var.put(u'_store2', var.get(u'_interopRequireDefault')(var.get(u'_store')))
        var.put(u'_babylon', var.get(u'require')(Js(u'babylon')))
        var.put(u'_util', var.get(u'require')(Js(u'../../util')))
        var.put(u'util', var.get(u'_interopRequireWildcard')(var.get(u'_util')))
        var.put(u'_path', var.get(u'require')(Js(u'path')))
        var.put(u'_path2', var.get(u'_interopRequireDefault')(var.get(u'_path')))
        var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
        var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
        var.put(u'_resolve', var.get(u'require')(Js(u'../../helpers/resolve')))
        var.put(u'_resolve2', var.get(u'_interopRequireDefault')(var.get(u'_resolve')))
        var.put(u'_blockHoist', var.get(u'require')(Js(u'../internal-plugins/block-hoist')))
        var.put(u'_blockHoist2', var.get(u'_interopRequireDefault')(var.get(u'_blockHoist')))
        var.put(u'_shadowFunctions', var.get(u'require')(Js(u'../internal-plugins/shadow-functions')))
        var.put(u'_shadowFunctions2', var.get(u'_interopRequireDefault')(var.get(u'_shadowFunctions')))
        pass
        pass
        var.put(u'shebangRegex', JsRegExp(u'/^#!.*/'))
        var.put(u'INTERNAL_PLUGINS', Js([Js([var.get(u'_blockHoist2').get(u'default')]), Js([var.get(u'_shadowFunctions2').get(u'default')])]))
        @Js
        def PyJs_enter_85_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'enter':PyJs_enter_85_}, var)
            var.registers([u'loc', u'state', u'path'])
            var.put(u'loc', var.get(u'path').get(u'node').get(u'loc'))
            if var.get(u'loc'):
                var.get(u'state').put(u'loc', var.get(u'loc'))
                var.get(u'path').callprop(u'stop')
        PyJs_enter_85_._set_name(u'enter')
        PyJs_Object_84_ = Js({u'enter':PyJs_enter_85_})
        var.put(u'errorVisitor', PyJs_Object_84_)
        @Js
        def PyJs_anonymous_86_(_Store, this, arguments, var=var):
            var = Scope({u'this':this, u'_Store':_Store, u'arguments':arguments}, var)
            var.registers([u'_Store', u'File'])
            @Js
            def PyJsHoisted_File_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([u'pipeline', u'_this', u'opts'])
                PyJs_Object_87_ = Js({})
                var.put(u'opts', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else PyJs_Object_87_))
                var.put(u'pipeline', var.get(u'arguments').get(u'1'))
                PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'File'))
                var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_Store').callprop(u'call', var.get(u"this"))))
                var.get(u'_this').put(u'pipeline', var.get(u'pipeline'))
                var.get(u'_this').put(u'log', var.get(u'_logger2').get(u'default').create(var.get(u'_this'), (var.get(u'opts').get(u'filename') or Js(u'unknown'))))
                var.get(u'_this').put(u'opts', var.get(u'_this').callprop(u'initOptions', var.get(u'opts')))
                PyJs_Object_88_ = Js({u'sourceType':var.get(u'_this').get(u'opts').get(u'sourceType'),u'sourceFileName':var.get(u'_this').get(u'opts').get(u'filename'),u'plugins':Js([])})
                var.get(u'_this').put(u'parserOpts', PyJs_Object_88_)
                var.get(u'_this').put(u'pluginVisitors', Js([]))
                var.get(u'_this').put(u'pluginPasses', Js([]))
                var.get(u'_this').callprop(u'buildPluginsForOptions', var.get(u'_this').get(u'opts'))
                if var.get(u'_this').get(u'opts').get(u'passPerPreset'):
                    var.get(u'_this').put(u'perPresetOpts', Js([]))
                    @Js
                    def PyJs_anonymous_89_(presetOpts, this, arguments, var=var):
                        var = Scope({u'this':this, u'presetOpts':presetOpts, u'arguments':arguments}, var)
                        var.registers([u'presetOpts', u'perPresetOpts'])
                        var.put(u'perPresetOpts', PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u'_this').get(u'opts')), var.get(u'presetOpts')))
                        var.get(u'_this').get(u'perPresetOpts').callprop(u'push', var.get(u'perPresetOpts'))
                        var.get(u'_this').callprop(u'buildPluginsForOptions', var.get(u'perPresetOpts'))
                    PyJs_anonymous_89_._set_name(u'anonymous')
                    var.get(u'_this').get(u'opts').get(u'presets').callprop(u'forEach', PyJs_anonymous_89_)
                PyJs_Object_92_ = Js({u'exported':Js([]),u'specifiers':Js([])})
                PyJs_Object_91_ = Js({u'imports':Js([]),u'exports':PyJs_Object_92_})
                PyJs_Object_90_ = Js({u'usedHelpers':Js([]),u'marked':Js([]),u'modules':PyJs_Object_91_})
                var.get(u'_this').put(u'metadata', PyJs_Object_90_)
                PyJs_Object_93_ = Js({})
                var.get(u'_this').put(u'dynamicImportTypes', PyJs_Object_93_)
                PyJs_Object_94_ = Js({})
                var.get(u'_this').put(u'dynamicImportIds', PyJs_Object_94_)
                var.get(u'_this').put(u'dynamicImports', Js([]))
                PyJs_Object_95_ = Js({})
                var.get(u'_this').put(u'declarations', PyJs_Object_95_)
                PyJs_Object_96_ = Js({})
                var.get(u'_this').put(u'usedHelpers', PyJs_Object_96_)
                var.get(u'_this').put(u'path', var.get(u"null"))
                PyJs_Object_97_ = Js({})
                var.get(u'_this').put(u'ast', PyJs_Object_97_)
                var.get(u'_this').put(u'code', Js(u''))
                var.get(u'_this').put(u'shebang', Js(u''))
                var.get(u'_this').put(u'hub', var.get(u'_babelTraverse').get(u'Hub').create(var.get(u'_this')))
                return var.get(u'_this')
            PyJsHoisted_File_.func_name = u'File'
            var.put(u'File', PyJsHoisted_File_)
            PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'File'), var.get(u'_Store'))
            pass
            @Js
            def PyJs_getMetadata_98_(this, arguments, var=var):
                var = Scope({u'this':this, u'getMetadata':PyJs_getMetadata_98_, u'arguments':arguments}, var)
                var.registers([u'node', u'_isArray', u'_iterator', u'_i', u'_ref', u'has'])
                var.put(u'has', Js(False))
                #for JS loop
                var.put(u'_iterator', var.get(u"this").get(u'ast').get(u'program').get(u'body'))
                var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
                var.put(u'_i', Js(0.0))
                var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
                while 1:
                    pass
                    if var.get(u'_isArray'):
                        if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                            break
                        var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                        if var.get(u'_i').get(u'done'):
                            break
                        var.put(u'_ref', var.get(u'_i').get(u'value'))
                    var.put(u'node', var.get(u'_ref'))
                    if var.get(u't').callprop(u'isModuleDeclaration', var.get(u'node')):
                        var.put(u'has', var.get(u'true'))
                        break
                
                if var.get(u'has'):
                    var.get(u"this").get(u'path').callprop(u'traverse', var.get(u'metadataVisitor'), var.get(u"this"))
            PyJs_getMetadata_98_._set_name(u'getMetadata')
            var.get(u'File').get(u'prototype').put(u'getMetadata', PyJs_getMetadata_98_)
            @Js
            def PyJs_initOptions_99_(opts, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'opts':opts, u'initOptions':PyJs_initOptions_99_}, var)
                var.registers([u'basenameRelative', u'opts'])
                var.put(u'opts', var.get(u'_optionManager2').get(u'default').create(var.get(u"this").get(u'log'), var.get(u"this").get(u'pipeline')).callprop(u'init', var.get(u'opts')))
                if var.get(u'opts').get(u'inputSourceMap'):
                    var.get(u'opts').put(u'sourceMaps', var.get(u'true'))
                if var.get(u'opts').get(u'moduleId'):
                    var.get(u'opts').put(u'moduleIds', var.get(u'true'))
                var.get(u'opts').put(u'basename', var.get(u'_path2').get(u'default').callprop(u'basename', var.get(u'opts').get(u'filename'), var.get(u'_path2').get(u'default').callprop(u'extname', var.get(u'opts').get(u'filename'))))
                var.get(u'opts').put(u'ignore', var.get(u'util').callprop(u'arrayify', var.get(u'opts').get(u'ignore'), var.get(u'util').get(u'regexify')))
                if var.get(u'opts').get(u'only'):
                    var.get(u'opts').put(u'only', var.get(u'util').callprop(u'arrayify', var.get(u'opts').get(u'only'), var.get(u'util').get(u'regexify')))
                PyJs_Object_100_ = Js({u'moduleRoot':var.get(u'opts').get(u'sourceRoot')})
                PyJsComma(Js(0.0),var.get(u'_defaults2').get(u'default'))(var.get(u'opts'), PyJs_Object_100_)
                PyJs_Object_101_ = Js({u'sourceRoot':var.get(u'opts').get(u'moduleRoot')})
                PyJsComma(Js(0.0),var.get(u'_defaults2').get(u'default'))(var.get(u'opts'), PyJs_Object_101_)
                PyJs_Object_102_ = Js({u'filenameRelative':var.get(u'opts').get(u'filename')})
                PyJsComma(Js(0.0),var.get(u'_defaults2').get(u'default'))(var.get(u'opts'), PyJs_Object_102_)
                var.put(u'basenameRelative', var.get(u'_path2').get(u'default').callprop(u'basename', var.get(u'opts').get(u'filenameRelative')))
                PyJs_Object_103_ = Js({u'sourceFileName':var.get(u'basenameRelative'),u'sourceMapTarget':var.get(u'basenameRelative')})
                PyJsComma(Js(0.0),var.get(u'_defaults2').get(u'default'))(var.get(u'opts'), PyJs_Object_103_)
                return var.get(u'opts')
            PyJs_initOptions_99_._set_name(u'initOptions')
            var.get(u'File').get(u'prototype').put(u'initOptions', PyJs_initOptions_99_)
            @Js
            def PyJs_buildPluginsForOptions_104_(opts, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'opts':opts, u'buildPluginsForOptions':PyJs_buildPluginsForOptions_104_}, var)
                var.registers([u'pluginOpts', u'_isArray2', u'plugin', u'_i2', u'_ref2', u'opts', u'plugins', u'currentPluginPasses', u'ref', u'currentPluginVisitors', u'_iterator2'])
                if var.get(u'Array').callprop(u'isArray', var.get(u'opts').get(u'plugins')).neg():
                    return var.get('undefined')
                var.put(u'plugins', var.get(u'opts').get(u'plugins').callprop(u'concat', var.get(u'INTERNAL_PLUGINS')))
                var.put(u'currentPluginVisitors', Js([]))
                var.put(u'currentPluginPasses', Js([]))
                #for JS loop
                var.put(u'_iterator2', var.get(u'plugins'))
                var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
                var.put(u'_i2', Js(0.0))
                var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
                while 1:
                    pass
                    if var.get(u'_isArray2'):
                        if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                            break
                        var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                        if var.get(u'_i2').get(u'done'):
                            break
                        var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                    var.put(u'ref', var.get(u'_ref2'))
                    var.put(u'plugin', var.get(u'ref').get(u'0'))
                    var.put(u'pluginOpts', var.get(u'ref').get(u'1'))
                    var.get(u'currentPluginVisitors').callprop(u'push', var.get(u'plugin').get(u'visitor'))
                    var.get(u'currentPluginPasses').callprop(u'push', var.get(u'_pluginPass2').get(u'default').create(var.get(u"this"), var.get(u'plugin'), var.get(u'pluginOpts')))
                    if var.get(u'plugin').get(u'manipulateOptions'):
                        var.get(u'plugin').callprop(u'manipulateOptions', var.get(u'opts'), var.get(u"this").get(u'parserOpts'), var.get(u"this"))
                
                var.get(u"this").get(u'pluginVisitors').callprop(u'push', var.get(u'currentPluginVisitors'))
                var.get(u"this").get(u'pluginPasses').callprop(u'push', var.get(u'currentPluginPasses'))
            PyJs_buildPluginsForOptions_104_._set_name(u'buildPluginsForOptions')
            var.get(u'File').get(u'prototype').put(u'buildPluginsForOptions', PyJs_buildPluginsForOptions_104_)
            @Js
            def PyJs_getModuleName_105_(this, arguments, var=var):
                var = Scope({u'this':this, u'getModuleName':PyJs_getModuleName_105_, u'arguments':arguments}, var)
                var.registers([u'moduleName', u'sourceRootRegEx', u'opts', u'filenameRelative'])
                var.put(u'opts', var.get(u"this").get(u'opts'))
                if var.get(u'opts').get(u'moduleIds').neg():
                    return var.get(u"null")
                if ((var.get(u'opts').get(u'moduleId')!=var.get(u"null")) and var.get(u'opts').get(u'getModuleId').neg()):
                    return var.get(u'opts').get(u'moduleId')
                var.put(u'filenameRelative', var.get(u'opts').get(u'filenameRelative'))
                var.put(u'moduleName', Js(u''))
                if (var.get(u'opts').get(u'moduleRoot')!=var.get(u"null")):
                    var.put(u'moduleName', (var.get(u'opts').get(u'moduleRoot')+Js(u'/')))
                if var.get(u'opts').get(u'filenameRelative').neg():
                    return (var.get(u'moduleName')+var.get(u'opts').get(u'filename').callprop(u'replace', JsRegExp(u'/^\\//'), Js(u'')))
                if (var.get(u'opts').get(u'sourceRoot')!=var.get(u"null")):
                    var.put(u'sourceRootRegEx', var.get(u'RegExp').create(((Js(u'^')+var.get(u'opts').get(u'sourceRoot'))+Js(u'/?'))))
                    var.put(u'filenameRelative', var.get(u'filenameRelative').callprop(u'replace', var.get(u'sourceRootRegEx'), Js(u'')))
                var.put(u'filenameRelative', var.get(u'filenameRelative').callprop(u'replace', JsRegExp(u'/\\.(\\w*?)$/'), Js(u'')))
                var.put(u'moduleName', var.get(u'filenameRelative'), u'+')
                var.put(u'moduleName', var.get(u'moduleName').callprop(u'replace', JsRegExp(u'/\\\\/g'), Js(u'/')))
                if var.get(u'opts').get(u'getModuleId'):
                    return (var.get(u'opts').callprop(u'getModuleId', var.get(u'moduleName')) or var.get(u'moduleName'))
                else:
                    return var.get(u'moduleName')
            PyJs_getModuleName_105_._set_name(u'getModuleName')
            var.get(u'File').get(u'prototype').put(u'getModuleName', PyJs_getModuleName_105_)
            @Js
            def PyJs_resolveModuleSource_106_(source, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'resolveModuleSource':PyJs_resolveModuleSource_106_, u'arguments':arguments}, var)
                var.registers([u'resolveModuleSource', u'source'])
                var.put(u'resolveModuleSource', var.get(u"this").get(u'opts').get(u'resolveModuleSource'))
                if var.get(u'resolveModuleSource'):
                    var.put(u'source', var.get(u'resolveModuleSource')(var.get(u'source'), var.get(u"this").get(u'opts').get(u'filename')))
                return var.get(u'source')
            PyJs_resolveModuleSource_106_._set_name(u'resolveModuleSource')
            var.get(u'File').get(u'prototype').put(u'resolveModuleSource', PyJs_resolveModuleSource_106_)
            @Js
            def PyJs_addImport_107_(source, imported, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'imported':imported, u'arguments':arguments, u'addImport':PyJs_addImport_107_}, var)
                var.registers([u'specifiers', u'imported', u'name', u'alias', u'source', u'declar', u'id'])
                var.put(u'name', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else var.get(u'imported')))
                var.put(u'alias', ((var.get(u'source')+Js(u':'))+var.get(u'imported')))
                var.put(u'id', var.get(u"this").get(u'dynamicImportIds').get(var.get(u'alias')))
                if var.get(u'id').neg():
                    var.put(u'source', var.get(u"this").callprop(u'resolveModuleSource', var.get(u'source')))
                    var.put(u'id', var.get(u"this").get(u'dynamicImportIds').put(var.get(u'alias'), var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', var.get(u'name'))))
                    var.put(u'specifiers', Js([]))
                    if PyJsStrictEq(var.get(u'imported'),Js(u'*')):
                        var.get(u'specifiers').callprop(u'push', var.get(u't').callprop(u'importNamespaceSpecifier', var.get(u'id')))
                    else:
                        if PyJsStrictEq(var.get(u'imported'),Js(u'default')):
                            var.get(u'specifiers').callprop(u'push', var.get(u't').callprop(u'importDefaultSpecifier', var.get(u'id')))
                        else:
                            var.get(u'specifiers').callprop(u'push', var.get(u't').callprop(u'importSpecifier', var.get(u'id'), var.get(u't').callprop(u'identifier', var.get(u'imported'))))
                    var.put(u'declar', var.get(u't').callprop(u'importDeclaration', var.get(u'specifiers'), var.get(u't').callprop(u'stringLiteral', var.get(u'source'))))
                    var.get(u'declar').put(u'_blockHoist', Js(3.0))
                    var.get(u"this").get(u'path').callprop(u'unshiftContainer', Js(u'body'), var.get(u'declar'))
                return var.get(u'id')
            PyJs_addImport_107_._set_name(u'addImport')
            var.get(u'File').get(u'prototype').put(u'addImport', PyJs_addImport_107_)
            @Js
            def PyJs_addHelper_108_(name, this, arguments, var=var):
                var = Scope({u'this':this, u'addHelper':PyJs_addHelper_108_, u'name':name, u'arguments':arguments}, var)
                var.registers([u'uid', u'generator', u'res', u'declar', u'runtime', u'ref', u'name'])
                var.put(u'declar', var.get(u"this").get(u'declarations').get(var.get(u'name')))
                if var.get(u'declar'):
                    return var.get(u'declar')
                if var.get(u"this").get(u'usedHelpers').get(var.get(u'name')).neg():
                    var.get(u"this").get(u'metadata').get(u'usedHelpers').callprop(u'push', var.get(u'name'))
                    var.get(u"this").get(u'usedHelpers').put(var.get(u'name'), var.get(u'true'))
                var.put(u'generator', var.get(u"this").callprop(u'get', Js(u'helperGenerator')))
                var.put(u'runtime', var.get(u"this").callprop(u'get', Js(u'helpersNamespace')))
                if var.get(u'generator'):
                    var.put(u'res', var.get(u'generator')(var.get(u'name')))
                    if var.get(u'res'):
                        return var.get(u'res')
                else:
                    if var.get(u'runtime'):
                        return var.get(u't').callprop(u'memberExpression', var.get(u'runtime'), var.get(u't').callprop(u'identifier', var.get(u'name')))
                var.put(u'ref', PyJsComma(Js(0.0),var.get(u'_babelHelpers2').get(u'default'))(var.get(u'name')))
                var.put(u'uid', var.get(u"this").get(u'declarations').put(var.get(u'name'), var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', var.get(u'name'))))
                if (var.get(u't').callprop(u'isFunctionExpression', var.get(u'ref')) and var.get(u'ref').get(u'id').neg()):
                    var.get(u'ref').get(u'body').put(u'_compact', var.get(u'true'))
                    var.get(u'ref').put(u'_generated', var.get(u'true'))
                    var.get(u'ref').put(u'id', var.get(u'uid'))
                    var.get(u'ref').put(u'type', Js(u'FunctionDeclaration'))
                    var.get(u"this").get(u'path').callprop(u'unshiftContainer', Js(u'body'), var.get(u'ref'))
                else:
                    var.get(u'ref').put(u'_compact', var.get(u'true'))
                    PyJs_Object_109_ = Js({u'id':var.get(u'uid'),u'init':var.get(u'ref'),u'unique':var.get(u'true')})
                    var.get(u"this").get(u'scope').callprop(u'push', PyJs_Object_109_)
                return var.get(u'uid')
            PyJs_addHelper_108_._set_name(u'addHelper')
            var.get(u'File').get(u'prototype').put(u'addHelper', PyJs_addHelper_108_)
            @Js
            def PyJs_addTemplateObject_110_(helperName, strings, raw, this, arguments, var=var):
                var = Scope({u'this':this, u'helperName':helperName, u'raw':raw, u'arguments':arguments, u'addTemplateObject':PyJs_addTemplateObject_110_, u'strings':strings}, var)
                var.registers([u'name', u'helperName', u'raw', u'init', u'declar', u'stringIds', u'helperId', u'strings', u'uid'])
                @Js
                def PyJs_anonymous_111_(string, this, arguments, var=var):
                    var = Scope({u'this':this, u'string':string, u'arguments':arguments}, var)
                    var.registers([u'string'])
                    return var.get(u'string').get(u'value')
                PyJs_anonymous_111_._set_name(u'anonymous')
                var.put(u'stringIds', var.get(u'raw').get(u'elements').callprop(u'map', PyJs_anonymous_111_))
                var.put(u'name', ((((var.get(u'helperName')+Js(u'_'))+var.get(u'raw').get(u'elements').get(u'length'))+Js(u'_'))+var.get(u'stringIds').callprop(u'join', Js(u','))))
                var.put(u'declar', var.get(u"this").get(u'declarations').get(var.get(u'name')))
                if var.get(u'declar'):
                    return var.get(u'declar')
                var.put(u'uid', var.get(u"this").get(u'declarations').put(var.get(u'name'), var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', Js(u'templateObject'))))
                var.put(u'helperId', var.get(u"this").callprop(u'addHelper', var.get(u'helperName')))
                var.put(u'init', var.get(u't').callprop(u'callExpression', var.get(u'helperId'), Js([var.get(u'strings'), var.get(u'raw')])))
                var.get(u'init').put(u'_compact', var.get(u'true'))
                PyJs_Object_112_ = Js({u'id':var.get(u'uid'),u'init':var.get(u'init'),u'_blockHoist':Js(1.9)})
                var.get(u"this").get(u'scope').callprop(u'push', PyJs_Object_112_)
                return var.get(u'uid')
            PyJs_addTemplateObject_110_._set_name(u'addTemplateObject')
            var.get(u'File').get(u'prototype').put(u'addTemplateObject', PyJs_addTemplateObject_110_)
            @Js
            def PyJs_buildCodeFrameError_113_(node, msg, this, arguments, var=var):
                var = Scope({u'node':node, u'msg':msg, u'buildCodeFrameError':PyJs_buildCodeFrameError_113_, u'this':this, u'arguments':arguments}, var)
                var.registers([u'node', u'loc', u'msg', u'err', u'Error'])
                var.put(u'Error', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else var.get(u'SyntaxError')))
                var.put(u'loc', (var.get(u'node') and (var.get(u'node').get(u'loc') or var.get(u'node').get(u'_loc'))))
                var.put(u'err', var.get(u'Error').create(var.get(u'msg')))
                if var.get(u'loc'):
                    var.get(u'err').put(u'loc', var.get(u'loc').get(u'start'))
                else:
                    PyJsComma(Js(0.0),var.get(u'_babelTraverse2').get(u'default'))(var.get(u'node'), var.get(u'errorVisitor'), var.get(u"this").get(u'scope'), var.get(u'err'))
                    var.get(u'err').put(u'message', Js(u' (This is an error on an internal node. Probably an internal error'), u'+')
                    if var.get(u'err').get(u'loc'):
                        var.get(u'err').put(u'message', Js(u'. Location has been estimated.'), u'+')
                    var.get(u'err').put(u'message', Js(u')'), u'+')
                return var.get(u'err')
            PyJs_buildCodeFrameError_113_._set_name(u'buildCodeFrameError')
            var.get(u'File').get(u'prototype').put(u'buildCodeFrameError', PyJs_buildCodeFrameError_113_)
            @Js
            def PyJs_mergeSourceMap_114_(map, this, arguments, var=var):
                var = Scope({u'this':this, u'map':map, u'arguments':arguments, u'mergeSourceMap':PyJs_mergeSourceMap_114_}, var)
                var.registers([u'_ret', u'map', u'inputMap'])
                var.put(u'inputMap', var.get(u"this").get(u'opts').get(u'inputSourceMap'))
                if var.get(u'inputMap'):
                    @Js
                    def PyJs_anonymous_115_(this, arguments, var=var):
                        var = Scope({u'this':this, u'arguments':arguments}, var)
                        var.registers([u'mergedGenerator', u'source', u'mergedMap', u'outputMapConsumer', u'inputMapConsumer'])
                        var.put(u'inputMapConsumer', var.get(u'_sourceMap2').get(u'default').get(u'SourceMapConsumer').create(var.get(u'inputMap')))
                        var.put(u'outputMapConsumer', var.get(u'_sourceMap2').get(u'default').get(u'SourceMapConsumer').create(var.get(u'map')))
                        PyJs_Object_116_ = Js({u'file':var.get(u'inputMapConsumer').get(u'file'),u'sourceRoot':var.get(u'inputMapConsumer').get(u'sourceRoot')})
                        var.put(u'mergedGenerator', var.get(u'_sourceMap2').get(u'default').get(u'SourceMapGenerator').create(PyJs_Object_116_))
                        var.put(u'source', var.get(u'outputMapConsumer').get(u'sources').get(u'0'))
                        @Js
                        def PyJs_anonymous_117_(mapping, this, arguments, var=var):
                            var = Scope({u'this':this, u'mapping':mapping, u'arguments':arguments}, var)
                            var.registers([u'generatedPosition', u'mapping'])
                            PyJs_Object_118_ = Js({u'line':var.get(u'mapping').get(u'generatedLine'),u'column':var.get(u'mapping').get(u'generatedColumn'),u'source':var.get(u'source')})
                            var.put(u'generatedPosition', var.get(u'outputMapConsumer').callprop(u'generatedPositionFor', PyJs_Object_118_))
                            if (var.get(u'generatedPosition').get(u'column')!=var.get(u"null")):
                                PyJs_Object_120_ = Js({u'line':var.get(u'mapping').get(u'originalLine'),u'column':var.get(u'mapping').get(u'originalColumn')})
                                PyJs_Object_119_ = Js({u'source':var.get(u'mapping').get(u'source'),u'original':(var.get(u"null") if (var.get(u'mapping').get(u'source')==var.get(u"null")) else PyJs_Object_120_),u'generated':var.get(u'generatedPosition')})
                                var.get(u'mergedGenerator').callprop(u'addMapping', PyJs_Object_119_)
                        PyJs_anonymous_117_._set_name(u'anonymous')
                        var.get(u'inputMapConsumer').callprop(u'eachMapping', PyJs_anonymous_117_)
                        var.put(u'mergedMap', var.get(u'mergedGenerator').callprop(u'toJSON'))
                        var.get(u'inputMap').put(u'mappings', var.get(u'mergedMap').get(u'mappings'))
                        PyJs_Object_121_ = Js({u'v':var.get(u'inputMap')})
                        return PyJs_Object_121_
                    PyJs_anonymous_115_._set_name(u'anonymous')
                    var.put(u'_ret', PyJs_anonymous_115_())
                    if PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'_ret',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'_ret'))),Js(u'object')):
                        return var.get(u'_ret').get(u'v')
                else:
                    return var.get(u'map')
            PyJs_mergeSourceMap_114_._set_name(u'mergeSourceMap')
            var.get(u'File').get(u'prototype').put(u'mergeSourceMap', PyJs_mergeSourceMap_114_)
            @Js
            def PyJs_parse_122_(code, this, arguments, var=var):
                var = Scope({u'this':this, u'parse':PyJs_parse_122_, u'code':code, u'arguments':arguments}, var)
                var.registers([u'code', u'ast', u'parser', u'parseCode', u'dirname', u'parserOpts'])
                var.put(u'parseCode', var.get(u'_babylon').get(u'parse'))
                var.put(u'parserOpts', var.get(u"this").get(u'opts').get(u'parserOpts'))
                if var.get(u'parserOpts'):
                    PyJs_Object_123_ = Js({})
                    var.put(u'parserOpts', PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(PyJs_Object_123_, var.get(u"this").get(u'parserOpts'), var.get(u'parserOpts')))
                    if var.get(u'parserOpts').get(u'parser'):
                        if PyJsStrictEq(var.get(u'parserOpts').get(u'parser').typeof(),Js(u'string')):
                            var.put(u'dirname', (var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u"this").get(u'opts').get(u'filename')) or var.get(u'process').callprop(u'cwd')))
                            var.put(u'parser', PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'parserOpts').get(u'parser'), var.get(u'dirname')))
                            if var.get(u'parser'):
                                var.put(u'parseCode', var.get(u'require')(var.get(u'parser')).get(u'parse'))
                            else:
                                PyJsTempException = JsToPyException(var.get(u'Error').create((((Js(u"Couldn't find parser ")+var.get(u'parserOpts').get(u'parser'))+Js(u' with "parse" method relative to directory '))+var.get(u'dirname'))))
                                raise PyJsTempException
                        else:
                            var.put(u'parseCode', var.get(u'parserOpts').get(u'parser'))
                        @Js
                        def PyJs_parse_125_(source, this, arguments, var=var):
                            var = Scope({u'this':this, u'source':source, u'parse':PyJs_parse_125_, u'arguments':arguments}, var)
                            var.registers([u'source'])
                            return PyJsComma(Js(0.0),var.get(u'_babylon').get(u'parse'))(var.get(u'source'), var.get(u'parserOpts'))
                        PyJs_parse_125_._set_name(u'parse')
                        PyJs_Object_124_ = Js({u'parse':PyJs_parse_125_})
                        var.get(u'parserOpts').put(u'parser', PyJs_Object_124_)
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'Parse start'))
                var.put(u'ast', var.get(u'parseCode')(var.get(u'code'), (var.get(u'parserOpts') or var.get(u"this").get(u'parserOpts'))))
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'Parse stop'))
                return var.get(u'ast')
            PyJs_parse_122_._set_name(u'parse')
            var.get(u'File').get(u'prototype').put(u'parse', PyJs_parse_122_)
            @Js
            def PyJs__addAst_126_(ast, this, arguments, var=var):
                var = Scope({u'this':this, u'_addAst':PyJs__addAst_126_, u'arguments':arguments, u'ast':ast}, var)
                var.registers([u'ast'])
                PyJs_Object_127_ = Js({u'hub':var.get(u"this").get(u'hub'),u'parentPath':var.get(u"null"),u'parent':var.get(u'ast'),u'container':var.get(u'ast'),u'key':Js(u'program')})
                var.get(u"this").put(u'path', var.get(u'_babelTraverse').get(u'NodePath').callprop(u'get', PyJs_Object_127_).callprop(u'setContext'))
                var.get(u"this").put(u'scope', var.get(u"this").get(u'path').get(u'scope'))
                var.get(u"this").put(u'ast', var.get(u'ast'))
                var.get(u"this").callprop(u'getMetadata')
            PyJs__addAst_126_._set_name(u'_addAst')
            var.get(u'File').get(u'prototype').put(u'_addAst', PyJs__addAst_126_)
            @Js
            def PyJs_addAst_128_(ast, this, arguments, var=var):
                var = Scope({u'this':this, u'addAst':PyJs_addAst_128_, u'arguments':arguments, u'ast':ast}, var)
                var.registers([u'ast'])
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'Start set AST'))
                var.get(u"this").callprop(u'_addAst', var.get(u'ast'))
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'End set AST'))
            PyJs_addAst_128_._set_name(u'addAst')
            var.get(u'File').get(u'prototype').put(u'addAst', PyJs_addAst_128_)
            @Js
            def PyJs_transform_129_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'transform':PyJs_transform_129_}, var)
                var.registers([u'i', u'visitor', u'pluginPasses'])
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u"this").get(u'pluginPasses').get(u'length')):
                    try:
                        var.put(u'pluginPasses', var.get(u"this").get(u'pluginPasses').get(var.get(u'i')))
                        var.get(u"this").callprop(u'call', Js(u'pre'), var.get(u'pluginPasses'))
                        var.get(u"this").get(u'log').callprop(u'debug', Js(u'Start transform traverse'))
                        var.put(u'visitor', var.get(u'_babelTraverse2').get(u'default').get(u'visitors').callprop(u'merge', var.get(u"this").get(u'pluginVisitors').get(var.get(u'i')), var.get(u'pluginPasses'), var.get(u"this").get(u'opts').get(u'wrapPluginVisitorMethod')))
                        PyJsComma(Js(0.0),var.get(u'_babelTraverse2').get(u'default'))(var.get(u"this").get(u'ast'), var.get(u'visitor'), var.get(u"this").get(u'scope'))
                        var.get(u"this").get(u'log').callprop(u'debug', Js(u'End transform traverse'))
                        var.get(u"this").callprop(u'call', Js(u'post'), var.get(u'pluginPasses'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                return var.get(u"this").callprop(u'generate')
            PyJs_transform_129_._set_name(u'transform')
            var.get(u'File').get(u'prototype').put(u'transform', PyJs_transform_129_)
            @Js
            def PyJs_wrap_130_(code, callback, this, arguments, var=var):
                var = Scope({u'this':this, u'callback':callback, u'code':code, u'arguments':arguments, u'wrap':PyJs_wrap_130_}, var)
                var.registers([u'loc', u'message', u'code', u'newStack', u'callback'])
                var.put(u'code', (var.get(u'code')+Js(u'')))
                try:
                    if var.get(u"this").callprop(u'shouldIgnore'):
                        PyJs_Object_131_ = Js({u'code':var.get(u'code'),u'ignored':var.get(u'true')})
                        return var.get(u"this").callprop(u'makeResult', PyJs_Object_131_)
                    else:
                        return var.get(u'callback')()
                except PyJsException as PyJsTempException:
                    PyJsHolder_657272_50892639 = var.own.get(u'err')
                    var.force_own_put(u'err', PyExceptionToJs(PyJsTempException))
                    try:
                        if var.get(u'err').get(u'_babel'):
                            PyJsTempException = JsToPyException(var.get(u'err'))
                            raise PyJsTempException
                        else:
                            var.get(u'err').put(u'_babel', var.get(u'true'))
                        var.put(u'message', var.get(u'err').put(u'message', ((var.get(u"this").get(u'opts').get(u'filename')+Js(u': '))+var.get(u'err').get(u'message'))))
                        var.put(u'loc', var.get(u'err').get(u'loc'))
                        if var.get(u'loc'):
                            var.get(u'err').put(u'codeFrame', PyJsComma(Js(0.0),var.get(u'_babelCodeFrame2').get(u'default'))(var.get(u'code'), var.get(u'loc').get(u'line'), (var.get(u'loc').get(u'column')+Js(1.0)), var.get(u"this").get(u'opts')))
                            var.put(u'message', (Js(u'\n')+var.get(u'err').get(u'codeFrame')), u'+')
                        if var.get(u'process').get(u'browser'):
                            var.get(u'err').put(u'message', var.get(u'message'))
                        if var.get(u'err').get(u'stack'):
                            var.put(u'newStack', var.get(u'err').get(u'stack').callprop(u'replace', var.get(u'err').get(u'message'), var.get(u'message')))
                            var.get(u'err').put(u'stack', var.get(u'newStack'))
                        PyJsTempException = JsToPyException(var.get(u'err'))
                        raise PyJsTempException
                    finally:
                        if PyJsHolder_657272_50892639 is not None:
                            var.own[u'err'] = PyJsHolder_657272_50892639
                        else:
                            del var.own[u'err']
                        del PyJsHolder_657272_50892639
            PyJs_wrap_130_._set_name(u'wrap')
            var.get(u'File').get(u'prototype').put(u'wrap', PyJs_wrap_130_)
            @Js
            def PyJs_addCode_132_(code, this, arguments, var=var):
                var = Scope({u'this':this, u'addCode':PyJs_addCode_132_, u'code':code, u'arguments':arguments}, var)
                var.registers([u'code'])
                var.put(u'code', ((var.get(u'code') or Js(u''))+Js(u'')))
                var.put(u'code', var.get(u"this").callprop(u'parseInputSourceMap', var.get(u'code')))
                var.get(u"this").put(u'code', var.get(u'code'))
            PyJs_addCode_132_._set_name(u'addCode')
            var.get(u'File').get(u'prototype').put(u'addCode', PyJs_addCode_132_)
            @Js
            def PyJs_parseCode_133_(this, arguments, var=var):
                var = Scope({u'this':this, u'parseCode':PyJs_parseCode_133_, u'arguments':arguments}, var)
                var.registers([u'ast'])
                var.get(u"this").callprop(u'parseShebang')
                var.put(u'ast', var.get(u"this").callprop(u'parse', var.get(u"this").get(u'code')))
                var.get(u"this").callprop(u'addAst', var.get(u'ast'))
            PyJs_parseCode_133_._set_name(u'parseCode')
            var.get(u'File').get(u'prototype').put(u'parseCode', PyJs_parseCode_133_)
            @Js
            def PyJs_shouldIgnore_134_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'shouldIgnore':PyJs_shouldIgnore_134_}, var)
                var.registers([u'opts'])
                var.put(u'opts', var.get(u"this").get(u'opts'))
                return var.get(u'util').callprop(u'shouldIgnore', var.get(u'opts').get(u'filename'), var.get(u'opts').get(u'ignore'), var.get(u'opts').get(u'only'))
            PyJs_shouldIgnore_134_._set_name(u'shouldIgnore')
            var.get(u'File').get(u'prototype').put(u'shouldIgnore', PyJs_shouldIgnore_134_)
            @Js
            def PyJs_call_135_(key, pluginPasses, this, arguments, var=var):
                var = Scope({u'this':this, u'call':PyJs_call_135_, u'pluginPasses':pluginPasses, u'key':key, u'arguments':arguments}, var)
                var.registers([u'_isArray3', u'pluginPasses', u'plugin', u'_ref3', u'_i3', u'fn', u'key', u'pass', u'_iterator3'])
                #for JS loop
                var.put(u'_iterator3', var.get(u'pluginPasses'))
                var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
                var.put(u'_i3', Js(0.0))
                var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
                while 1:
                    pass
                    if var.get(u'_isArray3'):
                        if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                            break
                        var.put(u'_ref3', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                        if var.get(u'_i3').get(u'done'):
                            break
                        var.put(u'_ref3', var.get(u'_i3').get(u'value'))
                    var.put(u'pass', var.get(u'_ref3'))
                    var.put(u'plugin', var.get(u'pass').get(u'plugin'))
                    var.put(u'fn', var.get(u'plugin').get(var.get(u'key')))
                    if var.get(u'fn'):
                        var.get(u'fn').callprop(u'call', var.get(u'pass'), var.get(u"this"))
                
            PyJs_call_135_._set_name(u'call')
            var.get(u'File').get(u'prototype').put(u'call', PyJs_call_135_)
            @Js
            def PyJs_parseInputSourceMap_136_(code, this, arguments, var=var):
                var = Scope({u'this':this, u'parseInputSourceMap':PyJs_parseInputSourceMap_136_, u'code':code, u'arguments':arguments}, var)
                var.registers([u'code', u'inputMap', u'opts'])
                var.put(u'opts', var.get(u"this").get(u'opts'))
                if PyJsStrictNeq(var.get(u'opts').get(u'inputSourceMap'),Js(False)):
                    var.put(u'inputMap', var.get(u'_convertSourceMap2').get(u'default').callprop(u'fromSource', var.get(u'code')))
                    if var.get(u'inputMap'):
                        var.get(u'opts').put(u'inputSourceMap', var.get(u'inputMap').callprop(u'toObject'))
                        var.put(u'code', var.get(u'_convertSourceMap2').get(u'default').callprop(u'removeComments', var.get(u'code')))
                return var.get(u'code')
            PyJs_parseInputSourceMap_136_._set_name(u'parseInputSourceMap')
            var.get(u'File').get(u'prototype').put(u'parseInputSourceMap', PyJs_parseInputSourceMap_136_)
            @Js
            def PyJs_parseShebang_137_(this, arguments, var=var):
                var = Scope({u'this':this, u'parseShebang':PyJs_parseShebang_137_, u'arguments':arguments}, var)
                var.registers([u'shebangMatch'])
                var.put(u'shebangMatch', var.get(u'shebangRegex').callprop(u'exec', var.get(u"this").get(u'code')))
                if var.get(u'shebangMatch'):
                    var.get(u"this").put(u'shebang', var.get(u'shebangMatch').get(u'0'))
                    var.get(u"this").put(u'code', var.get(u"this").get(u'code').callprop(u'replace', var.get(u'shebangRegex'), Js(u'')))
            PyJs_parseShebang_137_._set_name(u'parseShebang')
            var.get(u'File').get(u'prototype').put(u'parseShebang', PyJs_parseShebang_137_)
            @Js
            def PyJs_makeResult_138_(_ref4, this, arguments, var=var):
                var = Scope({u'this':this, u'makeResult':PyJs_makeResult_138_, u'_ref4':_ref4, u'arguments':arguments}, var)
                var.registers([u'ignored', u'code', u'map', u'_ref4', u'ast', u'result'])
                var.put(u'code', var.get(u'_ref4').get(u'code'))
                var.put(u'map', var.get(u'_ref4').get(u'map'))
                var.put(u'ast', var.get(u'_ref4').get(u'ast'))
                var.put(u'ignored', var.get(u'_ref4').get(u'ignored'))
                PyJs_Object_139_ = Js({u'metadata':var.get(u"null"),u'options':var.get(u"this").get(u'opts'),u'ignored':var.get(u'ignored').neg().neg(),u'code':var.get(u"null"),u'ast':var.get(u"null"),u'map':(var.get(u'map') or var.get(u"null"))})
                var.put(u'result', PyJs_Object_139_)
                if var.get(u"this").get(u'opts').get(u'code'):
                    var.get(u'result').put(u'code', var.get(u'code'))
                if var.get(u"this").get(u'opts').get(u'ast'):
                    var.get(u'result').put(u'ast', var.get(u'ast'))
                if var.get(u"this").get(u'opts').get(u'metadata'):
                    var.get(u'result').put(u'metadata', var.get(u"this").get(u'metadata'))
                return var.get(u'result')
            PyJs_makeResult_138_._set_name(u'makeResult')
            var.get(u'File').get(u'prototype').put(u'makeResult', PyJs_makeResult_138_)
            @Js
            def PyJs_generate_140_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'generate':PyJs_generate_140_}, var)
                var.registers([u'_result', u'generator', u'ast', u'result', u'dirname', u'gen', u'opts'])
                var.put(u'opts', var.get(u"this").get(u'opts'))
                var.put(u'ast', var.get(u"this").get(u'ast'))
                PyJs_Object_141_ = Js({u'ast':var.get(u'ast')})
                var.put(u'result', PyJs_Object_141_)
                if var.get(u'opts').get(u'code').neg():
                    return var.get(u"this").callprop(u'makeResult', var.get(u'result'))
                var.put(u'gen', var.get(u'_babelGenerator2').get(u'default'))
                if var.get(u'opts').get(u'generatorOpts').get(u'generator'):
                    var.put(u'gen', var.get(u'opts').get(u'generatorOpts').get(u'generator'))
                    if PyJsStrictEq(var.get(u'gen',throw=False).typeof(),Js(u'string')):
                        var.put(u'dirname', (var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u"this").get(u'opts').get(u'filename')) or var.get(u'process').callprop(u'cwd')))
                        var.put(u'generator', PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'gen'), var.get(u'dirname')))
                        if var.get(u'generator'):
                            var.put(u'gen', var.get(u'require')(var.get(u'generator')).get(u'print'))
                        else:
                            PyJsTempException = JsToPyException(var.get(u'Error').create((((Js(u"Couldn't find generator ")+var.get(u'gen'))+Js(u' with "print" method relative to directory '))+var.get(u'dirname'))))
                            raise PyJsTempException
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'Generation start'))
                var.put(u'_result', var.get(u'gen')(var.get(u'ast'), (PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(var.get(u'opts'), var.get(u'opts').get(u'generatorOpts')) if var.get(u'opts').get(u'generatorOpts') else var.get(u'opts')), var.get(u"this").get(u'code')))
                var.get(u'result').put(u'code', var.get(u'_result').get(u'code'))
                var.get(u'result').put(u'map', var.get(u'_result').get(u'map'))
                var.get(u"this").get(u'log').callprop(u'debug', Js(u'Generation end'))
                if var.get(u"this").get(u'shebang'):
                    var.get(u'result').put(u'code', ((var.get(u"this").get(u'shebang')+Js(u'\n'))+var.get(u'result').get(u'code')))
                if var.get(u'result').get(u'map'):
                    var.get(u'result').put(u'map', var.get(u"this").callprop(u'mergeSourceMap', var.get(u'result').get(u'map')))
                if (PyJsStrictEq(var.get(u'opts').get(u'sourceMaps'),Js(u'inline')) or PyJsStrictEq(var.get(u'opts').get(u'sourceMaps'),Js(u'both'))):
                    var.get(u'result').put(u'code', (Js(u'\n')+var.get(u'_convertSourceMap2').get(u'default').callprop(u'fromObject', var.get(u'result').get(u'map')).callprop(u'toComment')), u'+')
                if PyJsStrictEq(var.get(u'opts').get(u'sourceMaps'),Js(u'inline')):
                    var.get(u'result').put(u'map', var.get(u"null"))
                return var.get(u"this").callprop(u'makeResult', var.get(u'result'))
            PyJs_generate_140_._set_name(u'generate')
            var.get(u'File').get(u'prototype').put(u'generate', PyJs_generate_140_)
            return var.get(u'File')
        PyJs_anonymous_86_._set_name(u'anonymous')
        var.put(u'File', PyJs_anonymous_86_(var.get(u'_store2').get(u'default')))
        var.get(u'exports').put(u'default', var.get(u'File'))
        var.get(u'exports').put(u'File', var.get(u'File'))
    PyJs_anonymous_81_._set_name(u'anonymous')
    PyJs_anonymous_81_.callprop(u'call', var.get(u"this"), var.get(u'require')(Js(u'_process')))
PyJs_anonymous_80_._set_name(u'anonymous')
PyJs_Object_142_ = Js({u'../../helpers/resolve':Js(9.0),u'../../store':Js(10.0),u'../../util':Js(26.0),u'../internal-plugins/block-hoist':Js(21.0),u'../internal-plugins/shadow-functions':Js(22.0),u'../plugin-pass':Js(24.0),u'./logger':Js(13.0),u'./metadata':Js(14.0),u'./options/option-manager':Js(18.0),u'_process':Js(531.0),u'babel-code-frame':Js(4.0),u'babel-generator':Js(40.0),u'babel-helpers':Js(56.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/object/assign':Js(100.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0),u'babel-runtime/helpers/typeof':Js(114.0),u'babel-traverse':Js(225.0),u'babel-types':Js(258.0),u'babylon':Js(262.0),u'convert-source-map':Js(267.0),u'lodash/defaults':Js(442.0),u'path':Js(530.0),u'source-map':Js(519.0)})
@Js
def PyJs_anonymous_143_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'seenDeprecatedMessages', u'require', u'module', u'_node2', u'_node', u'verboseDebug', u'_interopRequireDefault', u'generalDebug', u'_classCallCheck3', u'_classCallCheck2', u'Logger'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_144_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_144_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_node', var.get(u'require')(Js(u'debug/node')))
    var.put(u'_node2', var.get(u'_interopRequireDefault')(var.get(u'_node')))
    pass
    var.put(u'verboseDebug', PyJsComma(Js(0.0),var.get(u'_node2').get(u'default'))(Js(u'babel:verbose')))
    var.put(u'generalDebug', PyJsComma(Js(0.0),var.get(u'_node2').get(u'default'))(Js(u'babel')))
    var.put(u'seenDeprecatedMessages', Js([]))
    @Js
    def PyJs_anonymous_145_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'Logger'])
        @Js
        def PyJsHoisted_Logger_(file, filename, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'file':file, u'filename':filename}, var)
            var.registers([u'file', u'filename'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Logger'))
            var.get(u"this").put(u'filename', var.get(u'filename'))
            var.get(u"this").put(u'file', var.get(u'file'))
        PyJsHoisted_Logger_.func_name = u'Logger'
        var.put(u'Logger', PyJsHoisted_Logger_)
        pass
        @Js
        def PyJs__buildMessage_146_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'_buildMessage':PyJs__buildMessage_146_, u'arguments':arguments}, var)
            var.registers([u'msg', u'parts'])
            var.put(u'parts', (Js(u'[BABEL] ')+var.get(u"this").get(u'filename')))
            if var.get(u'msg'):
                var.put(u'parts', (Js(u': ')+var.get(u'msg')), u'+')
            return var.get(u'parts')
        PyJs__buildMessage_146_._set_name(u'_buildMessage')
        var.get(u'Logger').get(u'prototype').put(u'_buildMessage', PyJs__buildMessage_146_)
        @Js
        def PyJs_warn_147_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'warn':PyJs_warn_147_, u'arguments':arguments}, var)
            var.registers([u'msg'])
            var.get(u'console').callprop(u'warn', var.get(u"this").callprop(u'_buildMessage', var.get(u'msg')))
        PyJs_warn_147_._set_name(u'warn')
        var.get(u'Logger').get(u'prototype').put(u'warn', PyJs_warn_147_)
        @Js
        def PyJs_error_148_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'arguments':arguments, u'error':PyJs_error_148_}, var)
            var.registers([u'msg', u'Constructor'])
            var.put(u'Constructor', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else var.get(u'Error')))
            PyJsTempException = JsToPyException(var.get(u'Constructor').create(var.get(u"this").callprop(u'_buildMessage', var.get(u'msg'))))
            raise PyJsTempException
        PyJs_error_148_._set_name(u'error')
        var.get(u'Logger').get(u'prototype').put(u'error', PyJs_error_148_)
        @Js
        def PyJs_deprecate_149_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'deprecate':PyJs_deprecate_149_, u'arguments':arguments}, var)
            var.registers([u'msg'])
            if (var.get(u"this").get(u'file').get(u'opts') and var.get(u"this").get(u'file').get(u'opts').get(u'suppressDeprecationMessages')):
                return var.get('undefined')
            var.put(u'msg', var.get(u"this").callprop(u'_buildMessage', var.get(u'msg')))
            if (var.get(u'seenDeprecatedMessages').callprop(u'indexOf', var.get(u'msg'))>=Js(0.0)):
                return var.get('undefined')
            var.get(u'seenDeprecatedMessages').callprop(u'push', var.get(u'msg'))
            var.get(u'console').callprop(u'error', var.get(u'msg'))
        PyJs_deprecate_149_._set_name(u'deprecate')
        var.get(u'Logger').get(u'prototype').put(u'deprecate', PyJs_deprecate_149_)
        @Js
        def PyJs_verbose_150_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'arguments':arguments, u'verbose':PyJs_verbose_150_}, var)
            var.registers([u'msg'])
            if var.get(u'verboseDebug').get(u'enabled'):
                var.get(u'verboseDebug')(var.get(u"this").callprop(u'_buildMessage', var.get(u'msg')))
        PyJs_verbose_150_._set_name(u'verbose')
        var.get(u'Logger').get(u'prototype').put(u'verbose', PyJs_verbose_150_)
        @Js
        def PyJs_debug_151_(msg, this, arguments, var=var):
            var = Scope({u'msg':msg, u'this':this, u'arguments':arguments, u'debug':PyJs_debug_151_}, var)
            var.registers([u'msg'])
            if var.get(u'generalDebug').get(u'enabled'):
                var.get(u'generalDebug')(var.get(u"this").callprop(u'_buildMessage', var.get(u'msg')))
        PyJs_debug_151_._set_name(u'debug')
        var.get(u'Logger').get(u'prototype').put(u'debug', PyJs_debug_151_)
        @Js
        def PyJs_deopt_152_(node, msg, this, arguments, var=var):
            var = Scope({u'node':node, u'msg':msg, u'this':this, u'arguments':arguments, u'deopt':PyJs_deopt_152_}, var)
            var.registers([u'node', u'msg'])
            var.get(u"this").callprop(u'debug', var.get(u'msg'))
        PyJs_deopt_152_._set_name(u'deopt')
        var.get(u'Logger').get(u'prototype').put(u'deopt', PyJs_deopt_152_)
        return var.get(u'Logger')
    PyJs_anonymous_145_._set_name(u'anonymous')
    var.put(u'Logger', PyJs_anonymous_145_())
    var.get(u'exports').put(u'default', var.get(u'Logger'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_143_._set_name(u'anonymous')
PyJs_Object_153_ = Js({u'babel-runtime/helpers/classCallCheck':Js(110.0),u'debug/node':Js(270.0)})
@Js
def PyJs_anonymous_154_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'ExportDeclaration', u'ModuleDeclaration', u'_interopRequireWildcard', u'ImportDeclaration', u'require', u'_babelTypes', u'module', u't', u'_interopRequireDefault', u'Scope', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_156_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_156_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_Scope_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJsHoisted_Scope_.func_name = u'Scope'
    var.put(u'Scope', PyJsHoisted_Scope_)
    @Js
    def PyJsHoisted_ExportDeclaration_(path, file, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file}, var)
        var.registers([u'node', u'specifier', u'exports', u'name', u'_i2', u'_ref2', u'source', u'declar', u'_isArray2', u'exported', u'file', u'path', u'bindings', u'local', u'_iterator2'])
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'source', (var.get(u'node').get(u'source').get(u'value') if var.get(u'node').get(u'source') else var.get(u"null")))
        var.put(u'exports', var.get(u'file').get(u'metadata').get(u'modules').get(u'exports'))
        var.put(u'declar', var.get(u'path').callprop(u'get', Js(u'declaration')))
        if var.get(u'declar').callprop(u'isStatement'):
            var.put(u'bindings', var.get(u'declar').callprop(u'getBindingIdentifiers'))
            for PyJsTemp in var.get(u'bindings'):
                var.put(u'name', PyJsTemp)
                var.get(u'exports').get(u'exported').callprop(u'push', var.get(u'name'))
                PyJs_Object_165_ = Js({u'kind':Js(u'local'),u'local':var.get(u'name'),u'exported':(Js(u'default') if var.get(u'path').callprop(u'isExportDefaultDeclaration') else var.get(u'name'))})
                var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_165_)
        if (var.get(u'path').callprop(u'isExportNamedDeclaration') and var.get(u'node').get(u'specifiers')):
            #for JS loop
            var.put(u'_iterator2', var.get(u'node').get(u'specifiers'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                var.put(u'specifier', var.get(u'_ref2'))
                var.put(u'exported', var.get(u'specifier').get(u'exported').get(u'name'))
                var.get(u'exports').get(u'exported').callprop(u'push', var.get(u'exported'))
                if var.get(u't').callprop(u'isExportDefaultSpecifier', var.get(u'specifier')):
                    PyJs_Object_166_ = Js({u'kind':Js(u'external'),u'local':var.get(u'exported'),u'exported':var.get(u'exported'),u'source':var.get(u'source')})
                    var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_166_)
                if var.get(u't').callprop(u'isExportNamespaceSpecifier', var.get(u'specifier')):
                    PyJs_Object_167_ = Js({u'kind':Js(u'external-namespace'),u'exported':var.get(u'exported'),u'source':var.get(u'source')})
                    var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_167_)
                var.put(u'local', var.get(u'specifier').get(u'local'))
                if var.get(u'local').neg():
                    continue
                if var.get(u'source'):
                    PyJs_Object_168_ = Js({u'kind':Js(u'external'),u'local':var.get(u'local').get(u'name'),u'exported':var.get(u'exported'),u'source':var.get(u'source')})
                    var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_168_)
                if var.get(u'source').neg():
                    PyJs_Object_169_ = Js({u'kind':Js(u'local'),u'local':var.get(u'local').get(u'name'),u'exported':var.get(u'exported')})
                    var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_169_)
            
        if var.get(u'path').callprop(u'isExportAllDeclaration'):
            PyJs_Object_170_ = Js({u'kind':Js(u'external-all'),u'source':var.get(u'source')})
            var.get(u'exports').get(u'specifiers').callprop(u'push', PyJs_Object_170_)
    PyJsHoisted_ExportDeclaration_.func_name = u'ExportDeclaration'
    var.put(u'ExportDeclaration', PyJsHoisted_ExportDeclaration_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_155_ = Js({})
            var.put(u'newObj', PyJs_Object_155_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'ImportDeclaration', var.get(u'exports').put(u'ModuleDeclaration', var.get(u'undefined')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.get(u'exports').put(u'ExportDeclaration', var.get(u'ExportDeclaration'))
    var.get(u'exports').put(u'Scope', var.get(u'Scope'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    @Js
    def PyJs_enter_158_(path, file, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'enter':PyJs_enter_158_}, var)
        var.registers([u'node', u'path', u'file'])
        var.put(u'node', var.get(u'path').get(u'node'))
        if var.get(u'node').get(u'source'):
            var.get(u'node').get(u'source').put(u'value', var.get(u'file').callprop(u'resolveModuleSource', var.get(u'node').get(u'source').get(u'value')))
    PyJs_enter_158_._set_name(u'enter')
    PyJs_Object_157_ = Js({u'enter':PyJs_enter_158_})
    var.put(u'ModuleDeclaration', var.get(u'exports').put(u'ModuleDeclaration', PyJs_Object_157_))
    @Js
    def PyJs_exit_160_(path, file, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_160_, u'arguments':arguments, u'file':file}, var)
        var.registers([u'node', u'specifiers', u'_isArray', u'imported', u'file', u'specifier', u'_i', u'importedName', u'_iterator', u'_ref', u'path', u'local'])
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'specifiers', Js([]))
        var.put(u'imported', Js([]))
        PyJs_Object_161_ = Js({u'source':var.get(u'node').get(u'source').get(u'value'),u'imported':var.get(u'imported'),u'specifiers':var.get(u'specifiers')})
        var.get(u'file').get(u'metadata').get(u'modules').get(u'imports').callprop(u'push', PyJs_Object_161_)
        #for JS loop
        var.put(u'_iterator', var.get(u'path').callprop(u'get', Js(u'specifiers')))
        var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
        var.put(u'_i', Js(0.0))
        var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
        while 1:
            pass
            if var.get(u'_isArray'):
                if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                    break
                var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
            else:
                var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                if var.get(u'_i').get(u'done'):
                    break
                var.put(u'_ref', var.get(u'_i').get(u'value'))
            var.put(u'specifier', var.get(u'_ref'))
            var.put(u'local', var.get(u'specifier').get(u'node').get(u'local').get(u'name'))
            if var.get(u'specifier').callprop(u'isImportDefaultSpecifier'):
                var.get(u'imported').callprop(u'push', Js(u'default'))
                PyJs_Object_162_ = Js({u'kind':Js(u'named'),u'imported':Js(u'default'),u'local':var.get(u'local')})
                var.get(u'specifiers').callprop(u'push', PyJs_Object_162_)
            if var.get(u'specifier').callprop(u'isImportSpecifier'):
                var.put(u'importedName', var.get(u'specifier').get(u'node').get(u'imported').get(u'name'))
                var.get(u'imported').callprop(u'push', var.get(u'importedName'))
                PyJs_Object_163_ = Js({u'kind':Js(u'named'),u'imported':var.get(u'importedName'),u'local':var.get(u'local')})
                var.get(u'specifiers').callprop(u'push', PyJs_Object_163_)
            if var.get(u'specifier').callprop(u'isImportNamespaceSpecifier'):
                var.get(u'imported').callprop(u'push', Js(u'*'))
                PyJs_Object_164_ = Js({u'kind':Js(u'namespace'),u'local':var.get(u'local')})
                var.get(u'specifiers').callprop(u'push', PyJs_Object_164_)
        
    PyJs_exit_160_._set_name(u'exit')
    PyJs_Object_159_ = Js({u'exit':PyJs_exit_160_})
    var.put(u'ImportDeclaration', var.get(u'exports').put(u'ImportDeclaration', PyJs_Object_159_))
    pass
    pass
PyJs_anonymous_154_._set_name(u'anonymous')
PyJs_Object_171_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_172_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    @Js
    def PyJs_anonymous_173_(process, this, arguments, var=var):
        var = Scope({u'process':process, u'this':this, u'arguments':arguments}, var)
        var.registers([u'_resolve', u'existsCache', u'exists', u'_fs', u'process', u'buildConfigChain', u'_json2', u'_interopRequireDefault', u'_fs2', u'BABELIGNORE_FILENAME', u'_json', u'PACKAGE_FILENAME', u'jsonCache', u'_classCallCheck3', u'_classCallCheck2', u'_assign', u'BABELRC_FILENAME', u'_pathIsAbsolute2', u'_path2', u'_assign2', u'_resolve2', u'_pathIsAbsolute', u'ConfigChainBuilder', u'_path'])
        @Js
        def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj'])
            PyJs_Object_174_ = Js({u'default':var.get(u'obj')})
            return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_174_)
        PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
        var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
        @Js
        def PyJsHoisted_buildConfigChain_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'builder', u'log', u'opts', u'filename'])
            PyJs_Object_177_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else PyJs_Object_177_))
            var.put(u'log', var.get(u'arguments').get(u'1'))
            var.put(u'filename', var.get(u'opts').get(u'filename'))
            var.put(u'builder', var.get(u'ConfigChainBuilder').create(var.get(u'log')))
            if PyJsStrictNeq(var.get(u'opts').get(u'babelrc'),Js(False)):
                var.get(u'builder').callprop(u'findConfigs', var.get(u'filename'))
            PyJs_Object_178_ = Js({u'options':var.get(u'opts'),u'alias':Js(u'base'),u'dirname':(var.get(u'filename') and var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u'filename')))})
            var.get(u'builder').callprop(u'mergeConfig', PyJs_Object_178_)
            return var.get(u'builder').get(u'configs')
        PyJsHoisted_buildConfigChain_.func_name = u'buildConfigChain'
        var.put(u'buildConfigChain', PyJsHoisted_buildConfigChain_)
        @Js
        def PyJsHoisted_exists_(filename, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'filename':filename}, var)
            var.registers([u'cached', u'filename'])
            var.put(u'cached', var.get(u'existsCache').get(var.get(u'filename')))
            if (var.get(u'cached')==var.get(u"null")):
                return var.get(u'existsCache').put(var.get(u'filename'), var.get(u'_fs2').get(u'default').callprop(u'existsSync', var.get(u'filename')))
            else:
                return var.get(u'cached')
        PyJsHoisted_exists_.func_name = u'exists'
        var.put(u'exists', PyJsHoisted_exists_)
        Js(u'use strict')
        var.get(u'exports').put(u'__esModule', var.get(u'true'))
        var.put(u'_assign', var.get(u'require')(Js(u'babel-runtime/core-js/object/assign')))
        var.put(u'_assign2', var.get(u'_interopRequireDefault')(var.get(u'_assign')))
        var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
        var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
        var.get(u'exports').put(u'default', var.get(u'buildConfigChain'))
        var.put(u'_resolve', var.get(u'require')(Js(u'../../../helpers/resolve')))
        var.put(u'_resolve2', var.get(u'_interopRequireDefault')(var.get(u'_resolve')))
        var.put(u'_json', var.get(u'require')(Js(u'json5')))
        var.put(u'_json2', var.get(u'_interopRequireDefault')(var.get(u'_json')))
        var.put(u'_pathIsAbsolute', var.get(u'require')(Js(u'path-is-absolute')))
        var.put(u'_pathIsAbsolute2', var.get(u'_interopRequireDefault')(var.get(u'_pathIsAbsolute')))
        var.put(u'_path', var.get(u'require')(Js(u'path')))
        var.put(u'_path2', var.get(u'_interopRequireDefault')(var.get(u'_path')))
        var.put(u'_fs', var.get(u'require')(Js(u'fs')))
        var.put(u'_fs2', var.get(u'_interopRequireDefault')(var.get(u'_fs')))
        pass
        PyJs_Object_175_ = Js({})
        var.put(u'existsCache', PyJs_Object_175_)
        PyJs_Object_176_ = Js({})
        var.put(u'jsonCache', PyJs_Object_176_)
        var.put(u'BABELIGNORE_FILENAME', Js(u'.babelignore'))
        var.put(u'BABELRC_FILENAME', Js(u'.babelrc'))
        var.put(u'PACKAGE_FILENAME', Js(u'package.json'))
        pass
        pass
        @Js
        def PyJs_anonymous_179_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'ConfigChainBuilder'])
            @Js
            def PyJsHoisted_ConfigChainBuilder_(log, this, arguments, var=var):
                var = Scope({u'this':this, u'log':log, u'arguments':arguments}, var)
                var.registers([u'log'])
                PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'ConfigChainBuilder'))
                var.get(u"this").put(u'resolvedConfigs', Js([]))
                var.get(u"this").put(u'configs', Js([]))
                var.get(u"this").put(u'log', var.get(u'log'))
            PyJsHoisted_ConfigChainBuilder_.func_name = u'ConfigChainBuilder'
            var.put(u'ConfigChainBuilder', PyJsHoisted_ConfigChainBuilder_)
            pass
            @Js
            def PyJs_findConfigs_180_(loc, this, arguments, var=var):
                var = Scope({u'this':this, u'loc':loc, u'arguments':arguments, u'findConfigs':PyJs_findConfigs_180_}, var)
                var.registers([u'loc', u'ignoreLoc', u'foundIgnore', u'pkgLoc', u'foundConfig', u'configLoc'])
                if var.get(u'loc').neg():
                    return var.get('undefined')
                if PyJsComma(Js(0.0),var.get(u'_pathIsAbsolute2').get(u'default'))(var.get(u'loc')).neg():
                    var.put(u'loc', var.get(u'_path2').get(u'default').callprop(u'join', var.get(u'process').callprop(u'cwd'), var.get(u'loc')))
                var.put(u'foundConfig', Js(False))
                var.put(u'foundIgnore', Js(False))
                while PyJsStrictNeq(var.get(u'loc'),var.put(u'loc', var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u'loc')))):
                    if var.get(u'foundConfig').neg():
                        var.put(u'configLoc', var.get(u'_path2').get(u'default').callprop(u'join', var.get(u'loc'), var.get(u'BABELRC_FILENAME')))
                        if var.get(u'exists')(var.get(u'configLoc')):
                            var.get(u"this").callprop(u'addConfig', var.get(u'configLoc'))
                            var.put(u'foundConfig', var.get(u'true'))
                        var.put(u'pkgLoc', var.get(u'_path2').get(u'default').callprop(u'join', var.get(u'loc'), var.get(u'PACKAGE_FILENAME')))
                        if (var.get(u'foundConfig').neg() and var.get(u'exists')(var.get(u'pkgLoc'))):
                            var.put(u'foundConfig', var.get(u"this").callprop(u'addConfig', var.get(u'pkgLoc'), Js(u'babel'), var.get(u'JSON')))
                    if var.get(u'foundIgnore').neg():
                        var.put(u'ignoreLoc', var.get(u'_path2').get(u'default').callprop(u'join', var.get(u'loc'), var.get(u'BABELIGNORE_FILENAME')))
                        if var.get(u'exists')(var.get(u'ignoreLoc')):
                            var.get(u"this").callprop(u'addIgnoreConfig', var.get(u'ignoreLoc'))
                            var.put(u'foundIgnore', var.get(u'true'))
                    if (var.get(u'foundIgnore') and var.get(u'foundConfig')):
                        return var.get('undefined')
            PyJs_findConfigs_180_._set_name(u'findConfigs')
            var.get(u'ConfigChainBuilder').get(u'prototype').put(u'findConfigs', PyJs_findConfigs_180_)
            @Js
            def PyJs_addIgnoreConfig_181_(loc, this, arguments, var=var):
                var = Scope({u'this':this, u'loc':loc, u'arguments':arguments, u'addIgnoreConfig':PyJs_addIgnoreConfig_181_}, var)
                var.registers([u'loc', u'lines', u'file'])
                var.put(u'file', var.get(u'_fs2').get(u'default').callprop(u'readFileSync', var.get(u'loc'), Js(u'utf8')))
                var.put(u'lines', var.get(u'file').callprop(u'split', Js(u'\n')))
                @Js
                def PyJs_anonymous_182_(line, this, arguments, var=var):
                    var = Scope({u'this':this, u'line':line, u'arguments':arguments}, var)
                    var.registers([u'line'])
                    return var.get(u'line').neg().neg()
                PyJs_anonymous_182_._set_name(u'anonymous')
                @Js
                def PyJs_anonymous_183_(line, this, arguments, var=var):
                    var = Scope({u'this':this, u'line':line, u'arguments':arguments}, var)
                    var.registers([u'line'])
                    return var.get(u'line').callprop(u'replace', JsRegExp(u'/#(.*?)$/'), Js(u'')).callprop(u'trim')
                PyJs_anonymous_183_._set_name(u'anonymous')
                var.put(u'lines', var.get(u'lines').callprop(u'map', PyJs_anonymous_183_).callprop(u'filter', PyJs_anonymous_182_))
                if var.get(u'lines').get(u'length'):
                    PyJs_Object_185_ = Js({u'ignore':var.get(u'lines')})
                    PyJs_Object_184_ = Js({u'options':PyJs_Object_185_,u'alias':var.get(u'loc'),u'dirname':var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u'loc'))})
                    var.get(u"this").callprop(u'mergeConfig', PyJs_Object_184_)
            PyJs_addIgnoreConfig_181_._set_name(u'addIgnoreConfig')
            var.get(u'ConfigChainBuilder').get(u'prototype').put(u'addIgnoreConfig', PyJs_addIgnoreConfig_181_)
            @Js
            def PyJs_addConfig_186_(loc, key, this, arguments, var=var):
                var = Scope({u'this':this, u'loc':loc, u'addConfig':PyJs_addConfig_186_, u'arguments':arguments, u'key':key}, var)
                var.registers([u'content', u'loc', u'json', u'options', u'key'])
                var.put(u'json', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else var.get(u'_json2').get(u'default')))
                if (var.get(u"this").get(u'resolvedConfigs').callprop(u'indexOf', var.get(u'loc'))>=Js(0.0)):
                    return Js(False)
                var.get(u"this").get(u'resolvedConfigs').callprop(u'push', var.get(u'loc'))
                var.put(u'content', var.get(u'_fs2').get(u'default').callprop(u'readFileSync', var.get(u'loc'), Js(u'utf8')))
                var.put(u'options', PyJsComma(Js(0.0), Js(None)))
                try:
                    var.put(u'options', var.get(u'jsonCache').put(var.get(u'content'), (var.get(u'jsonCache').get(var.get(u'content')) or var.get(u'json').callprop(u'parse', var.get(u'content')))))
                    if var.get(u'key'):
                        var.put(u'options', var.get(u'options').get(var.get(u'key')))
                except PyJsException as PyJsTempException:
                    PyJsHolder_657272_93340872 = var.own.get(u'err')
                    var.force_own_put(u'err', PyExceptionToJs(PyJsTempException))
                    try:
                        var.get(u'err').put(u'message', ((var.get(u'loc')+Js(u': Error while parsing JSON - '))+var.get(u'err').get(u'message')))
                        PyJsTempException = JsToPyException(var.get(u'err'))
                        raise PyJsTempException
                    finally:
                        if PyJsHolder_657272_93340872 is not None:
                            var.own[u'err'] = PyJsHolder_657272_93340872
                        else:
                            del var.own[u'err']
                        del PyJsHolder_657272_93340872
                PyJs_Object_187_ = Js({u'options':var.get(u'options'),u'alias':var.get(u'loc'),u'dirname':var.get(u'_path2').get(u'default').callprop(u'dirname', var.get(u'loc'))})
                var.get(u"this").callprop(u'mergeConfig', PyJs_Object_187_)
                return var.get(u'options').neg().neg()
            PyJs_addConfig_186_._set_name(u'addConfig')
            var.get(u'ConfigChainBuilder').get(u'prototype').put(u'addConfig', PyJs_addConfig_186_)
            @Js
            def PyJs_mergeConfig_188_(_ref, this, arguments, var=var):
                var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments, u'mergeConfig':PyJs_mergeConfig_188_}, var)
                var.registers([u'loc', u'envOpts', u'alias', u'envKey', u'extendsLoc', u'_ref', u'dirname', u'options'])
                var.put(u'options', var.get(u'_ref').get(u'options'))
                var.put(u'alias', var.get(u'_ref').get(u'alias'))
                var.put(u'loc', var.get(u'_ref').get(u'loc'))
                var.put(u'dirname', var.get(u'_ref').get(u'dirname'))
                if var.get(u'options').neg():
                    return Js(False)
                PyJs_Object_189_ = Js({})
                var.put(u'options', PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(PyJs_Object_189_, var.get(u'options')))
                var.put(u'dirname', (var.get(u'dirname') or var.get(u'process').callprop(u'cwd')))
                var.put(u'loc', (var.get(u'loc') or var.get(u'alias')))
                if var.get(u'options').get(u'extends'):
                    var.put(u'extendsLoc', PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'options').get(u'extends'), var.get(u'dirname')))
                    if var.get(u'extendsLoc'):
                        var.get(u"this").callprop(u'addConfig', var.get(u'extendsLoc'))
                    else:
                        if var.get(u"this").get(u'log'):
                            var.get(u"this").get(u'log').callprop(u'error', (((Js(u"Couldn't resolve extends clause of ")+var.get(u'options').get(u'extends'))+Js(u' in '))+var.get(u'alias')))
                    var.get(u'options').delete(u'extends')
                PyJs_Object_190_ = Js({u'options':var.get(u'options'),u'alias':var.get(u'alias'),u'loc':var.get(u'loc'),u'dirname':var.get(u'dirname')})
                var.get(u"this").get(u'configs').callprop(u'push', PyJs_Object_190_)
                var.put(u'envOpts', PyJsComma(Js(0.0), Js(None)))
                var.put(u'envKey', ((var.get(u'process').get(u'env').get(u'BABEL_ENV') or var.get(u'process').get(u'env').get(u'NODE_ENV')) or Js(u'development')))
                if var.get(u'options').get(u'env'):
                    var.put(u'envOpts', var.get(u'options').get(u'env').get(var.get(u'envKey')))
                    var.get(u'options').delete(u'env')
                PyJs_Object_191_ = Js({u'options':var.get(u'envOpts'),u'alias':((var.get(u'alias')+Js(u'.env.'))+var.get(u'envKey')),u'dirname':var.get(u'dirname')})
                var.get(u"this").callprop(u'mergeConfig', PyJs_Object_191_)
            PyJs_mergeConfig_188_._set_name(u'mergeConfig')
            var.get(u'ConfigChainBuilder').get(u'prototype').put(u'mergeConfig', PyJs_mergeConfig_188_)
            return var.get(u'ConfigChainBuilder')
        PyJs_anonymous_179_._set_name(u'anonymous')
        var.put(u'ConfigChainBuilder', PyJs_anonymous_179_())
        var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
    PyJs_anonymous_173_._set_name(u'anonymous')
    PyJs_anonymous_173_.callprop(u'call', var.get(u"this"), var.get(u'require')(Js(u'_process')))
PyJs_anonymous_172_._set_name(u'anonymous')
PyJs_Object_192_ = Js({u'../../../helpers/resolve':Js(9.0),u'_process':Js(531.0),u'babel-runtime/core-js/object/assign':Js(100.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'fs':Js(523.0),u'json5':Js(284.0),u'path':Js(530.0),u'path-is-absolute':Js(499.0)})
@Js
def PyJs_anonymous_193_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    PyJs_Object_195_ = Js({u'type':Js(u'filename'),u'description':Js(u'filename to use when reading from stdin - this will be used in source-maps, errors etc'),u'default':Js(u'unknown'),u'shorthand':Js(u'f')})
    PyJs_Object_196_ = Js({u'hidden':var.get(u'true'),u'type':Js(u'string')})
    PyJs_Object_197_ = Js({u'hidden':var.get(u'true')})
    PyJs_Object_199_ = Js({})
    PyJs_Object_198_ = Js({u'hidden':var.get(u'true'),u'default':PyJs_Object_199_})
    PyJs_Object_200_ = Js({u'description':Js(u''),u'hidden':var.get(u'true')})
    PyJs_Object_201_ = Js({u'type':Js(u'boolean'),u'default':Js(False),u'description':Js(u'retain line numbers - will result in really ugly code')})
    PyJs_Object_202_ = Js({u'description':Js(u'enable/disable ANSI syntax highlighting of code frames (on by default)'),u'type':Js(u'boolean'),u'default':var.get(u'true')})
    PyJs_Object_203_ = Js({u'type':Js(u'boolean'),u'default':Js(False),u'hidden':var.get(u'true')})
    PyJs_Object_204_ = Js({u'type':Js(u'list'),u'description':Js(u''),u'default':Js([])})
    PyJs_Object_205_ = Js({u'type':Js(u'list'),u'default':Js([]),u'description':Js(u'')})
    PyJs_Object_206_ = Js({u'type':Js(u'list'),u'description':Js(u'list of glob paths to **not** compile'),u'default':Js([])})
    PyJs_Object_207_ = Js({u'type':Js(u'list'),u'description':Js(u'list of glob paths to **only** compile')})
    PyJs_Object_208_ = Js({u'hidden':var.get(u'true'),u'default':var.get(u'true'),u'type':Js(u'boolean')})
    PyJs_Object_209_ = Js({u'hidden':var.get(u'true'),u'default':var.get(u'true'),u'type':Js(u'boolean')})
    PyJs_Object_210_ = Js({u'hidden':var.get(u'true'),u'default':var.get(u'true'),u'type':Js(u'boolean')})
    PyJs_Object_211_ = Js({u'type':Js(u'string'),u'hidden':var.get(u'true')})
    PyJs_Object_212_ = Js({u'type':Js(u'boolean'),u'default':var.get(u'true'),u'description':Js(u'write comments to generated output (true by default)')})
    PyJs_Object_213_ = Js({u'hidden':var.get(u'true'),u'description':Js(u'optional callback to control whether a comment should be inserted, when this is used the comments option is ignored')})
    PyJs_Object_214_ = Js({u'hidden':var.get(u'true'),u'description':Js(u'optional callback to wrap all visitor methods')})
    PyJs_Object_215_ = Js({u'type':Js(u'booleanString'),u'default':Js(u'auto'),u'description':Js(u'do not include superfluous whitespace characters and line terminators [true|false|auto]')})
    PyJs_Object_216_ = Js({u'type':Js(u'boolean'),u'default':Js(False),u'description':Js(u'save as much bytes when printing [true|false]')})
    PyJs_Object_217_ = Js({u'alias':Js(u'sourceMaps'),u'hidden':var.get(u'true')})
    PyJs_Object_218_ = Js({u'type':Js(u'booleanString'),u'description':Js(u'[true|false|inline]'),u'default':Js(False),u'shorthand':Js(u's')})
    PyJs_Object_219_ = Js({u'type':Js(u'string'),u'description':Js(u'set `file` on returned source map')})
    PyJs_Object_220_ = Js({u'type':Js(u'string'),u'description':Js(u'set `sources[0]` on returned source map')})
    PyJs_Object_221_ = Js({u'type':Js(u'filename'),u'description':Js(u'the root from which all sources are relative')})
    PyJs_Object_222_ = Js({u'description':Js(u'Whether or not to look up .babelrc and .babelignore files'),u'type':Js(u'boolean'),u'default':var.get(u'true')})
    PyJs_Object_223_ = Js({u'description':Js(u''),u'default':Js(u'module')})
    PyJs_Object_224_ = Js({u'type':Js(u'string'),u'description':Js(u'print a comment before any injected non-user code')})
    PyJs_Object_225_ = Js({u'type':Js(u'string'),u'description':Js(u'print a comment after any injected non-user code')})
    PyJs_Object_226_ = Js({u'hidden':var.get(u'true')})
    PyJs_Object_227_ = Js({u'hidden':var.get(u'true')})
    PyJs_Object_228_ = Js({u'type':Js(u'filename'),u'description':Js(u'optional prefix for the AMD module formatter that will be prepend to the filename on module definitions')})
    PyJs_Object_229_ = Js({u'type':Js(u'boolean'),u'default':Js(False),u'shorthand':Js(u'M'),u'description':Js(u'insert an explicit id for modules')})
    PyJs_Object_230_ = Js({u'description':Js(u'specify a custom name for module ids'),u'type':Js(u'string')})
    PyJs_Object_231_ = Js({u'description':Js(u'Whether to spawn a traversal pass per a preset. By default all presets are merged.'),u'type':Js(u'boolean'),u'default':Js(False),u'hidden':var.get(u'true')})
    PyJs_Object_232_ = Js({u'description':Js(u'Options to pass into the parser, or to change parsers (parserOpts.parser)'),u'default':Js(False)})
    PyJs_Object_233_ = Js({u'description':Js(u'Options to pass into the generator, or to change generators (generatorOpts.generator)'),u'default':Js(False)})
    PyJs_Object_194_ = Js({u'filename':PyJs_Object_195_,u'filenameRelative':PyJs_Object_196_,u'inputSourceMap':PyJs_Object_197_,u'env':PyJs_Object_198_,u'mode':PyJs_Object_200_,u'retainLines':PyJs_Object_201_,u'highlightCode':PyJs_Object_202_,u'suppressDeprecationMessages':PyJs_Object_203_,u'presets':PyJs_Object_204_,u'plugins':PyJs_Object_205_,u'ignore':PyJs_Object_206_,u'only':PyJs_Object_207_,u'code':PyJs_Object_208_,u'metadata':PyJs_Object_209_,u'ast':PyJs_Object_210_,u'extends':PyJs_Object_211_,u'comments':PyJs_Object_212_,u'shouldPrintComment':PyJs_Object_213_,u'wrapPluginVisitorMethod':PyJs_Object_214_,u'compact':PyJs_Object_215_,u'minified':PyJs_Object_216_,u'sourceMap':PyJs_Object_217_,u'sourceMaps':PyJs_Object_218_,u'sourceMapTarget':PyJs_Object_219_,u'sourceFileName':PyJs_Object_220_,u'sourceRoot':PyJs_Object_221_,u'babelrc':PyJs_Object_222_,u'sourceType':PyJs_Object_223_,u'auxiliaryCommentBefore':PyJs_Object_224_,u'auxiliaryCommentAfter':PyJs_Object_225_,u'resolveModuleSource':PyJs_Object_226_,u'getModuleId':PyJs_Object_227_,u'moduleRoot':PyJs_Object_228_,u'moduleIds':PyJs_Object_229_,u'moduleId':PyJs_Object_230_,u'passPerPreset':PyJs_Object_231_,u'parserOpts':PyJs_Object_232_,u'generatorOpts':PyJs_Object_233_})
    var.get(u'module').put(u'exports', PyJs_Object_194_)
PyJs_anonymous_193_._set_name(u'anonymous')
PyJs_Object_234_ = Js({})
@Js
def PyJs_anonymous_235_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_config', u'_interopRequireWildcard', u'_parsers', u'require', u'exports', u'module', u'normaliseOptions', u'parsers', u'_config2', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_236_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_236_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_normaliseOptions_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'opt', u'val', u'parser', u'options', u'key'])
        PyJs_Object_238_ = Js({})
        var.put(u'options', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else PyJs_Object_238_))
        for PyJsTemp in var.get(u'options'):
            var.put(u'key', PyJsTemp)
            var.put(u'val', var.get(u'options').get(var.get(u'key')))
            if (var.get(u'val')==var.get(u"null")):
                continue
            var.put(u'opt', var.get(u'_config2').get(u'default').get(var.get(u'key')))
            if (var.get(u'opt') and var.get(u'opt').get(u'alias')):
                var.put(u'opt', var.get(u'_config2').get(u'default').get(var.get(u'opt').get(u'alias')))
            if var.get(u'opt').neg():
                continue
            var.put(u'parser', var.get(u'parsers').get(var.get(u'opt').get(u'type')))
            if var.get(u'parser'):
                var.put(u'val', var.get(u'parser')(var.get(u'val')))
            var.get(u'options').put(var.get(u'key'), var.get(u'val'))
        return var.get(u'options')
    PyJsHoisted_normaliseOptions_.func_name = u'normaliseOptions'
    var.put(u'normaliseOptions', PyJsHoisted_normaliseOptions_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_237_ = Js({})
            var.put(u'newObj', PyJs_Object_237_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'config', var.get(u'undefined'))
    var.get(u'exports').put(u'normaliseOptions', var.get(u'normaliseOptions'))
    var.put(u'_parsers', var.get(u'require')(Js(u'./parsers')))
    var.put(u'parsers', var.get(u'_interopRequireWildcard')(var.get(u'_parsers')))
    var.put(u'_config', var.get(u'require')(Js(u'./config')))
    var.put(u'_config2', var.get(u'_interopRequireDefault')(var.get(u'_config')))
    pass
    pass
    var.get(u'exports').put(u'config', var.get(u'_config2').get(u'default'))
    pass
PyJs_anonymous_235_._set_name(u'anonymous')
PyJs_Object_239_ = Js({u'./config':Js(16.0),u'./parsers':Js(19.0)})
@Js
def PyJs_anonymous_240_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    @Js
    def PyJs_anonymous_241_(process, this, arguments, var=var):
        var = Scope({u'process':process, u'this':this, u'arguments':arguments}, var)
        var.registers([u'_resolve', u'_plugin2', u'_plugin3', u'_interopRequireDefault', u'_merge', u'_clone', u'_getIterator2', u'_getIterator3', u'_path2', u'_typeof2', u'_typeof3', u'process', u'_node', u'_removed', u'_objectWithoutProperties2', u'_classCallCheck3', u'_classCallCheck2', u'_babelMessages', u'_stringify2', u'OptionManager', u'_interopRequireWildcard', u'_assign', u'_config3', u'_config2', u'_buildConfigChain2', u'_merge2', u'_assign2', u'_resolve2', u'_index', u'messages', u'_cloneDeepWith2', u'_clone2', u'_stringify', u'_objectWithoutProperties3', u'context', u'_removed2', u'_path', u'_cloneDeepWith', u'_buildConfigChain'])
        @Js
        def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj'])
            PyJs_Object_243_ = Js({u'default':var.get(u'obj')})
            return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_243_)
        PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
        var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
        @Js
        def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
            var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
            var.registers([u'obj', u'key', u'newObj'])
            if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
                return var.get(u'obj')
            else:
                PyJs_Object_242_ = Js({})
                var.put(u'newObj', PyJs_Object_242_)
                if (var.get(u'obj')!=var.get(u"null")):
                    for PyJsTemp in var.get(u'obj'):
                        var.put(u'key', PyJsTemp)
                        if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                            var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
                var.get(u'newObj').put(u'default', var.get(u'obj'))
                return var.get(u'newObj')
        PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
        var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
        Js(u'use strict')
        var.get(u'exports').put(u'__esModule', var.get(u'true'))
        var.put(u'_objectWithoutProperties2', var.get(u'require')(Js(u'babel-runtime/helpers/objectWithoutProperties')))
        var.put(u'_objectWithoutProperties3', var.get(u'_interopRequireDefault')(var.get(u'_objectWithoutProperties2')))
        var.put(u'_stringify', var.get(u'require')(Js(u'babel-runtime/core-js/json/stringify')))
        var.put(u'_stringify2', var.get(u'_interopRequireDefault')(var.get(u'_stringify')))
        var.put(u'_assign', var.get(u'require')(Js(u'babel-runtime/core-js/object/assign')))
        var.put(u'_assign2', var.get(u'_interopRequireDefault')(var.get(u'_assign')))
        var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
        var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
        var.put(u'_typeof2', var.get(u'require')(Js(u'babel-runtime/helpers/typeof')))
        var.put(u'_typeof3', var.get(u'_interopRequireDefault')(var.get(u'_typeof2')))
        var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
        var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
        var.put(u'_node', var.get(u'require')(Js(u'../../../api/node')))
        var.put(u'context', var.get(u'_interopRequireWildcard')(var.get(u'_node')))
        var.put(u'_plugin2', var.get(u'require')(Js(u'../../plugin')))
        var.put(u'_plugin3', var.get(u'_interopRequireDefault')(var.get(u'_plugin2')))
        var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
        var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
        var.put(u'_index', var.get(u'require')(Js(u'./index')))
        var.put(u'_resolve', var.get(u'require')(Js(u'../../../helpers/resolve')))
        var.put(u'_resolve2', var.get(u'_interopRequireDefault')(var.get(u'_resolve')))
        var.put(u'_cloneDeepWith', var.get(u'require')(Js(u'lodash/cloneDeepWith')))
        var.put(u'_cloneDeepWith2', var.get(u'_interopRequireDefault')(var.get(u'_cloneDeepWith')))
        var.put(u'_clone', var.get(u'require')(Js(u'lodash/clone')))
        var.put(u'_clone2', var.get(u'_interopRequireDefault')(var.get(u'_clone')))
        var.put(u'_merge', var.get(u'require')(Js(u'../../../helpers/merge')))
        var.put(u'_merge2', var.get(u'_interopRequireDefault')(var.get(u'_merge')))
        var.put(u'_config2', var.get(u'require')(Js(u'./config')))
        var.put(u'_config3', var.get(u'_interopRequireDefault')(var.get(u'_config2')))
        var.put(u'_removed', var.get(u'require')(Js(u'./removed')))
        var.put(u'_removed2', var.get(u'_interopRequireDefault')(var.get(u'_removed')))
        var.put(u'_buildConfigChain', var.get(u'require')(Js(u'./build-config-chain')))
        var.put(u'_buildConfigChain2', var.get(u'_interopRequireDefault')(var.get(u'_buildConfigChain')))
        var.put(u'_path', var.get(u'require')(Js(u'path')))
        var.put(u'_path2', var.get(u'_interopRequireDefault')(var.get(u'_path')))
        pass
        pass
        @Js
        def PyJs_anonymous_244_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'OptionManager'])
            @Js
            def PyJsHoisted_OptionManager_(log, this, arguments, var=var):
                var = Scope({u'this':this, u'log':log, u'arguments':arguments}, var)
                var.registers([u'log'])
                PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'OptionManager'))
                var.get(u"this").put(u'resolvedConfigs', Js([]))
                var.get(u"this").put(u'options', var.get(u'OptionManager').callprop(u'createBareOptions'))
                var.get(u"this").put(u'log', var.get(u'log'))
            PyJsHoisted_OptionManager_.func_name = u'OptionManager'
            var.put(u'OptionManager', PyJsHoisted_OptionManager_)
            pass
            @Js
            def PyJs_memoisePluginContainer_245_(fn, loc, i, alias, this, arguments, var=var):
                var = Scope({u'loc':loc, u'arguments':arguments, u'alias':alias, u'i':i, u'memoisePluginContainer':PyJs_memoisePluginContainer_245_, u'this':this, u'fn':fn}, var)
                var.registers([u'_plugin', u'_isArray', u'obj', u'loc', u'i', u'cache', u'alias', u'_i', u'_iterator', u'_ref', u'fn'])
                #for JS loop
                var.put(u'_iterator', var.get(u'OptionManager').get(u'memoisedPlugins'))
                var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
                var.put(u'_i', Js(0.0))
                var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
                while 1:
                    pass
                    if var.get(u'_isArray'):
                        if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                            break
                        var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                        if var.get(u'_i').get(u'done'):
                            break
                        var.put(u'_ref', var.get(u'_i').get(u'value'))
                    var.put(u'cache', var.get(u'_ref'))
                    if PyJsStrictEq(var.get(u'cache').get(u'container'),var.get(u'fn')):
                        return var.get(u'cache').get(u'plugin')
                
                var.put(u'obj', PyJsComma(Js(0.0), Js(None)))
                if PyJsStrictEq(var.get(u'fn',throw=False).typeof(),Js(u'function')):
                    var.put(u'obj', var.get(u'fn')(var.get(u'context')))
                else:
                    var.put(u'obj', var.get(u'fn'))
                if PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'obj',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'obj'))),Js(u'object')):
                    var.put(u'_plugin', var.get(u'_plugin3').get(u'default').create(var.get(u'obj'), var.get(u'alias')))
                    PyJs_Object_246_ = Js({u'container':var.get(u'fn'),u'plugin':var.get(u'_plugin')})
                    var.get(u'OptionManager').get(u'memoisedPlugins').callprop(u'push', PyJs_Object_246_)
                    return var.get(u'_plugin')
                else:
                    PyJsTempException = JsToPyException(var.get(u'TypeError').create(((var.get(u'messages').callprop(u'get', Js(u'pluginNotObject'), var.get(u'loc'), var.get(u'i'), (Js(u'undefined') if PyJsStrictEq(var.get(u'obj',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'obj'))))+var.get(u'loc'))+var.get(u'i'))))
                    raise PyJsTempException
            PyJs_memoisePluginContainer_245_._set_name(u'memoisePluginContainer')
            var.get(u'OptionManager').put(u'memoisePluginContainer', PyJs_memoisePluginContainer_245_)
            @Js
            def PyJs_createBareOptions_247_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'createBareOptions':PyJs_createBareOptions_247_}, var)
                var.registers([u'_key', u'opt', u'opts'])
                PyJs_Object_248_ = Js({})
                var.put(u'opts', PyJs_Object_248_)
                for PyJsTemp in var.get(u'_config3').get(u'default'):
                    var.put(u'_key', PyJsTemp)
                    var.put(u'opt', var.get(u'_config3').get(u'default').get(var.get(u'_key')))
                    var.get(u'opts').put(var.get(u'_key'), PyJsComma(Js(0.0),var.get(u'_clone2').get(u'default'))(var.get(u'opt').get(u'default')))
                return var.get(u'opts')
            PyJs_createBareOptions_247_._set_name(u'createBareOptions')
            var.get(u'OptionManager').put(u'createBareOptions', PyJs_createBareOptions_247_)
            @Js
            def PyJs_normalisePlugin_249_(plugin, loc, i, alias, this, arguments, var=var):
                var = Scope({u'loc':loc, u'normalisePlugin':PyJs_normalisePlugin_249_, u'arguments':arguments, u'alias':alias, u'i':i, u'plugin':plugin, u'this':this}, var)
                var.registers([u'i', u'loc', u'alias', u'plugin'])
                var.put(u'plugin', (var.get(u'plugin').get(u'default') if var.get(u'plugin').get(u'__esModule') else var.get(u'plugin')))
                if var.get(u'plugin').instanceof(var.get(u'_plugin3').get(u'default')).neg():
                    if (PyJsStrictEq(var.get(u'plugin',throw=False).typeof(),Js(u'function')) or PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'plugin',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'plugin'))),Js(u'object'))):
                        var.put(u'plugin', var.get(u'OptionManager').callprop(u'memoisePluginContainer', var.get(u'plugin'), var.get(u'loc'), var.get(u'i'), var.get(u'alias')))
                    else:
                        PyJsTempException = JsToPyException(var.get(u'TypeError').create(var.get(u'messages').callprop(u'get', Js(u'pluginNotFunction'), var.get(u'loc'), var.get(u'i'), (Js(u'undefined') if PyJsStrictEq(var.get(u'plugin',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'plugin'))))))
                        raise PyJsTempException
                var.get(u'plugin').callprop(u'init', var.get(u'loc'), var.get(u'i'))
                return var.get(u'plugin')
            PyJs_normalisePlugin_249_._set_name(u'normalisePlugin')
            var.get(u'OptionManager').put(u'normalisePlugin', PyJs_normalisePlugin_249_)
            @Js
            def PyJs_normalisePlugins_250_(loc, dirname, plugins, this, arguments, var=var):
                var = Scope({u'loc':loc, u'this':this, u'normalisePlugins':PyJs_normalisePlugins_250_, u'arguments':arguments, u'plugins':plugins, u'dirname':dirname}, var)
                var.registers([u'loc', u'dirname', u'plugins'])
                @Js
                def PyJs_anonymous_251_(val, i, this, arguments, var=var):
                    var = Scope({u'i':i, u'this':this, u'arguments':arguments, u'val':val}, var)
                    var.registers([u'val', u'plugin', u'i', u'pluginLoc', u'alias', u'options'])
                    var.put(u'plugin', PyJsComma(Js(0.0), Js(None)))
                    var.put(u'options', PyJsComma(Js(0.0), Js(None)))
                    if var.get(u'val').neg():
                        PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'Falsy value found in plugins')))
                        raise PyJsTempException
                    if var.get(u'Array').callprop(u'isArray', var.get(u'val')):
                        var.put(u'plugin', var.get(u'val').get(u'0'))
                        var.put(u'options', var.get(u'val').get(u'1'))
                    else:
                        var.put(u'plugin', var.get(u'val'))
                    var.put(u'alias', (var.get(u'plugin') if PyJsStrictEq(var.get(u'plugin',throw=False).typeof(),Js(u'string')) else ((var.get(u'loc')+Js(u'$'))+var.get(u'i'))))
                    if PyJsStrictEq(var.get(u'plugin',throw=False).typeof(),Js(u'string')):
                        var.put(u'pluginLoc', (PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))((Js(u'babel-plugin-')+var.get(u'plugin')), var.get(u'dirname')) or PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'plugin'), var.get(u'dirname'))))
                        if var.get(u'pluginLoc'):
                            var.put(u'plugin', var.get(u'require')(var.get(u'pluginLoc')))
                        else:
                            PyJsTempException = JsToPyException(var.get(u'ReferenceError').create(var.get(u'messages').callprop(u'get', Js(u'pluginUnknown'), var.get(u'plugin'), var.get(u'loc'), var.get(u'i'), var.get(u'dirname'))))
                            raise PyJsTempException
                    var.put(u'plugin', var.get(u'OptionManager').callprop(u'normalisePlugin', var.get(u'plugin'), var.get(u'loc'), var.get(u'i'), var.get(u'alias')))
                    return Js([var.get(u'plugin'), var.get(u'options')])
                PyJs_anonymous_251_._set_name(u'anonymous')
                return var.get(u'plugins').callprop(u'map', PyJs_anonymous_251_)
            PyJs_normalisePlugins_250_._set_name(u'normalisePlugins')
            var.get(u'OptionManager').put(u'normalisePlugins', PyJs_normalisePlugins_250_)
            @Js
            def PyJs_mergeOptions_252_(_ref2, this, arguments, var=var):
                var = Scope({u'this':this, u'mergeOptions':PyJs_mergeOptions_252_, u'_ref2':_ref2, u'arguments':arguments}, var)
                var.registers([u'loc', u'presetConfigErr', u'dirname', u'option', u'_this', u'unknownOptErr', u'_ref2', u'extendingOpts', u'alias', u'_key2', u'rawOpts', u'opts'])
                var.put(u'_this', var.get(u"this"))
                var.put(u'rawOpts', var.get(u'_ref2').get(u'options'))
                var.put(u'extendingOpts', var.get(u'_ref2').get(u'extending'))
                var.put(u'alias', var.get(u'_ref2').get(u'alias'))
                var.put(u'loc', var.get(u'_ref2').get(u'loc'))
                var.put(u'dirname', var.get(u'_ref2').get(u'dirname'))
                var.put(u'alias', (var.get(u'alias') or Js(u'foreign')))
                if var.get(u'rawOpts').neg():
                    return var.get('undefined')
                if (PyJsStrictNeq((Js(u'undefined') if PyJsStrictEq(var.get(u'rawOpts',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'rawOpts'))),Js(u'object')) or var.get(u'Array').callprop(u'isArray', var.get(u'rawOpts'))):
                    var.get(u"this").get(u'log').callprop(u'error', (Js(u'Invalid options type for ')+var.get(u'alias')), var.get(u'TypeError'))
                @Js
                def PyJs_anonymous_253_(val, this, arguments, var=var):
                    var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
                    var.registers([u'val'])
                    if var.get(u'val').instanceof(var.get(u'_plugin3').get(u'default')):
                        return var.get(u'val')
                PyJs_anonymous_253_._set_name(u'anonymous')
                var.put(u'opts', PyJsComma(Js(0.0),var.get(u'_cloneDeepWith2').get(u'default'))(var.get(u'rawOpts'), PyJs_anonymous_253_))
                var.put(u'dirname', (var.get(u'dirname') or var.get(u'process').callprop(u'cwd')))
                var.put(u'loc', (var.get(u'loc') or var.get(u'alias')))
                for PyJsTemp in var.get(u'opts'):
                    var.put(u'_key2', PyJsTemp)
                    var.put(u'option', var.get(u'_config3').get(u'default').get(var.get(u'_key2')))
                    if (var.get(u'option').neg() and var.get(u"this").get(u'log')):
                        if var.get(u'_removed2').get(u'default').get(var.get(u'_key2')):
                            var.get(u"this").get(u'log').callprop(u'error', (((((Js(u'Using removed Babel 5 option: ')+var.get(u'alias'))+Js(u'.'))+var.get(u'_key2'))+Js(u' - '))+var.get(u'_removed2').get(u'default').get(var.get(u'_key2')).get(u'message')), var.get(u'ReferenceError'))
                        else:
                            var.put(u'unknownOptErr', ((((Js(u'Unknown option: ')+var.get(u'alias'))+Js(u'.'))+var.get(u'_key2'))+Js(u'. Check out http://babeljs.io/docs/usage/options/ for more information about options.')))
                            var.put(u'presetConfigErr', Js(u"A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\n\nInvalid:\n  `{ presets: [{option: value}] }`\nValid:\n  `{ presets: [['presetName', {option: value}]] }`\n\nFor more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options."))
                            var.get(u"this").get(u'log').callprop(u'error', ((var.get(u'unknownOptErr')+Js(u'\n\n'))+var.get(u'presetConfigErr')), var.get(u'ReferenceError'))
                PyJsComma(Js(0.0),var.get(u'_index').get(u'normaliseOptions'))(var.get(u'opts'))
                if var.get(u'opts').get(u'plugins'):
                    var.get(u'opts').put(u'plugins', var.get(u'OptionManager').callprop(u'normalisePlugins', var.get(u'loc'), var.get(u'dirname'), var.get(u'opts').get(u'plugins')))
                if var.get(u'opts').get(u'presets'):
                    if var.get(u'opts').get(u'passPerPreset'):
                        @Js
                        def PyJs_anonymous_254_(preset, presetLoc, this, arguments, var=var):
                            var = Scope({u'presetLoc':presetLoc, u'this':this, u'preset':preset, u'arguments':arguments}, var)
                            var.registers([u'presetLoc', u'preset'])
                            PyJs_Object_255_ = Js({u'options':var.get(u'preset'),u'extending':var.get(u'preset'),u'alias':var.get(u'presetLoc'),u'loc':var.get(u'presetLoc'),u'dirname':var.get(u'dirname')})
                            var.get(u'_this').callprop(u'mergeOptions', PyJs_Object_255_)
                        PyJs_anonymous_254_._set_name(u'anonymous')
                        var.get(u'opts').put(u'presets', var.get(u"this").callprop(u'resolvePresets', var.get(u'opts').get(u'presets'), var.get(u'dirname'), PyJs_anonymous_254_))
                    else:
                        var.get(u"this").callprop(u'mergePresets', var.get(u'opts').get(u'presets'), var.get(u'dirname'))
                        var.get(u'opts').delete(u'presets')
                if PyJsStrictEq(var.get(u'rawOpts'),var.get(u'extendingOpts')):
                    PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(var.get(u'extendingOpts'), var.get(u'opts'))
                else:
                    PyJsComma(Js(0.0),var.get(u'_merge2').get(u'default'))((var.get(u'extendingOpts') or var.get(u"this").get(u'options')), var.get(u'opts'))
            PyJs_mergeOptions_252_._set_name(u'mergeOptions')
            var.get(u'OptionManager').get(u'prototype').put(u'mergeOptions', PyJs_mergeOptions_252_)
            @Js
            def PyJs_mergePresets_256_(presets, dirname, this, arguments, var=var):
                var = Scope({u'this':this, u'mergePresets':PyJs_mergePresets_256_, u'presets':presets, u'dirname':dirname, u'arguments':arguments}, var)
                var.registers([u'presets', u'dirname', u'_this2'])
                var.put(u'_this2', var.get(u"this"))
                @Js
                def PyJs_anonymous_257_(presetOpts, presetLoc, this, arguments, var=var):
                    var = Scope({u'presetLoc':presetLoc, u'this':this, u'presetOpts':presetOpts, u'arguments':arguments}, var)
                    var.registers([u'presetLoc', u'presetOpts'])
                    PyJs_Object_258_ = Js({u'options':var.get(u'presetOpts'),u'alias':var.get(u'presetLoc'),u'loc':var.get(u'presetLoc'),u'dirname':var.get(u'_path2').get(u'default').callprop(u'dirname', (var.get(u'presetLoc') or Js(u'')))})
                    var.get(u'_this2').callprop(u'mergeOptions', PyJs_Object_258_)
                PyJs_anonymous_257_._set_name(u'anonymous')
                var.get(u"this").callprop(u'resolvePresets', var.get(u'presets'), var.get(u'dirname'), PyJs_anonymous_257_)
            PyJs_mergePresets_256_._set_name(u'mergePresets')
            var.get(u'OptionManager').get(u'prototype').put(u'mergePresets', PyJs_mergePresets_256_)
            @Js
            def PyJs_resolvePresets_259_(presets, dirname, onResolve, this, arguments, var=var):
                var = Scope({u'this':this, u'presets':presets, u'onResolve':onResolve, u'arguments':arguments, u'dirname':dirname, u'resolvePresets':PyJs_resolvePresets_259_}, var)
                var.registers([u'onResolve', u'presets', u'dirname'])
                @Js
                def PyJs_anonymous_260_(val, this, arguments, var=var):
                    var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
                    var.registers([u'val', u'_val', u'matches', u'rest', u'presetLoc', u'presetPath', u'_val2', u'__esModule', u'options', u'orgName'])
                    var.put(u'options', PyJsComma(Js(0.0), Js(None)))
                    if var.get(u'Array').callprop(u'isArray', var.get(u'val')):
                        if (var.get(u'val').get(u'length')>Js(2.0)):
                            PyJsTempException = JsToPyException(var.get(u'Error').create(((Js(u'Unexpected extra options ')+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'val').callprop(u'slice', Js(2.0))))+Js(u' passed to preset.'))))
                            raise PyJsTempException
                        var.put(u'_val', var.get(u'val'))
                        var.put(u'val', var.get(u'_val').get(u'0'))
                        var.put(u'options', var.get(u'_val').get(u'1'))
                    var.put(u'presetLoc', PyJsComma(Js(0.0), Js(None)))
                    try:
                        if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'string')):
                            var.put(u'presetLoc', (PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))((Js(u'babel-preset-')+var.get(u'val')), var.get(u'dirname')) or PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'val'), var.get(u'dirname'))))
                            if var.get(u'presetLoc').neg():
                                var.put(u'matches', var.get(u'val').callprop(u'match', JsRegExp(u'/^(@[^/]+)\\/(.+)$/')))
                                if var.get(u'matches'):
                                    var.put(u'orgName', var.get(u'matches').get(u'1'))
                                    var.put(u'presetPath', var.get(u'matches').get(u'2'))
                                    var.put(u'val', ((var.get(u'orgName')+Js(u'/babel-preset-'))+var.get(u'presetPath')))
                                    var.put(u'presetLoc', PyJsComma(Js(0.0),var.get(u'_resolve2').get(u'default'))(var.get(u'val'), var.get(u'dirname')))
                            if var.get(u'presetLoc').neg():
                                PyJsTempException = JsToPyException(var.get(u'Error').create((((Js(u"Couldn't find preset ")+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'val')))+Js(u' relative to directory '))+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'dirname')))))
                                raise PyJsTempException
                            var.put(u'val', var.get(u'require')(var.get(u'presetLoc')))
                        if (PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'val'))),Js(u'object')) and var.get(u'val').get(u'__esModule')):
                            if var.get(u'val').get(u'default'):
                                var.put(u'val', var.get(u'val').get(u'default'))
                            else:
                                var.put(u'_val2', var.get(u'val'))
                                var.put(u'__esModule', var.get(u'_val2').get(u'__esModule'))
                                var.put(u'rest', PyJsComma(Js(0.0),var.get(u'_objectWithoutProperties3').get(u'default'))(var.get(u'_val2'), Js([Js(u'__esModule')])))
                                var.put(u'val', var.get(u'rest'))
                        if (PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'val'))),Js(u'object')) and var.get(u'val').get(u'buildPreset')):
                            var.put(u'val', var.get(u'val').get(u'buildPreset'))
                        if (PyJsStrictNeq(var.get(u'val',throw=False).typeof(),Js(u'function')) and PyJsStrictNeq(var.get(u'options'),var.get(u'undefined'))):
                            PyJsTempException = JsToPyException(var.get(u'Error').create(((((Js(u'Options ')+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'options')))+Js(u' passed to '))+(var.get(u'presetLoc') or Js(u'a preset')))+Js(u' which does not accept options.'))))
                            raise PyJsTempException
                        if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'function')):
                            var.put(u'val', var.get(u'val')(var.get(u'context'), var.get(u'options')))
                        if PyJsStrictNeq((Js(u'undefined') if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'val'))),Js(u'object')):
                            PyJsTempException = JsToPyException(var.get(u'Error').create(((Js(u'Unsupported preset format: ')+var.get(u'val'))+Js(u'.'))))
                            raise PyJsTempException
                        (var.get(u'onResolve') and var.get(u'onResolve')(var.get(u'val'), var.get(u'presetLoc')))
                    except PyJsException as PyJsTempException:
                        PyJsHolder_65_49729099 = var.own.get(u'e')
                        var.force_own_put(u'e', PyExceptionToJs(PyJsTempException))
                        try:
                            if var.get(u'presetLoc'):
                                var.get(u'e').put(u'message', ((Js(u' (While processing preset: ')+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'presetLoc')))+Js(u')')), u'+')
                            PyJsTempException = JsToPyException(var.get(u'e'))
                            raise PyJsTempException
                        finally:
                            if PyJsHolder_65_49729099 is not None:
                                var.own[u'e'] = PyJsHolder_65_49729099
                            else:
                                del var.own[u'e']
                            del PyJsHolder_65_49729099
                    return var.get(u'val')
                PyJs_anonymous_260_._set_name(u'anonymous')
                return var.get(u'presets').callprop(u'map', PyJs_anonymous_260_)
            PyJs_resolvePresets_259_._set_name(u'resolvePresets')
            var.get(u'OptionManager').get(u'prototype').put(u'resolvePresets', PyJs_resolvePresets_259_)
            @Js
            def PyJs_normaliseOptions_261_(this, arguments, var=var):
                var = Scope({u'this':this, u'normaliseOptions':PyJs_normaliseOptions_261_, u'arguments':arguments}, var)
                var.registers([u'_key3', u'val', u'option', u'opts'])
                var.put(u'opts', var.get(u"this").get(u'options'))
                for PyJsTemp in var.get(u'_config3').get(u'default'):
                    var.put(u'_key3', PyJsTemp)
                    var.put(u'option', var.get(u'_config3').get(u'default').get(var.get(u'_key3')))
                    var.put(u'val', var.get(u'opts').get(var.get(u'_key3')))
                    if (var.get(u'val').neg() and var.get(u'option').get(u'optional')):
                        continue
                    if var.get(u'option').get(u'alias'):
                        var.get(u'opts').put(var.get(u'option').get(u'alias'), (var.get(u'opts').get(var.get(u'option').get(u'alias')) or var.get(u'val')))
                    else:
                        var.get(u'opts').put(var.get(u'_key3'), var.get(u'val'))
            PyJs_normaliseOptions_261_._set_name(u'normaliseOptions')
            var.get(u'OptionManager').get(u'prototype').put(u'normaliseOptions', PyJs_normaliseOptions_261_)
            @Js
            def PyJs_init_262_(this, arguments, var=var):
                var = Scope({u'this':this, u'init':PyJs_init_262_, u'arguments':arguments}, var)
                var.registers([u'_config', u'_isArray2', u'_ref3', u'_i2', u'opts', u'_iterator2'])
                PyJs_Object_263_ = Js({})
                var.put(u'opts', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else PyJs_Object_263_))
                #for JS loop
                var.put(u'_iterator2', PyJsComma(Js(0.0),var.get(u'_buildConfigChain2').get(u'default'))(var.get(u'opts'), var.get(u"this").get(u'log')))
                var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
                var.put(u'_i2', Js(0.0))
                var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
                while 1:
                    pass
                    if var.get(u'_isArray2'):
                        if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                            break
                        var.put(u'_ref3', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                        if var.get(u'_i2').get(u'done'):
                            break
                        var.put(u'_ref3', var.get(u'_i2').get(u'value'))
                    var.put(u'_config', var.get(u'_ref3'))
                    var.get(u"this").callprop(u'mergeOptions', var.get(u'_config'))
                
                var.get(u"this").callprop(u'normaliseOptions', var.get(u'opts'))
                return var.get(u"this").get(u'options')
            PyJs_init_262_._set_name(u'init')
            var.get(u'OptionManager').get(u'prototype').put(u'init', PyJs_init_262_)
            return var.get(u'OptionManager')
        PyJs_anonymous_244_._set_name(u'anonymous')
        var.put(u'OptionManager', PyJs_anonymous_244_())
        var.get(u'exports').put(u'default', var.get(u'OptionManager'))
        var.get(u'OptionManager').put(u'memoisedPlugins', Js([]))
        var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
    PyJs_anonymous_241_._set_name(u'anonymous')
    PyJs_anonymous_241_.callprop(u'call', var.get(u"this"), var.get(u'require')(Js(u'_process')))
PyJs_anonymous_240_._set_name(u'anonymous')
PyJs_Object_264_ = Js({u'../../../api/node':Js(6.0),u'../../../helpers/merge':Js(7.0),u'../../../helpers/resolve':Js(9.0),u'../../plugin':Js(25.0),u'./build-config-chain':Js(15.0),u'./config':Js(16.0),u'./index':Js(17.0),u'./removed':Js(20.0),u'_process':Js(531.0),u'babel-messages':Js(57.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/json/stringify':Js(97.0),u'babel-runtime/core-js/object/assign':Js(100.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/objectWithoutProperties':Js(112.0),u'babel-runtime/helpers/typeof':Js(114.0),u'lodash/clone':Js(438.0),u'lodash/cloneDeepWith':Js(440.0),u'path':Js(530.0)})
@Js
def PyJs_anonymous_265_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'util', u'exports', u'_interopRequireWildcard', u'require', u'list', u'_util', u'filename', u'_slash', u'booleanString', u'boolean', u'module', u'_slash2', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_267_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_267_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_booleanString_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'val'])
        return var.get(u'util').callprop(u'booleanify', var.get(u'val'))
    PyJsHoisted_booleanString_.func_name = u'booleanString'
    var.put(u'booleanString', PyJsHoisted_booleanString_)
    @Js
    def PyJsHoisted_boolean_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'val'])
        return var.get(u'val').neg().neg()
    PyJsHoisted_boolean_.func_name = u'boolean'
    var.put(u'boolean', PyJsHoisted_boolean_)
    @Js
    def PyJsHoisted_list_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'val'])
        return var.get(u'util').callprop(u'list', var.get(u'val'))
    PyJsHoisted_list_.func_name = u'list'
    var.put(u'list', PyJsHoisted_list_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_266_ = Js({})
            var.put(u'newObj', PyJs_Object_266_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'filename', var.get(u'undefined'))
    var.get(u'exports').put(u'boolean', var.get(u'boolean'))
    var.get(u'exports').put(u'booleanString', var.get(u'booleanString'))
    var.get(u'exports').put(u'list', var.get(u'list'))
    var.put(u'_slash', var.get(u'require')(Js(u'slash')))
    var.put(u'_slash2', var.get(u'_interopRequireDefault')(var.get(u'_slash')))
    var.put(u'_util', var.get(u'require')(Js(u'../../../util')))
    var.put(u'util', var.get(u'_interopRequireWildcard')(var.get(u'_util')))
    pass
    pass
    var.put(u'filename', var.get(u'exports').put(u'filename', var.get(u'_slash2').get(u'default')))
    pass
    pass
    pass
PyJs_anonymous_265_._set_name(u'anonymous')
PyJs_Object_268_ = Js({u'../../../util':Js(26.0),u'slash':Js(508.0)})
@Js
def PyJs_anonymous_269_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    PyJs_Object_271_ = Js({u'message':Js(u'Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`')})
    PyJs_Object_272_ = Js({u'message':Js(u'Put the specific transforms you want in the `plugins` option')})
    PyJs_Object_273_ = Js({u'message':Js(u'This is not a necessary option in Babel 6')})
    PyJs_Object_274_ = Js({u'message':Js(u'Put the specific transforms you want in the `plugins` option')})
    PyJs_Object_275_ = Js({u'message':Js(u'Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/')})
    PyJs_Object_276_ = Js({u'message':Js(u'')})
    PyJs_Object_277_ = Js({u'message':Js(u'use the `pragma` option in the `react-jsx` plugin . Check out http://babeljs.io/docs/plugins/transform-react-jsx/')})
    PyJs_Object_278_ = Js({u'message':Js(u'Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option.')})
    PyJs_Object_279_ = Js({u'message':Js(u'Not required anymore as this is enabled by default')})
    PyJs_Object_280_ = Js({u'message':Js(u'Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules')})
    PyJs_Object_281_ = Js({u'message':Js(u'Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/')})
    PyJs_Object_282_ = Js({u'message':Js(u'Put the specific transforms you want in the `plugins` option')})
    PyJs_Object_283_ = Js({u'message':Js(u'Use the `sourceMapTarget` option')})
    PyJs_Object_284_ = Js({u'message':Js(u'Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets')})
    PyJs_Object_285_ = Js({u'message':Js(u'Put the specific transforms you want in the `plugins` option')})
    PyJs_Object_270_ = Js({u'auxiliaryComment':PyJs_Object_271_,u'blacklist':PyJs_Object_272_,u'breakConfig':PyJs_Object_273_,u'experimental':PyJs_Object_274_,u'externalHelpers':PyJs_Object_275_,u'extra':PyJs_Object_276_,u'jsxPragma':PyJs_Object_277_,u'loose':PyJs_Object_278_,u'metadataUsedHelpers':PyJs_Object_279_,u'modules':PyJs_Object_280_,u'nonStandard':PyJs_Object_281_,u'optional':PyJs_Object_282_,u'sourceMapName':PyJs_Object_283_,u'stage':PyJs_Object_284_,u'whitelist':PyJs_Object_285_})
    var.get(u'module').put(u'exports', PyJs_Object_270_)
PyJs_anonymous_269_._set_name(u'anonymous')
PyJs_Object_286_ = Js({})
@Js
def PyJs_anonymous_287_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_plugin', u'exports', u'_plugin2', u'require', u'module', u'_sortBy2', u'_interopRequireDefault', u'_sortBy'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_288_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_288_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_plugin', var.get(u'require')(Js(u'../plugin')))
    var.put(u'_plugin2', var.get(u'_interopRequireDefault')(var.get(u'_plugin')))
    var.put(u'_sortBy', var.get(u'require')(Js(u'lodash/sortBy')))
    var.put(u'_sortBy2', var.get(u'_interopRequireDefault')(var.get(u'_sortBy')))
    pass
    @Js
    def PyJs_exit_292_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'exit':PyJs_exit_292_, u'arguments':arguments}, var)
        var.registers([u'node', u'hasChange', u'_ref', u'bodyNode', u'i'])
        var.put(u'node', var.get(u'_ref').get(u'node'))
        var.put(u'hasChange', Js(False))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'node').get(u'body').get(u'length')):
            try:
                var.put(u'bodyNode', var.get(u'node').get(u'body').get(var.get(u'i')))
                if (var.get(u'bodyNode') and (var.get(u'bodyNode').get(u'_blockHoist')!=var.get(u"null"))):
                    var.put(u'hasChange', var.get(u'true'))
                    break
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        if var.get(u'hasChange').neg():
            return var.get('undefined')
        @Js
        def PyJs_anonymous_293_(bodyNode, this, arguments, var=var):
            var = Scope({u'bodyNode':bodyNode, u'this':this, u'arguments':arguments}, var)
            var.registers([u'priority', u'bodyNode'])
            var.put(u'priority', (var.get(u'bodyNode') and var.get(u'bodyNode').get(u'_blockHoist')))
            if (var.get(u'priority')==var.get(u"null")):
                var.put(u'priority', Js(1.0))
            if PyJsStrictEq(var.get(u'priority'),var.get(u'true')):
                var.put(u'priority', Js(2.0))
            return ((-Js(1.0))*var.get(u'priority'))
        PyJs_anonymous_293_._set_name(u'anonymous')
        var.get(u'node').put(u'body', PyJsComma(Js(0.0),var.get(u'_sortBy2').get(u'default'))(var.get(u'node').get(u'body'), PyJs_anonymous_293_))
    PyJs_exit_292_._set_name(u'exit')
    PyJs_Object_291_ = Js({u'exit':PyJs_exit_292_})
    PyJs_Object_290_ = Js({u'Block':PyJs_Object_291_})
    PyJs_Object_289_ = Js({u'name':Js(u'internal.blockHoist'),u'visitor':PyJs_Object_290_})
    var.get(u'exports').put(u'default', var.get(u'_plugin2').get(u'default').create(PyJs_Object_289_))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_287_._set_name(u'anonymous')
PyJs_Object_294_ = Js({u'../plugin':Js(25.0),u'lodash/sortBy':Js(485.0)})
@Js
def PyJs_anonymous_295_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_plugin', u'remap', u'_symbol2', u'superVisitor', u'_interopRequireWildcard', u'_plugin2', u'SUPER_THIS_BOUND', u'require', u'_babelTypes', u'exports', u'module', u'_symbol', u't', u'_interopRequireDefault', u'shouldShadow'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_297_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_297_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_remap_(path, key, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'key':key}, var)
        var.registers([u'passedShadowFunction', u'cached', u'shadowFunction', u'classPath', u'hasSuperClass', u'init', u'key', u'fnPath', u'path', u'shadowPath', u'currentFunction', u'id'])
        var.put(u'shadowPath', var.get(u'path').callprop(u'inShadow', var.get(u'key')))
        if var.get(u'shouldShadow')(var.get(u'path'), var.get(u'shadowPath')).neg():
            return var.get('undefined')
        var.put(u'shadowFunction', var.get(u'path').get(u'node').get(u'_shadowedFunctionLiteral'))
        var.put(u'currentFunction', PyJsComma(Js(0.0), Js(None)))
        var.put(u'passedShadowFunction', Js(False))
        @Js
        def PyJs_anonymous_304_(innerPath, this, arguments, var=var):
            var = Scope({u'this':this, u'innerPath':innerPath, u'arguments':arguments}, var)
            var.registers([u'innerPath'])
            if ((var.get(u'innerPath').get(u'parentPath') and var.get(u'innerPath').get(u'parentPath').callprop(u'isClassProperty')) and PyJsStrictEq(var.get(u'innerPath').get(u'key'),Js(u'value'))):
                return var.get(u'true')
            if PyJsStrictEq(var.get(u'path'),var.get(u'innerPath')):
                return Js(False)
            if (var.get(u'innerPath').callprop(u'isProgram') or var.get(u'innerPath').callprop(u'isFunction')):
                var.put(u'currentFunction', (var.get(u'currentFunction') or var.get(u'innerPath')))
            if var.get(u'innerPath').callprop(u'isProgram'):
                var.put(u'passedShadowFunction', var.get(u'true'))
                return var.get(u'true')
            else:
                if (var.get(u'innerPath').callprop(u'isFunction') and var.get(u'innerPath').callprop(u'isArrowFunctionExpression').neg()):
                    if var.get(u'shadowFunction'):
                        if (PyJsStrictEq(var.get(u'innerPath'),var.get(u'shadowFunction')) or PyJsStrictEq(var.get(u'innerPath').get(u'node'),var.get(u'shadowFunction').get(u'node'))):
                            return var.get(u'true')
                    else:
                        if var.get(u'innerPath').callprop(u'is', Js(u'shadow')).neg():
                            return var.get(u'true')
                    var.put(u'passedShadowFunction', var.get(u'true'))
                    return Js(False)
            return Js(False)
        PyJs_anonymous_304_._set_name(u'anonymous')
        var.put(u'fnPath', var.get(u'path').callprop(u'find', PyJs_anonymous_304_))
        if ((var.get(u'shadowFunction') and var.get(u'fnPath').callprop(u'isProgram')) and var.get(u'shadowFunction').callprop(u'isProgram').neg()):
            @Js
            def PyJs_anonymous_305_(p, this, arguments, var=var):
                var = Scope({u'this':this, u'p':p, u'arguments':arguments}, var)
                var.registers([u'p'])
                return (var.get(u'p').callprop(u'isProgram') or var.get(u'p').callprop(u'isFunction'))
            PyJs_anonymous_305_._set_name(u'anonymous')
            var.put(u'fnPath', var.get(u'path').callprop(u'findParent', PyJs_anonymous_305_))
        if PyJsStrictEq(var.get(u'fnPath'),var.get(u'currentFunction')):
            return var.get('undefined')
        if var.get(u'passedShadowFunction').neg():
            return var.get('undefined')
        var.put(u'cached', var.get(u'fnPath').callprop(u'getData', var.get(u'key')))
        if var.get(u'cached'):
            return var.get(u'path').callprop(u'replaceWith', var.get(u'cached'))
        var.put(u'id', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', var.get(u'key')))
        var.get(u'fnPath').callprop(u'setData', var.get(u'key'), var.get(u'id'))
        @Js
        def PyJs_anonymous_306_(p, this, arguments, var=var):
            var = Scope({u'this':this, u'p':p, u'arguments':arguments}, var)
            var.registers([u'p'])
            return var.get(u'p').callprop(u'isClass')
        PyJs_anonymous_306_._set_name(u'anonymous')
        var.put(u'classPath', var.get(u'fnPath').callprop(u'findParent', PyJs_anonymous_306_))
        var.put(u'hasSuperClass', ((var.get(u'classPath') and var.get(u'classPath').get(u'node')) and var.get(u'classPath').get(u'node').get(u'superClass')).neg().neg())
        PyJs_Object_307_ = Js({u'kind':Js(u'constructor')})
        if ((PyJsStrictEq(var.get(u'key'),Js(u'this')) and var.get(u'fnPath').callprop(u'isMethod', PyJs_Object_307_)) and var.get(u'hasSuperClass')):
            PyJs_Object_308_ = Js({u'id':var.get(u'id')})
            var.get(u'fnPath').get(u'scope').callprop(u'push', PyJs_Object_308_)
            PyJs_Object_309_ = Js({u'id':var.get(u'id')})
            var.get(u'fnPath').callprop(u'traverse', var.get(u'superVisitor'), PyJs_Object_309_)
        else:
            var.put(u'init', (var.get(u't').callprop(u'thisExpression') if PyJsStrictEq(var.get(u'key'),Js(u'this')) else var.get(u't').callprop(u'identifier', var.get(u'key'))))
            if var.get(u'shadowFunction'):
                var.get(u'init').put(u'_shadowedFunctionLiteral', var.get(u'shadowFunction'))
            PyJs_Object_310_ = Js({u'id':var.get(u'id'),u'init':var.get(u'init')})
            var.get(u'fnPath').get(u'scope').callprop(u'push', PyJs_Object_310_)
        return var.get(u'path').callprop(u'replaceWith', var.get(u'id'))
    PyJsHoisted_remap_.func_name = u'remap'
    var.put(u'remap', PyJsHoisted_remap_)
    @Js
    def PyJsHoisted_shouldShadow_(path, shadowPath, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'shadowPath':shadowPath, u'arguments':arguments}, var)
        var.registers([u'path', u'shadowPath'])
        if var.get(u'path').callprop(u'is', Js(u'_forceShadow')):
            return var.get(u'true')
        else:
            return var.get(u'shadowPath')
    PyJsHoisted_shouldShadow_.func_name = u'shouldShadow'
    var.put(u'shouldShadow', PyJsHoisted_shouldShadow_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_296_ = Js({})
            var.put(u'newObj', PyJs_Object_296_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    var.put(u'_plugin', var.get(u'require')(Js(u'../plugin')))
    var.put(u'_plugin2', var.get(u'_interopRequireDefault')(var.get(u'_plugin')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'SUPER_THIS_BOUND', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))(Js(u'super this bound')))
    @Js
    def PyJs_CallExpression_299_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'CallExpression':PyJs_CallExpression_299_}, var)
        var.registers([u'node', u'path'])
        if var.get(u'path').callprop(u'get', Js(u'callee')).callprop(u'isSuper').neg():
            return var.get('undefined')
        var.put(u'node', var.get(u'path').get(u'node'))
        if var.get(u'node').get(var.get(u'SUPER_THIS_BOUND')):
            return var.get('undefined')
        var.get(u'node').put(var.get(u'SUPER_THIS_BOUND'), var.get(u'true'))
        var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u"this").get(u'id'), var.get(u'node')))
    PyJs_CallExpression_299_._set_name(u'CallExpression')
    PyJs_Object_298_ = Js({u'CallExpression':PyJs_CallExpression_299_})
    var.put(u'superVisitor', PyJs_Object_298_)
    @Js
    def PyJs_ThisExpression_302_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'ThisExpression':PyJs_ThisExpression_302_, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u'remap')(var.get(u'path'), Js(u'this'))
    PyJs_ThisExpression_302_._set_name(u'ThisExpression')
    @Js
    def PyJs_ReferencedIdentifier_303_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_303_, u'arguments':arguments}, var)
        var.registers([u'path'])
        if PyJsStrictEq(var.get(u'path').get(u'node').get(u'name'),Js(u'arguments')):
            var.get(u'remap')(var.get(u'path'), Js(u'arguments'))
    PyJs_ReferencedIdentifier_303_._set_name(u'ReferencedIdentifier')
    PyJs_Object_301_ = Js({u'ThisExpression':PyJs_ThisExpression_302_,u'ReferencedIdentifier':PyJs_ReferencedIdentifier_303_})
    PyJs_Object_300_ = Js({u'name':Js(u'internal.shadowFunctions'),u'visitor':PyJs_Object_301_})
    var.get(u'exports').put(u'default', var.get(u'_plugin2').get(u'default').create(PyJs_Object_300_))
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_295_._set_name(u'anonymous')
PyJs_Object_311_ = Js({u'../plugin':Js(25.0),u'babel-runtime/core-js/symbol':Js(105.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_312_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_plugin', u'Pipeline', u'_plugin2', u'_file', u'require', u'_normalizeAst2', u'exports', u'module', u'_file2', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2', u'_normalizeAst'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_313_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_313_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_normalizeAst', var.get(u'require')(Js(u'../helpers/normalize-ast')))
    var.put(u'_normalizeAst2', var.get(u'_interopRequireDefault')(var.get(u'_normalizeAst')))
    var.put(u'_plugin', var.get(u'require')(Js(u'./plugin')))
    var.put(u'_plugin2', var.get(u'_interopRequireDefault')(var.get(u'_plugin')))
    var.put(u'_file', var.get(u'require')(Js(u'./file')))
    var.put(u'_file2', var.get(u'_interopRequireDefault')(var.get(u'_file')))
    pass
    @Js
    def PyJs_anonymous_314_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'Pipeline'])
        @Js
        def PyJsHoisted_Pipeline_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Pipeline'))
        PyJsHoisted_Pipeline_.func_name = u'Pipeline'
        var.put(u'Pipeline', PyJsHoisted_Pipeline_)
        pass
        @Js
        def PyJs_lint_315_(code, this, arguments, var=var):
            var = Scope({u'this':this, u'lint':PyJs_lint_315_, u'code':code, u'arguments':arguments}, var)
            var.registers([u'code', u'opts'])
            PyJs_Object_316_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else PyJs_Object_316_))
            var.get(u'opts').put(u'code', Js(False))
            var.get(u'opts').put(u'mode', Js(u'lint'))
            return var.get(u"this").callprop(u'transform', var.get(u'code'), var.get(u'opts'))
        PyJs_lint_315_._set_name(u'lint')
        var.get(u'Pipeline').get(u'prototype').put(u'lint', PyJs_lint_315_)
        @Js
        def PyJs_pretransform_317_(code, opts, this, arguments, var=var):
            var = Scope({u'this':this, u'pretransform':PyJs_pretransform_317_, u'code':code, u'arguments':arguments, u'opts':opts}, var)
            var.registers([u'code', u'opts', u'file'])
            var.put(u'file', var.get(u'_file2').get(u'default').create(var.get(u'opts'), var.get(u"this")))
            @Js
            def PyJs_anonymous_318_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                var.get(u'file').callprop(u'addCode', var.get(u'code'))
                var.get(u'file').callprop(u'parseCode', var.get(u'code'))
                return var.get(u'file')
            PyJs_anonymous_318_._set_name(u'anonymous')
            return var.get(u'file').callprop(u'wrap', var.get(u'code'), PyJs_anonymous_318_)
        PyJs_pretransform_317_._set_name(u'pretransform')
        var.get(u'Pipeline').get(u'prototype').put(u'pretransform', PyJs_pretransform_317_)
        @Js
        def PyJs_transform_319_(code, opts, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'opts':opts, u'transform':PyJs_transform_319_}, var)
            var.registers([u'code', u'opts', u'file'])
            var.put(u'file', var.get(u'_file2').get(u'default').create(var.get(u'opts'), var.get(u"this")))
            @Js
            def PyJs_anonymous_320_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                var.get(u'file').callprop(u'addCode', var.get(u'code'))
                var.get(u'file').callprop(u'parseCode', var.get(u'code'))
                return var.get(u'file').callprop(u'transform')
            PyJs_anonymous_320_._set_name(u'anonymous')
            return var.get(u'file').callprop(u'wrap', var.get(u'code'), PyJs_anonymous_320_)
        PyJs_transform_319_._set_name(u'transform')
        var.get(u'Pipeline').get(u'prototype').put(u'transform', PyJs_transform_319_)
        @Js
        def PyJs_analyse_321_(code, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'analyse':PyJs_analyse_321_, u'arguments':arguments}, var)
            var.registers([u'visitor', u'code', u'opts'])
            PyJs_Object_322_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else PyJs_Object_322_))
            var.put(u'visitor', var.get(u'arguments').get(u'2'))
            var.get(u'opts').put(u'code', Js(False))
            if var.get(u'visitor'):
                var.get(u'opts').put(u'plugins', (var.get(u'opts').get(u'plugins') or Js([])))
                PyJs_Object_323_ = Js({u'visitor':var.get(u'visitor')})
                var.get(u'opts').get(u'plugins').callprop(u'push', var.get(u'_plugin2').get(u'default').create(PyJs_Object_323_))
            return var.get(u"this").callprop(u'transform', var.get(u'code'), var.get(u'opts')).get(u'metadata')
        PyJs_analyse_321_._set_name(u'analyse')
        var.get(u'Pipeline').get(u'prototype').put(u'analyse', PyJs_analyse_321_)
        @Js
        def PyJs_transformFromAst_324_(ast, code, opts, this, arguments, var=var):
            var = Scope({u'code':code, u'ast':ast, u'this':this, u'transformFromAst':PyJs_transformFromAst_324_, u'arguments':arguments, u'opts':opts}, var)
            var.registers([u'code', u'opts', u'file', u'ast'])
            var.put(u'ast', PyJsComma(Js(0.0),var.get(u'_normalizeAst2').get(u'default'))(var.get(u'ast')))
            var.put(u'file', var.get(u'_file2').get(u'default').create(var.get(u'opts'), var.get(u"this")))
            @Js
            def PyJs_anonymous_325_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                var.get(u'file').callprop(u'addCode', var.get(u'code'))
                var.get(u'file').callprop(u'addAst', var.get(u'ast'))
                return var.get(u'file').callprop(u'transform')
            PyJs_anonymous_325_._set_name(u'anonymous')
            return var.get(u'file').callprop(u'wrap', var.get(u'code'), PyJs_anonymous_325_)
        PyJs_transformFromAst_324_._set_name(u'transformFromAst')
        var.get(u'Pipeline').get(u'prototype').put(u'transformFromAst', PyJs_transformFromAst_324_)
        return var.get(u'Pipeline')
    PyJs_anonymous_314_._set_name(u'anonymous')
    var.put(u'Pipeline', PyJs_anonymous_314_())
    var.get(u'exports').put(u'default', var.get(u'Pipeline'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_312_._set_name(u'anonymous')
PyJs_Object_326_ = Js({u'../helpers/normalize-ast':Js(8.0),u'./file':Js(12.0),u'./plugin':Js(25.0),u'babel-runtime/helpers/classCallCheck':Js(110.0)})
@Js
def PyJs_anonymous_327_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_store', u'_inherits3', u'_inherits2', u'require', u'_file6', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'module', u'_file5', u'_store2', u'PluginPass', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_328_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_328_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
    var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
    var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
    var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
    var.put(u'_store', var.get(u'require')(Js(u'../store')))
    var.put(u'_store2', var.get(u'_interopRequireDefault')(var.get(u'_store')))
    var.put(u'_file5', var.get(u'require')(Js(u'./file')))
    var.put(u'_file6', var.get(u'_interopRequireDefault')(var.get(u'_file5')))
    pass
    @Js
    def PyJs_anonymous_329_(_Store, this, arguments, var=var):
        var = Scope({u'this':this, u'_Store':_Store, u'arguments':arguments}, var)
        var.registers([u'PluginPass', u'_Store'])
        @Js
        def PyJsHoisted_PluginPass_(file, plugin, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'file':file, u'plugin':plugin}, var)
            var.registers([u'file', u'options', u'_this', u'plugin'])
            PyJs_Object_330_ = Js({})
            var.put(u'options', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else PyJs_Object_330_))
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'PluginPass'))
            var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_Store').callprop(u'call', var.get(u"this"))))
            var.get(u'_this').put(u'plugin', var.get(u'plugin'))
            var.get(u'_this').put(u'key', var.get(u'plugin').get(u'key'))
            var.get(u'_this').put(u'file', var.get(u'file'))
            var.get(u'_this').put(u'opts', var.get(u'options'))
            return var.get(u'_this')
        PyJsHoisted_PluginPass_.func_name = u'PluginPass'
        var.put(u'PluginPass', PyJsHoisted_PluginPass_)
        PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'PluginPass'), var.get(u'_Store'))
        pass
        @Js
        def PyJs_addHelper_331_(this, arguments, var=var):
            var = Scope({u'this':this, u'addHelper':PyJs_addHelper_331_, u'arguments':arguments}, var)
            var.registers([u'_file'])
            pass
            return var.put(u'_file', var.get(u"this").get(u'file')).get(u'addHelper').callprop(u'apply', var.get(u'_file'), var.get(u'arguments'))
        PyJs_addHelper_331_._set_name(u'addHelper')
        var.get(u'PluginPass').get(u'prototype').put(u'addHelper', PyJs_addHelper_331_)
        @Js
        def PyJs_addImport_332_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'addImport':PyJs_addImport_332_}, var)
            var.registers([u'_file2'])
            pass
            return var.put(u'_file2', var.get(u"this").get(u'file')).get(u'addImport').callprop(u'apply', var.get(u'_file2'), var.get(u'arguments'))
        PyJs_addImport_332_._set_name(u'addImport')
        var.get(u'PluginPass').get(u'prototype').put(u'addImport', PyJs_addImport_332_)
        @Js
        def PyJs_getModuleName_333_(this, arguments, var=var):
            var = Scope({u'this':this, u'getModuleName':PyJs_getModuleName_333_, u'arguments':arguments}, var)
            var.registers([u'_file3'])
            pass
            return var.put(u'_file3', var.get(u"this").get(u'file')).get(u'getModuleName').callprop(u'apply', var.get(u'_file3'), var.get(u'arguments'))
        PyJs_getModuleName_333_._set_name(u'getModuleName')
        var.get(u'PluginPass').get(u'prototype').put(u'getModuleName', PyJs_getModuleName_333_)
        @Js
        def PyJs_buildCodeFrameError_334_(this, arguments, var=var):
            var = Scope({u'this':this, u'buildCodeFrameError':PyJs_buildCodeFrameError_334_, u'arguments':arguments}, var)
            var.registers([u'_file4'])
            pass
            return var.put(u'_file4', var.get(u"this").get(u'file')).get(u'buildCodeFrameError').callprop(u'apply', var.get(u'_file4'), var.get(u'arguments'))
        PyJs_buildCodeFrameError_334_._set_name(u'buildCodeFrameError')
        var.get(u'PluginPass').get(u'prototype').put(u'buildCodeFrameError', PyJs_buildCodeFrameError_334_)
        return var.get(u'PluginPass')
    PyJs_anonymous_329_._set_name(u'anonymous')
    var.put(u'PluginPass', PyJs_anonymous_329_(var.get(u'_store2').get(u'default')))
    var.get(u'exports').put(u'default', var.get(u'PluginPass'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_327_._set_name(u'anonymous')
PyJs_Object_335_ = Js({u'../store':Js(10.0),u'./file':Js(12.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0)})
@Js
def PyJs_anonymous_336_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_store', u'module', u'_clone', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_babelTraverse', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'_store2', u'_optionManager2', u'_classCallCheck3', u'_classCallCheck2', u'_optionManager', u'exports', u'_babelTraverse2', u'_interopRequireWildcard', u'Plugin', u'_inherits3', u'_inherits2', u'_assign', u'_assign2', u'require', u'messages', u'GLOBAL_VISITOR_PROPS', u'_clone2', u'_babelMessages'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_338_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_338_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_337_ = Js({})
            var.put(u'newObj', PyJs_Object_337_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
    var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
    var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
    var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
    var.put(u'_optionManager', var.get(u'require')(Js(u'./file/options/option-manager')))
    var.put(u'_optionManager2', var.get(u'_interopRequireDefault')(var.get(u'_optionManager')))
    var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
    var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
    var.put(u'_store', var.get(u'require')(Js(u'../store')))
    var.put(u'_store2', var.get(u'_interopRequireDefault')(var.get(u'_store')))
    var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
    var.put(u'_babelTraverse2', var.get(u'_interopRequireDefault')(var.get(u'_babelTraverse')))
    var.put(u'_assign', var.get(u'require')(Js(u'lodash/assign')))
    var.put(u'_assign2', var.get(u'_interopRequireDefault')(var.get(u'_assign')))
    var.put(u'_clone', var.get(u'require')(Js(u'lodash/clone')))
    var.put(u'_clone2', var.get(u'_interopRequireDefault')(var.get(u'_clone')))
    pass
    pass
    var.put(u'GLOBAL_VISITOR_PROPS', Js([Js(u'enter'), Js(u'exit')]))
    @Js
    def PyJs_anonymous_339_(_Store, this, arguments, var=var):
        var = Scope({u'this':this, u'_Store':_Store, u'arguments':arguments}, var)
        var.registers([u'_Store', u'Plugin'])
        @Js
        def PyJsHoisted_Plugin_(plugin, key, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'key':key, u'plugin':plugin}, var)
            var.registers([u'key', u'_this', u'plugin'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Plugin'))
            var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_Store').callprop(u'call', var.get(u"this"))))
            var.get(u'_this').put(u'initialized', Js(False))
            PyJs_Object_340_ = Js({})
            var.get(u'_this').put(u'raw', PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(PyJs_Object_340_, var.get(u'plugin')))
            var.get(u'_this').put(u'key', (var.get(u'_this').callprop(u'take', Js(u'name')) or var.get(u'key')))
            var.get(u'_this').put(u'manipulateOptions', var.get(u'_this').callprop(u'take', Js(u'manipulateOptions')))
            var.get(u'_this').put(u'post', var.get(u'_this').callprop(u'take', Js(u'post')))
            var.get(u'_this').put(u'pre', var.get(u'_this').callprop(u'take', Js(u'pre')))
            PyJs_Object_341_ = Js({})
            var.get(u'_this').put(u'visitor', var.get(u'_this').callprop(u'normaliseVisitor', (PyJsComma(Js(0.0),var.get(u'_clone2').get(u'default'))(var.get(u'_this').callprop(u'take', Js(u'visitor'))) or PyJs_Object_341_)))
            return var.get(u'_this')
        PyJsHoisted_Plugin_.func_name = u'Plugin'
        var.put(u'Plugin', PyJsHoisted_Plugin_)
        PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'Plugin'), var.get(u'_Store'))
        pass
        @Js
        def PyJs_take_342_(key, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'key':key, u'take':PyJs_take_342_}, var)
            var.registers([u'key', u'val'])
            var.put(u'val', var.get(u"this").get(u'raw').get(var.get(u'key')))
            var.get(u"this").get(u'raw').delete(var.get(u'key'))
            return var.get(u'val')
        PyJs_take_342_._set_name(u'take')
        var.get(u'Plugin').get(u'prototype').put(u'take', PyJs_take_342_)
        @Js
        def PyJs_chain_343_(target, key, this, arguments, var=var):
            var = Scope({u'this':this, u'chain':PyJs_chain_343_, u'target':target, u'key':key, u'arguments':arguments}, var)
            var.registers([u'fns', u'target', u'key'])
            if var.get(u'target').get(var.get(u'key')).neg():
                return var.get(u"this").get(var.get(u'key'))
            if var.get(u"this").get(var.get(u'key')).neg():
                return var.get(u'target').get(var.get(u'key'))
            var.put(u'fns', Js([var.get(u'target').get(var.get(u'key')), var.get(u"this").get(var.get(u'key'))]))
            @Js
            def PyJs_anonymous_344_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([u'_isArray', u'_iterator', u'val', u'_len', u'args', u'ret', u'_key', u'_i', u'_ref', u'fn'])
                var.put(u'val', PyJsComma(Js(0.0), Js(None)))
                #for JS loop
                var.put(u'_len', var.get(u'arguments').get(u'length'))
                var.put(u'args', var.get(u'Array')(var.get(u'_len')))
                var.put(u'_key', Js(0.0))
                while (var.get(u'_key')<var.get(u'_len')):
                    try:
                        var.get(u'args').put(var.get(u'_key'), var.get(u'arguments').get(var.get(u'_key')))
                    finally:
                            (var.put(u'_key',Js(var.get(u'_key').to_number())+Js(1))-Js(1))
                #for JS loop
                var.put(u'_iterator', var.get(u'fns'))
                var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
                var.put(u'_i', Js(0.0))
                var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
                while 1:
                    pass
                    if var.get(u'_isArray'):
                        if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                            break
                        var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                        if var.get(u'_i').get(u'done'):
                            break
                        var.put(u'_ref', var.get(u'_i').get(u'value'))
                    var.put(u'fn', var.get(u'_ref'))
                    if var.get(u'fn'):
                        var.put(u'ret', var.get(u'fn').callprop(u'apply', var.get(u"this"), var.get(u'args')))
                        if (var.get(u'ret')!=var.get(u"null")):
                            var.put(u'val', var.get(u'ret'))
                
                return var.get(u'val')
            PyJs_anonymous_344_._set_name(u'anonymous')
            return PyJs_anonymous_344_
        PyJs_chain_343_._set_name(u'chain')
        var.get(u'Plugin').get(u'prototype').put(u'chain', PyJs_chain_343_)
        @Js
        def PyJs_maybeInherit_345_(loc, this, arguments, var=var):
            var = Scope({u'this':this, u'loc':loc, u'arguments':arguments, u'maybeInherit':PyJs_maybeInherit_345_}, var)
            var.registers([u'inherits', u'loc'])
            var.put(u'inherits', var.get(u"this").callprop(u'take', Js(u'inherits')))
            if var.get(u'inherits').neg():
                return var.get('undefined')
            var.put(u'inherits', var.get(u'_optionManager2').get(u'default').callprop(u'normalisePlugin', var.get(u'inherits'), var.get(u'loc'), Js(u'inherits')))
            var.get(u"this").put(u'manipulateOptions', var.get(u"this").callprop(u'chain', var.get(u'inherits'), Js(u'manipulateOptions')))
            var.get(u"this").put(u'post', var.get(u"this").callprop(u'chain', var.get(u'inherits'), Js(u'post')))
            var.get(u"this").put(u'pre', var.get(u"this").callprop(u'chain', var.get(u'inherits'), Js(u'pre')))
            var.get(u"this").put(u'visitor', var.get(u'_babelTraverse2').get(u'default').get(u'visitors').callprop(u'merge', Js([var.get(u'inherits').get(u'visitor'), var.get(u"this").get(u'visitor')])))
        PyJs_maybeInherit_345_._set_name(u'maybeInherit')
        var.get(u'Plugin').get(u'prototype').put(u'maybeInherit', PyJs_maybeInherit_345_)
        @Js
        def PyJs_init_346_(loc, i, this, arguments, var=var):
            var = Scope({u'i':i, u'loc':loc, u'init':PyJs_init_346_, u'this':this, u'arguments':arguments}, var)
            var.registers([u'i', u'loc', u'key'])
            if var.get(u"this").get(u'initialized'):
                return var.get('undefined')
            var.get(u"this").put(u'initialized', var.get(u'true'))
            var.get(u"this").callprop(u'maybeInherit', var.get(u'loc'))
            for PyJsTemp in var.get(u"this").get(u'raw'):
                var.put(u'key', PyJsTemp)
                PyJsTempException = JsToPyException(var.get(u'Error').create(var.get(u'messages').callprop(u'get', Js(u'pluginInvalidProperty'), var.get(u'loc'), var.get(u'i'), var.get(u'key'))))
                raise PyJsTempException
        PyJs_init_346_._set_name(u'init')
        var.get(u'Plugin').get(u'prototype').put(u'init', PyJs_init_346_)
        @Js
        def PyJs_normaliseVisitor_347_(visitor, this, arguments, var=var):
            var = Scope({u'this':this, u'visitor':visitor, u'normaliseVisitor':PyJs_normaliseVisitor_347_, u'arguments':arguments}, var)
            var.registers([u'_isArray2', u'visitor', u'_i2', u'_ref2', u'key', u'_iterator2'])
            #for JS loop
            var.put(u'_iterator2', var.get(u'GLOBAL_VISITOR_PROPS'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                var.put(u'key', var.get(u'_ref2'))
                if var.get(u'visitor').get(var.get(u'key')):
                    PyJsTempException = JsToPyException(var.get(u'Error').create(Js(u"Plugins aren't allowed to specify catch-all enter/exit handlers. Please target individual nodes.")))
                    raise PyJsTempException
            
            var.get(u'_babelTraverse2').get(u'default').callprop(u'explode', var.get(u'visitor'))
            return var.get(u'visitor')
        PyJs_normaliseVisitor_347_._set_name(u'normaliseVisitor')
        var.get(u'Plugin').get(u'prototype').put(u'normaliseVisitor', PyJs_normaliseVisitor_347_)
        return var.get(u'Plugin')
    PyJs_anonymous_339_._set_name(u'anonymous')
    var.put(u'Plugin', PyJs_anonymous_339_(var.get(u'_store2').get(u'default')))
    var.get(u'exports').put(u'default', var.get(u'Plugin'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_336_._set_name(u'anonymous')
PyJs_Object_348_ = Js({u'../store':Js(10.0),u'./file/options/option-manager':Js(18.0),u'babel-messages':Js(57.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0),u'babel-traverse':Js(225.0),u'lodash/assign':Js(435.0),u'lodash/clone':Js(438.0)})
@Js
def PyJs_anonymous_349_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_shouldIgnore', u'_startsWith', u'module', u'_isString2', u'_slash2', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_isBoolean', u'_isRegExp2', u'shouldIgnore', u'_slash', u'booleanify', u'_isRegExp', u'_minimatch2', u'exports', u'_escapeRegExp2', u'_minimatch', u'_includes2', u'_util', u'canCompile', u'_path2', u'arrayify', u'_escapeRegExp', u'_isString', u'_startsWith2', u'list', u'regexify', u'_includes', u'require', u'_isBoolean2', u'_path'])
    @Js
    def PyJsHoisted__shouldIgnore_(pattern, filename, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'arguments':arguments, u'filename':filename}, var)
        var.registers([u'pattern', u'filename'])
        if PyJsStrictEq(var.get(u'pattern',throw=False).typeof(),Js(u'function')):
            return var.get(u'pattern')(var.get(u'filename'))
        else:
            return var.get(u'pattern').callprop(u'test', var.get(u'filename'))
    PyJsHoisted__shouldIgnore_.func_name = u'_shouldIgnore'
    var.put(u'_shouldIgnore', PyJsHoisted__shouldIgnore_)
    @Js
    def PyJsHoisted_shouldIgnore_(filename, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'filename':filename}, var)
        var.registers([u'_isArray', u'_pattern', u'_iterator', u'_isArray2', u'pattern', u'_i2', u'_ref2', u'ignore', u'only', u'_i', u'_ref', u'filename', u'_iterator2'])
        var.put(u'ignore', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else Js([])))
        var.put(u'only', var.get(u'arguments').get(u'2'))
        var.put(u'filename', var.get(u'filename').callprop(u'replace', JsRegExp(u'/\\\\/g'), Js(u'/')))
        if var.get(u'only'):
            #for JS loop
            var.put(u'_iterator', var.get(u'only'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'pattern', var.get(u'_ref'))
                if var.get(u'_shouldIgnore')(var.get(u'pattern'), var.get(u'filename')):
                    return Js(False)
            
            return var.get(u'true')
        else:
            if var.get(u'ignore').get(u'length'):
                #for JS loop
                var.put(u'_iterator2', var.get(u'ignore'))
                var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
                var.put(u'_i2', Js(0.0))
                var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
                while 1:
                    pass
                    if var.get(u'_isArray2'):
                        if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                            break
                        var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                        if var.get(u'_i2').get(u'done'):
                            break
                        var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                    var.put(u'_pattern', var.get(u'_ref2'))
                    if var.get(u'_shouldIgnore')(var.get(u'_pattern'), var.get(u'filename')):
                        return var.get(u'true')
                
        return Js(False)
    PyJsHoisted_shouldIgnore_.func_name = u'shouldIgnore'
    var.put(u'shouldIgnore', PyJsHoisted_shouldIgnore_)
    @Js
    def PyJsHoisted_list_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'val'])
        if var.get(u'val').neg():
            return Js([])
        else:
            if var.get(u'Array').callprop(u'isArray', var.get(u'val')):
                return var.get(u'val')
            else:
                if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'string')):
                    return var.get(u'val').callprop(u'split', Js(u','))
                else:
                    return Js([var.get(u'val')])
    PyJsHoisted_list_.func_name = u'list'
    var.put(u'list', PyJsHoisted_list_)
    @Js
    def PyJsHoisted_regexify_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'regex', u'val'])
        if var.get(u'val').neg():
            return var.get(u'RegExp').create(JsRegExp(u'/.^/'))
        if var.get(u'Array').callprop(u'isArray', var.get(u'val')):
            var.put(u'val', var.get(u'RegExp').create(var.get(u'val').callprop(u'map', var.get(u'_escapeRegExp2').get(u'default')).callprop(u'join', Js(u'|')), Js(u'i')))
        if PyJsStrictEq(var.get(u'val',throw=False).typeof(),Js(u'string')):
            var.put(u'val', PyJsComma(Js(0.0),var.get(u'_slash2').get(u'default'))(var.get(u'val')))
            if (PyJsComma(Js(0.0),var.get(u'_startsWith2').get(u'default'))(var.get(u'val'), Js(u'./')) or PyJsComma(Js(0.0),var.get(u'_startsWith2').get(u'default'))(var.get(u'val'), Js(u'*/'))):
                var.put(u'val', var.get(u'val').callprop(u'slice', Js(2.0)))
            if PyJsComma(Js(0.0),var.get(u'_startsWith2').get(u'default'))(var.get(u'val'), Js(u'**/')):
                var.put(u'val', var.get(u'val').callprop(u'slice', Js(3.0)))
            PyJs_Object_355_ = Js({u'nocase':var.get(u'true')})
            var.put(u'regex', var.get(u'_minimatch2').get(u'default').callprop(u'makeRe', var.get(u'val'), PyJs_Object_355_))
            return var.get(u'RegExp').create(var.get(u'regex').get(u'source').callprop(u'slice', Js(1.0), (-Js(1.0))), Js(u'i'))
        if PyJsComma(Js(0.0),var.get(u'_isRegExp2').get(u'default'))(var.get(u'val')):
            return var.get(u'val')
        PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'illegal type for regexify')))
        raise PyJsTempException
    PyJsHoisted_regexify_.func_name = u'regexify'
    var.put(u'regexify', PyJsHoisted_regexify_)
    @Js
    def PyJsHoisted_booleanify_(val, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
        var.registers([u'val'])
        if (PyJsStrictEq(var.get(u'val'),Js(u'true')) or (var.get(u'val')==Js(1.0))):
            return var.get(u'true')
        if ((PyJsStrictEq(var.get(u'val'),Js(u'false')) or (var.get(u'val')==Js(0.0))) or var.get(u'val').neg()):
            return Js(False)
        return var.get(u'val')
    PyJsHoisted_booleanify_.func_name = u'booleanify'
    var.put(u'booleanify', PyJsHoisted_booleanify_)
    @Js
    def PyJsHoisted_canCompile_(filename, altExts, this, arguments, var=var):
        var = Scope({u'this':this, u'altExts':altExts, u'arguments':arguments, u'filename':filename}, var)
        var.registers([u'ext', u'exts', u'altExts', u'filename'])
        var.put(u'exts', (var.get(u'altExts') or var.get(u'canCompile').get(u'EXTENSIONS')))
        var.put(u'ext', var.get(u'_path2').get(u'default').callprop(u'extname', var.get(u'filename')))
        return PyJsComma(Js(0.0),var.get(u'_includes2').get(u'default'))(var.get(u'exts'), var.get(u'ext'))
    PyJsHoisted_canCompile_.func_name = u'canCompile'
    var.put(u'canCompile', PyJsHoisted_canCompile_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_354_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_354_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_arrayify_(val, mapFn, this, arguments, var=var):
        var = Scope({u'this':this, u'mapFn':mapFn, u'arguments':arguments, u'val':val}, var)
        var.registers([u'mapFn', u'val'])
        if var.get(u'val').neg():
            return Js([])
        if PyJsComma(Js(0.0),var.get(u'_isBoolean2').get(u'default'))(var.get(u'val')):
            return var.get(u'arrayify')(Js([var.get(u'val')]), var.get(u'mapFn'))
        if PyJsComma(Js(0.0),var.get(u'_isString2').get(u'default'))(var.get(u'val')):
            return var.get(u'arrayify')(var.get(u'list')(var.get(u'val')), var.get(u'mapFn'))
        if var.get(u'Array').callprop(u'isArray', var.get(u'val')):
            if var.get(u'mapFn'):
                var.put(u'val', var.get(u'val').callprop(u'map', var.get(u'mapFn')))
            return var.get(u'val')
        return Js([var.get(u'val')])
    PyJsHoisted_arrayify_.func_name = u'arrayify'
    var.put(u'arrayify', PyJsHoisted_arrayify_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'inspect', var.get(u'exports').put(u'inherits', var.get(u'undefined')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_util', var.get(u'require')(Js(u'util')))
    @Js
    def PyJs_get_351_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_351_}, var)
        var.registers([])
        return var.get(u'_util').get(u'inherits')
    PyJs_get_351_._set_name(u'get')
    PyJs_Object_350_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_351_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'inherits'), PyJs_Object_350_)
    @Js
    def PyJs_get_353_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_353_}, var)
        var.registers([])
        return var.get(u'_util').get(u'inspect')
    PyJs_get_353_._set_name(u'get')
    PyJs_Object_352_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_353_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'inspect'), PyJs_Object_352_)
    var.get(u'exports').put(u'canCompile', var.get(u'canCompile'))
    var.get(u'exports').put(u'list', var.get(u'list'))
    var.get(u'exports').put(u'regexify', var.get(u'regexify'))
    var.get(u'exports').put(u'arrayify', var.get(u'arrayify'))
    var.get(u'exports').put(u'booleanify', var.get(u'booleanify'))
    var.get(u'exports').put(u'shouldIgnore', var.get(u'shouldIgnore'))
    var.put(u'_escapeRegExp', var.get(u'require')(Js(u'lodash/escapeRegExp')))
    var.put(u'_escapeRegExp2', var.get(u'_interopRequireDefault')(var.get(u'_escapeRegExp')))
    var.put(u'_startsWith', var.get(u'require')(Js(u'lodash/startsWith')))
    var.put(u'_startsWith2', var.get(u'_interopRequireDefault')(var.get(u'_startsWith')))
    var.put(u'_isBoolean', var.get(u'require')(Js(u'lodash/isBoolean')))
    var.put(u'_isBoolean2', var.get(u'_interopRequireDefault')(var.get(u'_isBoolean')))
    var.put(u'_minimatch', var.get(u'require')(Js(u'minimatch')))
    var.put(u'_minimatch2', var.get(u'_interopRequireDefault')(var.get(u'_minimatch')))
    var.put(u'_includes', var.get(u'require')(Js(u'lodash/includes')))
    var.put(u'_includes2', var.get(u'_interopRequireDefault')(var.get(u'_includes')))
    var.put(u'_isString', var.get(u'require')(Js(u'lodash/isString')))
    var.put(u'_isString2', var.get(u'_interopRequireDefault')(var.get(u'_isString')))
    var.put(u'_isRegExp', var.get(u'require')(Js(u'lodash/isRegExp')))
    var.put(u'_isRegExp2', var.get(u'_interopRequireDefault')(var.get(u'_isRegExp')))
    var.put(u'_path', var.get(u'require')(Js(u'path')))
    var.put(u'_path2', var.get(u'_interopRequireDefault')(var.get(u'_path')))
    var.put(u'_slash', var.get(u'require')(Js(u'slash')))
    var.put(u'_slash2', var.get(u'_interopRequireDefault')(var.get(u'_slash')))
    pass
    pass
    var.get(u'canCompile').put(u'EXTENSIONS', Js([Js(u'.js'), Js(u'.jsx'), Js(u'.es6'), Js(u'.es')]))
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_349_._set_name(u'anonymous')
PyJs_Object_356_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'lodash/escapeRegExp':Js(445.0),u'lodash/includes':Js(456.0),u'lodash/isBoolean':Js(461.0),u'lodash/isRegExp':Js(470.0),u'lodash/isString':Js(471.0),u'lodash/startsWith':Js(486.0),u'minimatch':Js(27.0),u'path':Js(530.0),u'slash':Js(508.0),u'util':Js(534.0)})
@Js
def PyJs_anonymous_357_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'Minimatch', u'qmark', u'module', u'parse', u'regExpEscape', u'path', u'minimatch', u'reSpecials', u'make', u'twoStarNoDot', u'match', u'exports', u'star', u'plTypes', u'charSet', u'parseNegate', u'twoStarDot', u'expand', u'SUBPARSE', u'globUnescape', u'braceExpand', u'makeRe', u'GLOBSTAR', u'slashSplit', u'filter', u'ext', u'require'])
    @Js
    def PyJsHoisted_minimatch_(p, pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'p':p, u'options':options, u'arguments':arguments, u'pattern':pattern}, var)
        var.registers([u'p', u'options', u'pattern'])
        if PyJsStrictNeq(var.get(u'pattern',throw=False).typeof(),Js(u'string')):
            PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'glob pattern string required')))
            raise PyJsTempException
        if var.get(u'options').neg():
            PyJs_Object_379_ = Js({})
            var.put(u'options', PyJs_Object_379_)
        if (var.get(u'options').get(u'nocomment').neg() and PyJsStrictEq(var.get(u'pattern').callprop(u'charAt', Js(0.0)),Js(u'#'))):
            return Js(False)
        if PyJsStrictEq(var.get(u'pattern').callprop(u'trim'),Js(u'')):
            return PyJsStrictEq(var.get(u'p'),Js(u''))
        return var.get(u'Minimatch').create(var.get(u'pattern'), var.get(u'options')).callprop(u'match', var.get(u'p'))
    PyJsHoisted_minimatch_.func_name = u'minimatch'
    var.put(u'minimatch', PyJsHoisted_minimatch_)
    @Js
    def PyJsHoisted_globUnescape_(s, this, arguments, var=var):
        var = Scope({u'this':this, u's':s, u'arguments':arguments}, var)
        var.registers([u's'])
        return var.get(u's').callprop(u'replace', JsRegExp(u'/\\\\(.)/g'), Js(u'$1'))
    PyJsHoisted_globUnescape_.func_name = u'globUnescape'
    var.put(u'globUnescape', PyJsHoisted_globUnescape_)
    @Js
    def PyJsHoisted_makeRe_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'twoStar', u'set', u'flags', u'options', u're'])
        if (var.get(u"this").get(u'regexp') or PyJsStrictEq(var.get(u"this").get(u'regexp'),Js(False))):
            return var.get(u"this").get(u'regexp')
        var.put(u'set', var.get(u"this").get(u'set'))
        if var.get(u'set').get(u'length').neg():
            var.get(u"this").put(u'regexp', Js(False))
            return var.get(u"this").get(u'regexp')
        var.put(u'options', var.get(u"this").get(u'options'))
        var.put(u'twoStar', (var.get(u'star') if var.get(u'options').get(u'noglobstar') else (var.get(u'twoStarDot') if var.get(u'options').get(u'dot') else var.get(u'twoStarNoDot'))))
        var.put(u'flags', (Js(u'i') if var.get(u'options').get(u'nocase') else Js(u'')))
        @Js
        def PyJs_anonymous_392_(pattern, this, arguments, var=var):
            var = Scope({u'this':this, u'pattern':pattern, u'arguments':arguments}, var)
            var.registers([u'pattern'])
            @Js
            def PyJs_anonymous_393_(p, this, arguments, var=var):
                var = Scope({u'this':this, u'p':p, u'arguments':arguments}, var)
                var.registers([u'p'])
                return (var.get(u'twoStar') if PyJsStrictEq(var.get(u'p'),var.get(u'GLOBSTAR')) else (var.get(u'regExpEscape')(var.get(u'p')) if PyJsStrictEq(var.get(u'p',throw=False).typeof(),Js(u'string')) else var.get(u'p').get(u'_src')))
            PyJs_anonymous_393_._set_name(u'anonymous')
            return var.get(u'pattern').callprop(u'map', PyJs_anonymous_393_).callprop(u'join', Js(u'\\/'))
        PyJs_anonymous_392_._set_name(u'anonymous')
        var.put(u're', var.get(u'set').callprop(u'map', PyJs_anonymous_392_).callprop(u'join', Js(u'|')))
        var.put(u're', ((Js(u'^(?:')+var.get(u're'))+Js(u')$')))
        if var.get(u"this").get(u'negate'):
            var.put(u're', ((Js(u'^(?!')+var.get(u're'))+Js(u').*$')))
        try:
            var.get(u"this").put(u'regexp', var.get(u'RegExp').create(var.get(u're'), var.get(u'flags')))
        except PyJsException as PyJsTempException:
            PyJsHolder_6578_58961032 = var.own.get(u'ex')
            var.force_own_put(u'ex', PyExceptionToJs(PyJsTempException))
            try:
                var.get(u"this").put(u'regexp', Js(False))
            finally:
                if PyJsHolder_6578_58961032 is not None:
                    var.own[u'ex'] = PyJsHolder_6578_58961032
                else:
                    del var.own[u'ex']
                del PyJsHolder_6578_58961032
        return var.get(u"this").get(u'regexp')
    PyJsHoisted_makeRe_.func_name = u'makeRe'
    var.put(u'makeRe', PyJsHoisted_makeRe_)
    @Js
    def PyJsHoisted_regExpEscape_(s, this, arguments, var=var):
        var = Scope({u'this':this, u's':s, u'arguments':arguments}, var)
        var.registers([u's'])
        return var.get(u's').callprop(u'replace', JsRegExp(u'/[-[\\]{}()*+?.,\\\\^$|#\\s]/g'), Js(u'\\$&'))
    PyJsHoisted_regExpEscape_.func_name = u'regExpEscape'
    var.put(u'regExpEscape', PyJsHoisted_regExpEscape_)
    @Js
    def PyJsHoisted_Minimatch_(pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'options':options, u'arguments':arguments}, var)
        var.registers([u'pattern', u'options'])
        if var.get(u"this").instanceof(var.get(u'Minimatch')).neg():
            return var.get(u'Minimatch').create(var.get(u'pattern'), var.get(u'options'))
        if PyJsStrictNeq(var.get(u'pattern',throw=False).typeof(),Js(u'string')):
            PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'glob pattern string required')))
            raise PyJsTempException
        if var.get(u'options').neg():
            PyJs_Object_380_ = Js({})
            var.put(u'options', PyJs_Object_380_)
        var.put(u'pattern', var.get(u'pattern').callprop(u'trim'))
        if PyJsStrictNeq(var.get(u'path').get(u'sep'),Js(u'/')):
            var.put(u'pattern', var.get(u'pattern').callprop(u'split', var.get(u'path').get(u'sep')).callprop(u'join', Js(u'/')))
        var.get(u"this").put(u'options', var.get(u'options'))
        var.get(u"this").put(u'set', Js([]))
        var.get(u"this").put(u'pattern', var.get(u'pattern'))
        var.get(u"this").put(u'regexp', var.get(u"null"))
        var.get(u"this").put(u'negate', Js(False))
        var.get(u"this").put(u'comment', Js(False))
        var.get(u"this").put(u'empty', Js(False))
        var.get(u"this").callprop(u'make')
    PyJsHoisted_Minimatch_.func_name = u'Minimatch'
    var.put(u'Minimatch', PyJsHoisted_Minimatch_)
    @Js
    def PyJsHoisted_make_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'pattern', u'set', u'options'])
        if var.get(u"this").get(u'_made'):
            return var.get('undefined')
        var.put(u'pattern', var.get(u"this").get(u'pattern'))
        var.put(u'options', var.get(u"this").get(u'options'))
        if (var.get(u'options').get(u'nocomment').neg() and PyJsStrictEq(var.get(u'pattern').callprop(u'charAt', Js(0.0)),Js(u'#'))):
            var.get(u"this").put(u'comment', var.get(u'true'))
            return var.get('undefined')
        if var.get(u'pattern').neg():
            var.get(u"this").put(u'empty', var.get(u'true'))
            return var.get('undefined')
        var.get(u"this").callprop(u'parseNegate')
        var.put(u'set', var.get(u"this").put(u'globSet', var.get(u"this").callprop(u'braceExpand')))
        if var.get(u'options').get(u'debug'):
            var.get(u"this").put(u'debug', var.get(u'console').get(u'error'))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), var.get(u'set'))
        @Js
        def PyJs_anonymous_382_(s, this, arguments, var=var):
            var = Scope({u'this':this, u's':s, u'arguments':arguments}, var)
            var.registers([u's'])
            return var.get(u's').callprop(u'split', var.get(u'slashSplit'))
        PyJs_anonymous_382_._set_name(u'anonymous')
        var.put(u'set', var.get(u"this").put(u'globParts', var.get(u'set').callprop(u'map', PyJs_anonymous_382_)))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), var.get(u'set'))
        @Js
        def PyJs_anonymous_383_(s, si, set, this, arguments, var=var):
            var = Scope({u'this':this, u's':s, u'set':set, u'si':si, u'arguments':arguments}, var)
            var.registers([u's', u'set', u'si'])
            return var.get(u's').callprop(u'map', var.get(u"this").get(u'parse'), var.get(u"this"))
        PyJs_anonymous_383_._set_name(u'anonymous')
        var.put(u'set', var.get(u'set').callprop(u'map', PyJs_anonymous_383_, var.get(u"this")))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), var.get(u'set'))
        @Js
        def PyJs_anonymous_384_(s, this, arguments, var=var):
            var = Scope({u'this':this, u's':s, u'arguments':arguments}, var)
            var.registers([u's'])
            return PyJsStrictEq(var.get(u's').callprop(u'indexOf', Js(False)),(-Js(1.0)))
        PyJs_anonymous_384_._set_name(u'anonymous')
        var.put(u'set', var.get(u'set').callprop(u'filter', PyJs_anonymous_384_))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), var.get(u'set'))
        var.get(u"this").put(u'set', var.get(u'set'))
    PyJsHoisted_make_.func_name = u'make'
    var.put(u'make', PyJsHoisted_make_)
    @Js
    def PyJsHoisted_charSet_(s, this, arguments, var=var):
        var = Scope({u'this':this, u's':s, u'arguments':arguments}, var)
        var.registers([u's'])
        @Js
        def PyJs_anonymous_366_(set, c, this, arguments, var=var):
            var = Scope({u'this':this, u'c':c, u'set':set, u'arguments':arguments}, var)
            var.registers([u'c', u'set'])
            var.get(u'set').put(var.get(u'c'), var.get(u'true'))
            return var.get(u'set')
        PyJs_anonymous_366_._set_name(u'anonymous')
        PyJs_Object_367_ = Js({})
        return var.get(u's').callprop(u'split', Js(u'')).callprop(u'reduce', PyJs_anonymous_366_, PyJs_Object_367_)
    PyJsHoisted_charSet_.func_name = u'charSet'
    var.put(u'charSet', PyJsHoisted_charSet_)
    @Js
    def PyJsHoisted_filter_(pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'options':options, u'arguments':arguments}, var)
        var.registers([u'pattern', u'options'])
        PyJs_Object_368_ = Js({})
        var.put(u'options', (var.get(u'options') or PyJs_Object_368_))
        @Js
        def PyJs_anonymous_369_(p, i, list, this, arguments, var=var):
            var = Scope({u'i':i, u'p':p, u'this':this, u'list':list, u'arguments':arguments}, var)
            var.registers([u'i', u'p', u'list'])
            return var.get(u'minimatch')(var.get(u'p'), var.get(u'pattern'), var.get(u'options'))
        PyJs_anonymous_369_._set_name(u'anonymous')
        return PyJs_anonymous_369_
    PyJsHoisted_filter_.func_name = u'filter'
    var.put(u'filter', PyJsHoisted_filter_)
    @Js
    def PyJsHoisted_ext_(a, b, this, arguments, var=var):
        var = Scope({u'a':a, u'this':this, u'b':b, u'arguments':arguments}, var)
        var.registers([u'a', u'b', u't'])
        PyJs_Object_370_ = Js({})
        var.put(u'a', (var.get(u'a') or PyJs_Object_370_))
        PyJs_Object_371_ = Js({})
        var.put(u'b', (var.get(u'b') or PyJs_Object_371_))
        PyJs_Object_372_ = Js({})
        var.put(u't', PyJs_Object_372_)
        @Js
        def PyJs_anonymous_373_(k, this, arguments, var=var):
            var = Scope({u'this':this, u'k':k, u'arguments':arguments}, var)
            var.registers([u'k'])
            var.get(u't').put(var.get(u'k'), var.get(u'b').get(var.get(u'k')))
        PyJs_anonymous_373_._set_name(u'anonymous')
        var.get(u'Object').callprop(u'keys', var.get(u'b')).callprop(u'forEach', PyJs_anonymous_373_)
        @Js
        def PyJs_anonymous_374_(k, this, arguments, var=var):
            var = Scope({u'this':this, u'k':k, u'arguments':arguments}, var)
            var.registers([u'k'])
            var.get(u't').put(var.get(u'k'), var.get(u'a').get(var.get(u'k')))
        PyJs_anonymous_374_._set_name(u'anonymous')
        var.get(u'Object').callprop(u'keys', var.get(u'a')).callprop(u'forEach', PyJs_anonymous_374_)
        return var.get(u't')
    PyJsHoisted_ext_.func_name = u'ext'
    var.put(u'ext', PyJsHoisted_ext_)
    @Js
    def PyJsHoisted_parseNegate_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'i', u'pattern', u'l', u'negateOffset', u'negate', u'options'])
        var.put(u'pattern', var.get(u"this").get(u'pattern'))
        var.put(u'negate', Js(False))
        var.put(u'options', var.get(u"this").get(u'options'))
        var.put(u'negateOffset', Js(0.0))
        if var.get(u'options').get(u'nonegate'):
            return var.get('undefined')
        #for JS loop
        var.put(u'i', Js(0.0))
        var.put(u'l', var.get(u'pattern').get(u'length'))
        while ((var.get(u'i')<var.get(u'l')) and PyJsStrictEq(var.get(u'pattern').callprop(u'charAt', var.get(u'i')),Js(u'!'))):
            try:
                var.put(u'negate', var.get(u'negate').neg())
                (var.put(u'negateOffset',Js(var.get(u'negateOffset').to_number())+Js(1))-Js(1))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        if var.get(u'negateOffset'):
            var.get(u"this").put(u'pattern', var.get(u'pattern').callprop(u'substr', var.get(u'negateOffset')))
        var.get(u"this").put(u'negate', var.get(u'negate'))
    PyJsHoisted_parseNegate_.func_name = u'parseNegate'
    var.put(u'parseNegate', PyJsHoisted_parseNegate_)
    @Js
    def PyJsHoisted_parse_(pattern, isSub, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'isSub':isSub, u'arguments':arguments}, var)
        var.registers([u'hasMagic', u'newRe', u'patternStart', u'dollar', u'nlLast', u'cs', u'isSub', u'nl', u'cleanAfter', u'reClassStart', u'pattern', u'self', u'addPatternStart', u'nlFirst', u're', u'tail', u'classStart', u'clearStateChar', u'regExp', u'pl', u'patternListStack', u'escaping', u'stateChar', u'len', u'nlAfter', u'nlBefore', u'c', u'i', u'sp', u'inClass', u'n', u'openParensBefore', u'flags', u't', u'negativeLists', u'options'])
        @Js
        def PyJsHoisted_clearStateChar_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([])
            if var.get(u'stateChar'):
                while 1:
                    SWITCHED = False
                    CONDITION = (var.get(u'stateChar'))
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'*')):
                        SWITCHED = True
                        var.put(u're', var.get(u'star'), u'+')
                        var.put(u'hasMagic', var.get(u'true'))
                        break
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'?')):
                        SWITCHED = True
                        var.put(u're', var.get(u'qmark'), u'+')
                        var.put(u'hasMagic', var.get(u'true'))
                        break
                    if True:
                        SWITCHED = True
                        var.put(u're', (Js(u'\\')+var.get(u'stateChar')), u'+')
                        break
                    SWITCHED = True
                    break
                var.get(u'self').callprop(u'debug', Js(u'clearStateChar %j %j'), var.get(u'stateChar'), var.get(u're'))
                var.put(u'stateChar', Js(False))
        PyJsHoisted_clearStateChar_.func_name = u'clearStateChar'
        var.put(u'clearStateChar', PyJsHoisted_clearStateChar_)
        if (var.get(u'pattern').get(u'length')>(Js(1024.0)*Js(64.0))):
            PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'pattern is too long')))
            raise PyJsTempException
        var.put(u'options', var.get(u"this").get(u'options'))
        if (var.get(u'options').get(u'noglobstar').neg() and PyJsStrictEq(var.get(u'pattern'),Js(u'**'))):
            return var.get(u'GLOBSTAR')
        if PyJsStrictEq(var.get(u'pattern'),Js(u'')):
            return Js(u'')
        var.put(u're', Js(u''))
        var.put(u'hasMagic', var.get(u'options').get(u'nocase').neg().neg())
        var.put(u'escaping', Js(False))
        var.put(u'patternListStack', Js([]))
        var.put(u'negativeLists', Js([]))
        pass
        var.put(u'inClass', Js(False))
        var.put(u'reClassStart', (-Js(1.0)))
        var.put(u'classStart', (-Js(1.0)))
        var.put(u'patternStart', (Js(u'') if PyJsStrictEq(var.get(u'pattern').callprop(u'charAt', Js(0.0)),Js(u'.')) else (Js(u'(?!(?:^|\\/)\\.{1,2}(?:$|\\/))') if var.get(u'options').get(u'dot') else Js(u'(?!\\.)'))))
        var.put(u'self', var.get(u"this"))
        pass
        #for JS loop
        var.put(u'i', Js(0.0))
        var.put(u'len', var.get(u'pattern').get(u'length'))
        while ((var.get(u'i')<var.get(u'len')) and var.put(u'c', var.get(u'pattern').callprop(u'charAt', var.get(u'i')))):
            try:
                var.get(u"this").callprop(u'debug', Js(u'%s\t%s %s %j'), var.get(u'pattern'), var.get(u'i'), var.get(u're'), var.get(u'c'))
                if (var.get(u'escaping') and var.get(u'reSpecials').get(var.get(u'c'))):
                    var.put(u're', (Js(u'\\')+var.get(u'c')), u'+')
                    var.put(u'escaping', Js(False))
                    continue
                while 1:
                    SWITCHED = False
                    CONDITION = (var.get(u'c'))
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'/')):
                        SWITCHED = True
                        return Js(False)
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'\\')):
                        SWITCHED = True
                        var.get(u'clearStateChar')()
                        var.put(u'escaping', var.get(u'true'))
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'?')):
                        SWITCHED = True
                        pass
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'*')):
                        SWITCHED = True
                        pass
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'+')):
                        SWITCHED = True
                        pass
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'@')):
                        SWITCHED = True
                        pass
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'!')):
                        SWITCHED = True
                        var.get(u"this").callprop(u'debug', Js(u'%s\t%s %s %j <-- stateChar'), var.get(u'pattern'), var.get(u'i'), var.get(u're'), var.get(u'c'))
                        if var.get(u'inClass'):
                            var.get(u"this").callprop(u'debug', Js(u'  in class'))
                            if (PyJsStrictEq(var.get(u'c'),Js(u'!')) and PyJsStrictEq(var.get(u'i'),(var.get(u'classStart')+Js(1.0)))):
                                var.put(u'c', Js(u'^'))
                            var.put(u're', var.get(u'c'), u'+')
                            continue
                        var.get(u'self').callprop(u'debug', Js(u'call clearStateChar %j'), var.get(u'stateChar'))
                        var.get(u'clearStateChar')()
                        var.put(u'stateChar', var.get(u'c'))
                        if var.get(u'options').get(u'noext'):
                            var.get(u'clearStateChar')()
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'(')):
                        SWITCHED = True
                        if var.get(u'inClass'):
                            var.put(u're', Js(u'('), u'+')
                            continue
                        if var.get(u'stateChar').neg():
                            var.put(u're', Js(u'\\('), u'+')
                            continue
                        PyJs_Object_388_ = Js({u'type':var.get(u'stateChar'),u'start':(var.get(u'i')-Js(1.0)),u'reStart':var.get(u're').get(u'length'),u'open':var.get(u'plTypes').get(var.get(u'stateChar')).get(u'open'),u'close':var.get(u'plTypes').get(var.get(u'stateChar')).get(u'close')})
                        var.get(u'patternListStack').callprop(u'push', PyJs_Object_388_)
                        var.put(u're', (Js(u'(?:(?!(?:') if PyJsStrictEq(var.get(u'stateChar'),Js(u'!')) else Js(u'(?:')), u'+')
                        var.get(u"this").callprop(u'debug', Js(u'plType %j %j'), var.get(u'stateChar'), var.get(u're'))
                        var.put(u'stateChar', Js(False))
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u')')):
                        SWITCHED = True
                        if (var.get(u'inClass') or var.get(u'patternListStack').get(u'length').neg()):
                            var.put(u're', Js(u'\\)'), u'+')
                            continue
                        var.get(u'clearStateChar')()
                        var.put(u'hasMagic', var.get(u'true'))
                        var.put(u'pl', var.get(u'patternListStack').callprop(u'pop'))
                        var.put(u're', var.get(u'pl').get(u'close'), u'+')
                        if PyJsStrictEq(var.get(u'pl').get(u'type'),Js(u'!')):
                            var.get(u'negativeLists').callprop(u'push', var.get(u'pl'))
                        var.get(u'pl').put(u'reEnd', var.get(u're').get(u'length'))
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'|')):
                        SWITCHED = True
                        if ((var.get(u'inClass') or var.get(u'patternListStack').get(u'length').neg()) or var.get(u'escaping')):
                            var.put(u're', Js(u'\\|'), u'+')
                            var.put(u'escaping', Js(False))
                            continue
                        var.get(u'clearStateChar')()
                        var.put(u're', Js(u'|'), u'+')
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'[')):
                        SWITCHED = True
                        var.get(u'clearStateChar')()
                        if var.get(u'inClass'):
                            var.put(u're', (Js(u'\\')+var.get(u'c')), u'+')
                            continue
                        var.put(u'inClass', var.get(u'true'))
                        var.put(u'classStart', var.get(u'i'))
                        var.put(u'reClassStart', var.get(u're').get(u'length'))
                        var.put(u're', var.get(u'c'), u'+')
                        continue
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u']')):
                        SWITCHED = True
                        if (PyJsStrictEq(var.get(u'i'),(var.get(u'classStart')+Js(1.0))) or var.get(u'inClass').neg()):
                            var.put(u're', (Js(u'\\')+var.get(u'c')), u'+')
                            var.put(u'escaping', Js(False))
                            continue
                        if var.get(u'inClass'):
                            var.put(u'cs', var.get(u'pattern').callprop(u'substring', (var.get(u'classStart')+Js(1.0)), var.get(u'i')))
                            try:
                                var.get(u'RegExp')(((Js(u'[')+var.get(u'cs'))+Js(u']')))
                            except PyJsException as PyJsTempException:
                                PyJsHolder_6572_91644122 = var.own.get(u'er')
                                var.force_own_put(u'er', PyExceptionToJs(PyJsTempException))
                                try:
                                    var.put(u'sp', var.get(u"this").callprop(u'parse', var.get(u'cs'), var.get(u'SUBPARSE')))
                                    var.put(u're', (((var.get(u're').callprop(u'substr', Js(0.0), var.get(u'reClassStart'))+Js(u'\\['))+var.get(u'sp').get(u'0'))+Js(u'\\]')))
                                    var.put(u'hasMagic', (var.get(u'hasMagic') or var.get(u'sp').get(u'1')))
                                    var.put(u'inClass', Js(False))
                                    continue
                                finally:
                                    if PyJsHolder_6572_91644122 is not None:
                                        var.own[u'er'] = PyJsHolder_6572_91644122
                                    else:
                                        del var.own[u'er']
                                    del PyJsHolder_6572_91644122
                        var.put(u'hasMagic', var.get(u'true'))
                        var.put(u'inClass', Js(False))
                        var.put(u're', var.get(u'c'), u'+')
                        continue
                    if True:
                        SWITCHED = True
                        var.get(u'clearStateChar')()
                        if var.get(u'escaping'):
                            var.put(u'escaping', Js(False))
                        else:
                            if (var.get(u'reSpecials').get(var.get(u'c')) and (PyJsStrictEq(var.get(u'c'),Js(u'^')) and var.get(u'inClass')).neg()):
                                var.put(u're', Js(u'\\'), u'+')
                        var.put(u're', var.get(u'c'), u'+')
                    SWITCHED = True
                    break
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        if var.get(u'inClass'):
            var.put(u'cs', var.get(u'pattern').callprop(u'substr', (var.get(u'classStart')+Js(1.0))))
            var.put(u'sp', var.get(u"this").callprop(u'parse', var.get(u'cs'), var.get(u'SUBPARSE')))
            var.put(u're', ((var.get(u're').callprop(u'substr', Js(0.0), var.get(u'reClassStart'))+Js(u'\\['))+var.get(u'sp').get(u'0')))
            var.put(u'hasMagic', (var.get(u'hasMagic') or var.get(u'sp').get(u'1')))
        #for JS loop
        var.put(u'pl', var.get(u'patternListStack').callprop(u'pop'))
        while var.get(u'pl'):
            try:
                var.put(u'tail', var.get(u're').callprop(u'slice', (var.get(u'pl').get(u'reStart')+var.get(u'pl').get(u'open').get(u'length'))))
                var.get(u"this").callprop(u'debug', Js(u'setting tail'), var.get(u're'), var.get(u'pl'))
                @Js
                def PyJs_anonymous_389_(_, PyJsArg_2431_, PyJsArg_2432_, this, arguments, var=var):
                    var = Scope({u'this':this, u'$2':PyJsArg_2432_, u'arguments':arguments, u'_':_, u'$1':PyJsArg_2431_}, var)
                    var.registers([u'$2', u'_', u'$1'])
                    if var.get(u'$2').neg():
                        var.put(u'$2', Js(u'\\'))
                    return (((var.get(u'$1')+var.get(u'$1'))+var.get(u'$2'))+Js(u'|'))
                PyJs_anonymous_389_._set_name(u'anonymous')
                var.put(u'tail', var.get(u'tail').callprop(u'replace', JsRegExp(u'/((?:\\\\{2}){0,64})(\\\\?)\\|/g'), PyJs_anonymous_389_))
                var.get(u"this").callprop(u'debug', Js(u'tail=%j\n   %s'), var.get(u'tail'), var.get(u'tail'), var.get(u'pl'), var.get(u're'))
                var.put(u't', (var.get(u'star') if PyJsStrictEq(var.get(u'pl').get(u'type'),Js(u'*')) else (var.get(u'qmark') if PyJsStrictEq(var.get(u'pl').get(u'type'),Js(u'?')) else (Js(u'\\')+var.get(u'pl').get(u'type')))))
                var.put(u'hasMagic', var.get(u'true'))
                var.put(u're', (((var.get(u're').callprop(u'slice', Js(0.0), var.get(u'pl').get(u'reStart'))+var.get(u't'))+Js(u'\\('))+var.get(u'tail')))
            finally:
                    var.put(u'pl', var.get(u'patternListStack').callprop(u'pop'))
        var.get(u'clearStateChar')()
        if var.get(u'escaping'):
            var.put(u're', Js(u'\\\\'), u'+')
        var.put(u'addPatternStart', Js(False))
        while 1:
            SWITCHED = False
            CONDITION = (var.get(u're').callprop(u'charAt', Js(0.0)))
            if SWITCHED or PyJsStrictEq(CONDITION, Js(u'.')):
                SWITCHED = True
                pass
            if SWITCHED or PyJsStrictEq(CONDITION, Js(u'[')):
                SWITCHED = True
                pass
            if SWITCHED or PyJsStrictEq(CONDITION, Js(u'(')):
                SWITCHED = True
                var.put(u'addPatternStart', var.get(u'true'))
            SWITCHED = True
            break
        #for JS loop
        var.put(u'n', (var.get(u'negativeLists').get(u'length')-Js(1.0)))
        while (var.get(u'n')>(-Js(1.0))):
            try:
                var.put(u'nl', var.get(u'negativeLists').get(var.get(u'n')))
                var.put(u'nlBefore', var.get(u're').callprop(u'slice', Js(0.0), var.get(u'nl').get(u'reStart')))
                var.put(u'nlFirst', var.get(u're').callprop(u'slice', var.get(u'nl').get(u'reStart'), (var.get(u'nl').get(u'reEnd')-Js(8.0))))
                var.put(u'nlLast', var.get(u're').callprop(u'slice', (var.get(u'nl').get(u'reEnd')-Js(8.0)), var.get(u'nl').get(u'reEnd')))
                var.put(u'nlAfter', var.get(u're').callprop(u'slice', var.get(u'nl').get(u'reEnd')))
                var.put(u'nlLast', var.get(u'nlAfter'), u'+')
                var.put(u'openParensBefore', (var.get(u'nlBefore').callprop(u'split', Js(u'(')).get(u'length')-Js(1.0)))
                var.put(u'cleanAfter', var.get(u'nlAfter'))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'openParensBefore')):
                    try:
                        var.put(u'cleanAfter', var.get(u'cleanAfter').callprop(u'replace', JsRegExp(u'/\\)[+*?]?/'), Js(u'')))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                var.put(u'nlAfter', var.get(u'cleanAfter'))
                var.put(u'dollar', Js(u''))
                if (PyJsStrictEq(var.get(u'nlAfter'),Js(u'')) and PyJsStrictNeq(var.get(u'isSub'),var.get(u'SUBPARSE'))):
                    var.put(u'dollar', Js(u'$'))
                var.put(u'newRe', ((((var.get(u'nlBefore')+var.get(u'nlFirst'))+var.get(u'nlAfter'))+var.get(u'dollar'))+var.get(u'nlLast')))
                var.put(u're', var.get(u'newRe'))
            finally:
                    (var.put(u'n',Js(var.get(u'n').to_number())-Js(1))+Js(1))
        if (PyJsStrictNeq(var.get(u're'),Js(u'')) and var.get(u'hasMagic')):
            var.put(u're', (Js(u'(?=.)')+var.get(u're')))
        if var.get(u'addPatternStart'):
            var.put(u're', (var.get(u'patternStart')+var.get(u're')))
        if PyJsStrictEq(var.get(u'isSub'),var.get(u'SUBPARSE')):
            return Js([var.get(u're'), var.get(u'hasMagic')])
        if var.get(u'hasMagic').neg():
            return var.get(u'globUnescape')(var.get(u'pattern'))
        var.put(u'flags', (Js(u'i') if var.get(u'options').get(u'nocase') else Js(u'')))
        try:
            var.put(u'regExp', var.get(u'RegExp').create(((Js(u'^')+var.get(u're'))+Js(u'$')), var.get(u'flags')))
        except PyJsException as PyJsTempException:
            PyJsHolder_6572_96421937 = var.own.get(u'er')
            var.force_own_put(u'er', PyExceptionToJs(PyJsTempException))
            try:
                return var.get(u'RegExp').create(Js(u'$.'))
            finally:
                if PyJsHolder_6572_96421937 is not None:
                    var.own[u'er'] = PyJsHolder_6572_96421937
                else:
                    del var.own[u'er']
                del PyJsHolder_6572_96421937
        var.get(u'regExp').put(u'_glob', var.get(u'pattern'))
        var.get(u'regExp').put(u'_src', var.get(u're'))
        return var.get(u'regExp')
    PyJsHoisted_parse_.func_name = u'parse'
    var.put(u'parse', PyJsHoisted_parse_)
    @Js
    def PyJsHoisted_braceExpand_(pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'options':options, u'arguments':arguments}, var)
        var.registers([u'pattern', u'options'])
        if var.get(u'options').neg():
            if var.get(u"this").instanceof(var.get(u'Minimatch')):
                var.put(u'options', var.get(u"this").get(u'options'))
            else:
                PyJs_Object_386_ = Js({})
                var.put(u'options', PyJs_Object_386_)
        var.put(u'pattern', (var.get(u"this").get(u'pattern') if PyJsStrictEq(var.get(u'pattern',throw=False).typeof(),Js(u'undefined')) else var.get(u'pattern')))
        if PyJsStrictEq(var.get(u'pattern',throw=False).typeof(),Js(u'undefined')):
            PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'undefined pattern')))
            raise PyJsTempException
        if (var.get(u'options').get(u'nobrace') or var.get(u'pattern').callprop(u'match', JsRegExp(u'/\\{.*\\}/')).neg()):
            return Js([var.get(u'pattern')])
        return var.get(u'expand')(var.get(u'pattern'))
    PyJsHoisted_braceExpand_.func_name = u'braceExpand'
    var.put(u'braceExpand', PyJsHoisted_braceExpand_)
    @Js
    def PyJsHoisted_match_(f, partial, this, arguments, var=var):
        var = Scope({u'this':this, u'partial':partial, u'arguments':arguments, u'f':f}, var)
        var.registers([u'set', u'hit', u'f', u'i', u'pattern', u'filename', u'file', u'partial', u'options'])
        var.get(u"this").callprop(u'debug', Js(u'match'), var.get(u'f'), var.get(u"this").get(u'pattern'))
        if var.get(u"this").get(u'comment'):
            return Js(False)
        if var.get(u"this").get(u'empty'):
            return PyJsStrictEq(var.get(u'f'),Js(u''))
        if (PyJsStrictEq(var.get(u'f'),Js(u'/')) and var.get(u'partial')):
            return var.get(u'true')
        var.put(u'options', var.get(u"this").get(u'options'))
        if PyJsStrictNeq(var.get(u'path').get(u'sep'),Js(u'/')):
            var.put(u'f', var.get(u'f').callprop(u'split', var.get(u'path').get(u'sep')).callprop(u'join', Js(u'/')))
        var.put(u'f', var.get(u'f').callprop(u'split', var.get(u'slashSplit')))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), Js(u'split'), var.get(u'f'))
        var.put(u'set', var.get(u"this").get(u'set'))
        var.get(u"this").callprop(u'debug', var.get(u"this").get(u'pattern'), Js(u'set'), var.get(u'set'))
        pass
        pass
        #for JS loop
        var.put(u'i', (var.get(u'f').get(u'length')-Js(1.0)))
        while (var.get(u'i')>=Js(0.0)):
            try:
                var.put(u'filename', var.get(u'f').get(var.get(u'i')))
                if var.get(u'filename'):
                    break
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())-Js(1))+Js(1))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'set').get(u'length')):
            try:
                var.put(u'pattern', var.get(u'set').get(var.get(u'i')))
                var.put(u'file', var.get(u'f'))
                if (var.get(u'options').get(u'matchBase') and PyJsStrictEq(var.get(u'pattern').get(u'length'),Js(1.0))):
                    var.put(u'file', Js([var.get(u'filename')]))
                var.put(u'hit', var.get(u"this").callprop(u'matchOne', var.get(u'file'), var.get(u'pattern'), var.get(u'partial')))
                if var.get(u'hit'):
                    if var.get(u'options').get(u'flipNegate'):
                        return var.get(u'true')
                    return var.get(u"this").get(u'negate').neg()
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        if var.get(u'options').get(u'flipNegate'):
            return Js(False)
        return var.get(u"this").get(u'negate')
    PyJsHoisted_match_.func_name = u'match'
    var.put(u'match', PyJsHoisted_match_)
    var.get(u'module').put(u'exports', var.get(u'minimatch'))
    var.get(u'minimatch').put(u'Minimatch', var.get(u'Minimatch'))
    PyJs_Object_358_ = Js({u'sep':Js(u'/')})
    var.put(u'path', PyJs_Object_358_)
    try:
        var.put(u'path', var.get(u'require')(Js(u'path')))
    except PyJsException as PyJsTempException:
        PyJsHolder_6572_32117432 = var.own.get(u'er')
        var.force_own_put(u'er', PyExceptionToJs(PyJsTempException))
        try:
            pass
        finally:
            if PyJsHolder_6572_32117432 is not None:
                var.own[u'er'] = PyJsHolder_6572_32117432
            else:
                del var.own[u'er']
            del PyJsHolder_6572_32117432
    PyJs_Object_359_ = Js({})
    var.put(u'GLOBSTAR', var.get(u'minimatch').put(u'GLOBSTAR', var.get(u'Minimatch').put(u'GLOBSTAR', PyJs_Object_359_)))
    var.put(u'expand', var.get(u'require')(Js(u'brace-expansion')))
    PyJs_Object_361_ = Js({u'open':Js(u'(?:(?!(?:'),u'close':Js(u'))[^/]*?)')})
    PyJs_Object_362_ = Js({u'open':Js(u'(?:'),u'close':Js(u')?')})
    PyJs_Object_363_ = Js({u'open':Js(u'(?:'),u'close':Js(u')+')})
    PyJs_Object_364_ = Js({u'open':Js(u'(?:'),u'close':Js(u')*')})
    PyJs_Object_365_ = Js({u'open':Js(u'(?:'),u'close':Js(u')')})
    PyJs_Object_360_ = Js({u'!':PyJs_Object_361_,u'?':PyJs_Object_362_,u'+':PyJs_Object_363_,u'*':PyJs_Object_364_,u'@':PyJs_Object_365_})
    var.put(u'plTypes', PyJs_Object_360_)
    var.put(u'qmark', Js(u'[^/]'))
    var.put(u'star', (var.get(u'qmark')+Js(u'*?')))
    var.put(u'twoStarDot', Js(u'(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?'))
    var.put(u'twoStarNoDot', Js(u'(?:(?!(?:\\/|^)\\.).)*?'))
    var.put(u'reSpecials', var.get(u'charSet')(Js(u'().*{}+?[]^$\\!')))
    pass
    var.put(u'slashSplit', JsRegExp(u'/\\/+/'))
    var.get(u'minimatch').put(u'filter', var.get(u'filter'))
    pass
    pass
    @Js
    def PyJs_anonymous_375_(PyJsArg_646566_, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'def':PyJsArg_646566_}, var)
        var.registers([u'm', u'def', u'orig'])
        if (var.get(u'def').neg() or var.get(u'Object').callprop(u'keys', var.get(u'def')).get(u'length').neg()):
            return var.get(u'minimatch')
        var.put(u'orig', var.get(u'minimatch'))
        @Js
        def PyJs_minimatch_376_(p, pattern, options, this, arguments, var=var):
            var = Scope({u'minimatch':PyJs_minimatch_376_, u'this':this, u'pattern':pattern, u'p':p, u'arguments':arguments, u'options':options}, var)
            var.registers([u'p', u'options', u'pattern'])
            return var.get(u'orig').callprop(u'minimatch', var.get(u'p'), var.get(u'pattern'), var.get(u'ext')(var.get(u'def'), var.get(u'options')))
        PyJs_minimatch_376_._set_name(u'minimatch')
        var.put(u'm', PyJs_minimatch_376_)
        @Js
        def PyJs_Minimatch_377_(pattern, options, this, arguments, var=var):
            var = Scope({u'this':this, u'pattern':pattern, u'Minimatch':PyJs_Minimatch_377_, u'options':options, u'arguments':arguments}, var)
            var.registers([u'pattern', u'options'])
            return var.get(u'orig').get(u'Minimatch').create(var.get(u'pattern'), var.get(u'ext')(var.get(u'def'), var.get(u'options')))
        PyJs_Minimatch_377_._set_name(u'Minimatch')
        var.get(u'm').put(u'Minimatch', PyJs_Minimatch_377_)
        return var.get(u'm')
    PyJs_anonymous_375_._set_name(u'anonymous')
    var.get(u'minimatch').put(u'defaults', PyJs_anonymous_375_)
    @Js
    def PyJs_anonymous_378_(PyJsArg_646566_, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'def':PyJsArg_646566_}, var)
        var.registers([u'def'])
        if (var.get(u'def').neg() or var.get(u'Object').callprop(u'keys', var.get(u'def')).get(u'length').neg()):
            return var.get(u'Minimatch')
        return var.get(u'minimatch').callprop(u'defaults', var.get(u'def')).get(u'Minimatch')
    PyJs_anonymous_378_._set_name(u'anonymous')
    var.get(u'Minimatch').put(u'defaults', PyJs_anonymous_378_)
    pass
    pass
    @Js
    def PyJs_anonymous_381_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        pass
    PyJs_anonymous_381_._set_name(u'anonymous')
    var.get(u'Minimatch').get(u'prototype').put(u'debug', PyJs_anonymous_381_)
    var.get(u'Minimatch').get(u'prototype').put(u'make', var.get(u'make'))
    pass
    var.get(u'Minimatch').get(u'prototype').put(u'parseNegate', var.get(u'parseNegate'))
    pass
    @Js
    def PyJs_anonymous_385_(pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'options':options, u'arguments':arguments}, var)
        var.registers([u'pattern', u'options'])
        return var.get(u'braceExpand')(var.get(u'pattern'), var.get(u'options'))
    PyJs_anonymous_385_._set_name(u'anonymous')
    var.get(u'minimatch').put(u'braceExpand', PyJs_anonymous_385_)
    var.get(u'Minimatch').get(u'prototype').put(u'braceExpand', var.get(u'braceExpand'))
    pass
    var.get(u'Minimatch').get(u'prototype').put(u'parse', var.get(u'parse'))
    PyJs_Object_387_ = Js({})
    var.put(u'SUBPARSE', PyJs_Object_387_)
    pass
    @Js
    def PyJs_anonymous_390_(pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'options':options, u'arguments':arguments}, var)
        var.registers([u'pattern', u'options'])
        PyJs_Object_391_ = Js({})
        return var.get(u'Minimatch').create(var.get(u'pattern'), (var.get(u'options') or PyJs_Object_391_)).callprop(u'makeRe')
    PyJs_anonymous_390_._set_name(u'anonymous')
    var.get(u'minimatch').put(u'makeRe', PyJs_anonymous_390_)
    var.get(u'Minimatch').get(u'prototype').put(u'makeRe', var.get(u'makeRe'))
    pass
    @Js
    def PyJs_anonymous_394_(list, pattern, options, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'list':list, u'options':options, u'arguments':arguments}, var)
        var.registers([u'mm', u'pattern', u'list', u'options'])
        PyJs_Object_395_ = Js({})
        var.put(u'options', (var.get(u'options') or PyJs_Object_395_))
        var.put(u'mm', var.get(u'Minimatch').create(var.get(u'pattern'), var.get(u'options')))
        @Js
        def PyJs_anonymous_396_(f, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'f':f}, var)
            var.registers([u'f'])
            return var.get(u'mm').callprop(u'match', var.get(u'f'))
        PyJs_anonymous_396_._set_name(u'anonymous')
        var.put(u'list', var.get(u'list').callprop(u'filter', PyJs_anonymous_396_))
        if (var.get(u'mm').get(u'options').get(u'nonull') and var.get(u'list').get(u'length').neg()):
            var.get(u'list').callprop(u'push', var.get(u'pattern'))
        return var.get(u'list')
    PyJs_anonymous_394_._set_name(u'anonymous')
    var.get(u'minimatch').put(u'match', PyJs_anonymous_394_)
    var.get(u'Minimatch').get(u'prototype').put(u'match', var.get(u'match'))
    pass
    @Js
    def PyJs_anonymous_397_(file, pattern, partial, this, arguments, var=var):
        var = Scope({u'this':this, u'pattern':pattern, u'partial':partial, u'arguments':arguments, u'file':file}, var)
        var.registers([u'pr', u'emptyFileEnd', u'fr', u'hit', u'f', u'pattern', u'p', u'partial', u'file', u'fi', u'swallowee', u'pi', u'fl', u'options', u'pl'])
        var.put(u'options', var.get(u"this").get(u'options'))
        PyJs_Object_398_ = Js({u'this':var.get(u"this"),u'file':var.get(u'file'),u'pattern':var.get(u'pattern')})
        var.get(u"this").callprop(u'debug', Js(u'matchOne'), PyJs_Object_398_)
        var.get(u"this").callprop(u'debug', Js(u'matchOne'), var.get(u'file').get(u'length'), var.get(u'pattern').get(u'length'))
        #for JS loop
        var.put(u'fi', Js(0.0))
        var.put(u'pi', Js(0.0))
        var.put(u'fl', var.get(u'file').get(u'length'))
        var.put(u'pl', var.get(u'pattern').get(u'length'))
        while ((var.get(u'fi')<var.get(u'fl')) and (var.get(u'pi')<var.get(u'pl'))):
            try:
                var.get(u"this").callprop(u'debug', Js(u'matchOne loop'))
                var.put(u'p', var.get(u'pattern').get(var.get(u'pi')))
                var.put(u'f', var.get(u'file').get(var.get(u'fi')))
                var.get(u"this").callprop(u'debug', var.get(u'pattern'), var.get(u'p'), var.get(u'f'))
                if PyJsStrictEq(var.get(u'p'),Js(False)):
                    return Js(False)
                if PyJsStrictEq(var.get(u'p'),var.get(u'GLOBSTAR')):
                    var.get(u"this").callprop(u'debug', Js(u'GLOBSTAR'), Js([var.get(u'pattern'), var.get(u'p'), var.get(u'f')]))
                    var.put(u'fr', var.get(u'fi'))
                    var.put(u'pr', (var.get(u'pi')+Js(1.0)))
                    if PyJsStrictEq(var.get(u'pr'),var.get(u'pl')):
                        var.get(u"this").callprop(u'debug', Js(u'** at the end'))
                        #for JS loop
                        
                        while (var.get(u'fi')<var.get(u'fl')):
                            try:
                                if ((PyJsStrictEq(var.get(u'file').get(var.get(u'fi')),Js(u'.')) or PyJsStrictEq(var.get(u'file').get(var.get(u'fi')),Js(u'..'))) or (var.get(u'options').get(u'dot').neg() and PyJsStrictEq(var.get(u'file').get(var.get(u'fi')).callprop(u'charAt', Js(0.0)),Js(u'.')))):
                                    return Js(False)
                            finally:
                                    (var.put(u'fi',Js(var.get(u'fi').to_number())+Js(1))-Js(1))
                        return var.get(u'true')
                    while (var.get(u'fr')<var.get(u'fl')):
                        var.put(u'swallowee', var.get(u'file').get(var.get(u'fr')))
                        var.get(u"this").callprop(u'debug', Js(u'\nglobstar while'), var.get(u'file'), var.get(u'fr'), var.get(u'pattern'), var.get(u'pr'), var.get(u'swallowee'))
                        if var.get(u"this").callprop(u'matchOne', var.get(u'file').callprop(u'slice', var.get(u'fr')), var.get(u'pattern').callprop(u'slice', var.get(u'pr')), var.get(u'partial')):
                            var.get(u"this").callprop(u'debug', Js(u'globstar found match!'), var.get(u'fr'), var.get(u'fl'), var.get(u'swallowee'))
                            return var.get(u'true')
                        else:
                            if ((PyJsStrictEq(var.get(u'swallowee'),Js(u'.')) or PyJsStrictEq(var.get(u'swallowee'),Js(u'..'))) or (var.get(u'options').get(u'dot').neg() and PyJsStrictEq(var.get(u'swallowee').callprop(u'charAt', Js(0.0)),Js(u'.')))):
                                var.get(u"this").callprop(u'debug', Js(u'dot detected!'), var.get(u'file'), var.get(u'fr'), var.get(u'pattern'), var.get(u'pr'))
                                break
                            var.get(u"this").callprop(u'debug', Js(u'globstar swallow a segment, and continue'))
                            (var.put(u'fr',Js(var.get(u'fr').to_number())+Js(1))-Js(1))
                    if var.get(u'partial'):
                        var.get(u"this").callprop(u'debug', Js(u'\n>>> no match, partial?'), var.get(u'file'), var.get(u'fr'), var.get(u'pattern'), var.get(u'pr'))
                        if PyJsStrictEq(var.get(u'fr'),var.get(u'fl')):
                            return var.get(u'true')
                    return Js(False)
                pass
                if PyJsStrictEq(var.get(u'p',throw=False).typeof(),Js(u'string')):
                    if var.get(u'options').get(u'nocase'):
                        var.put(u'hit', PyJsStrictEq(var.get(u'f').callprop(u'toLowerCase'),var.get(u'p').callprop(u'toLowerCase')))
                    else:
                        var.put(u'hit', PyJsStrictEq(var.get(u'f'),var.get(u'p')))
                    var.get(u"this").callprop(u'debug', Js(u'string match'), var.get(u'p'), var.get(u'f'), var.get(u'hit'))
                else:
                    var.put(u'hit', var.get(u'f').callprop(u'match', var.get(u'p')))
                    var.get(u"this").callprop(u'debug', Js(u'pattern match'), var.get(u'p'), var.get(u'f'), var.get(u'hit'))
                if var.get(u'hit').neg():
                    return Js(False)
            finally:
                    PyJsComma((var.put(u'fi',Js(var.get(u'fi').to_number())+Js(1))-Js(1)),(var.put(u'pi',Js(var.get(u'pi').to_number())+Js(1))-Js(1)))
        if (PyJsStrictEq(var.get(u'fi'),var.get(u'fl')) and PyJsStrictEq(var.get(u'pi'),var.get(u'pl'))):
            return var.get(u'true')
        else:
            if PyJsStrictEq(var.get(u'fi'),var.get(u'fl')):
                return var.get(u'partial')
            else:
                if PyJsStrictEq(var.get(u'pi'),var.get(u'pl')):
                    var.put(u'emptyFileEnd', (PyJsStrictEq(var.get(u'fi'),(var.get(u'fl')-Js(1.0))) and PyJsStrictEq(var.get(u'file').get(var.get(u'fi')),Js(u''))))
                    return var.get(u'emptyFileEnd')
        PyJsTempException = JsToPyException(var.get(u'Error').create(Js(u'wtf?')))
        raise PyJsTempException
    PyJs_anonymous_397_._set_name(u'anonymous')
    var.get(u'Minimatch').get(u'prototype').put(u'matchOne', PyJs_anonymous_397_)
    pass
    pass
PyJs_anonymous_357_._set_name(u'anonymous')
PyJs_Object_399_ = Js({u'brace-expansion':Js(264.0),u'path':Js(530.0)})
@Js
def PyJs_anonymous_400_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    PyJs_Object_402_ = Js({u'raw':Js(u'babel-core'),u'scope':var.get(u"null"),u'escapedName':Js(u'babel-core'),u'name':Js(u'babel-core'),u'rawSpec':Js(u''),u'spec':Js(u'latest'),u'type':Js(u'tag')})
    PyJs_Object_403_ = Js({u'host':Js(u'packages-18-east.internal.npmjs.com'),u'tmp':Js(u'tmp/babel-core-6.18.2.tgz_1478035855416_0.08754534856416285')})
    PyJs_Object_404_ = Js({u'name':Js(u'hzoo'),u'email':Js(u'hi@henryzoo.com')})
    PyJs_Object_405_ = Js({u'brace-expansion':Js(u'1.1.5')})
    PyJs_Object_406_ = Js({u'raw':Js(u'babel-core'),u'scope':var.get(u"null"),u'escapedName':Js(u'babel-core'),u'name':Js(u'babel-core'),u'rawSpec':Js(u''),u'spec':Js(u'latest'),u'type':Js(u'tag')})
    PyJs_Object_407_ = Js({u'name':Js(u'Sebastian McKenzie'),u'email':Js(u'sebmck@gmail.com')})
    PyJs_Object_408_ = Js({u'babel-code-frame':Js(u'^6.16.0'),u'babel-generator':Js(u'^6.18.0'),u'babel-helpers':Js(u'^6.16.0'),u'babel-messages':Js(u'^6.8.0'),u'babel-register':Js(u'^6.18.0'),u'babel-runtime':Js(u'^6.9.1'),u'babel-template':Js(u'^6.16.0'),u'babel-traverse':Js(u'^6.18.0'),u'babel-types':Js(u'^6.18.0'),u'babylon':Js(u'^6.11.0'),u'convert-source-map':Js(u'^1.1.0'),u'debug':Js(u'^2.1.1'),u'json5':Js(u'^0.5.0'),u'lodash':Js(u'^4.2.0'),u'minimatch':Js(u'^3.0.2'),u'path-is-absolute':Js(u'^1.0.0'),u'private':Js(u'^0.1.6'),u'slash':Js(u'^1.0.0'),u'source-map':Js(u'^0.5.0')})
    PyJs_Object_409_ = Js({u'babel-helper-fixtures':Js(u'^6.18.2'),u'babel-helper-transform-fixture-test-runner':Js(u'^6.18.2'),u'babel-polyfill':Js(u'^6.16.0')})
    PyJs_Object_410_ = Js({})
    PyJs_Object_411_ = Js({u'shasum':Js(u'd8bb14dd6986fa4f3566a26ceda3964fa0e04e5b'),u'tarball':Js(u'https://registry.npmjs.org/babel-core/-/babel-core-6.18.2.tgz')})
    PyJs_Object_412_ = Js({u'name':Js(u'amasad'),u'email':Js(u'amjad.masad@gmail.com')})
    PyJs_Object_413_ = Js({u'name':Js(u'hzoo'),u'email':Js(u'hi@henryzoo.com')})
    PyJs_Object_414_ = Js({u'name':Js(u'jmm'),u'email':Js(u'npm-public@jessemccarthy.net')})
    PyJs_Object_415_ = Js({u'name':Js(u'loganfsmyth'),u'email':Js(u'loganfsmyth@gmail.com')})
    PyJs_Object_416_ = Js({u'name':Js(u'sebmck'),u'email':Js(u'sebmck@gmail.com')})
    PyJs_Object_417_ = Js({u'name':Js(u'thejameskyle'),u'email':Js(u'me@thejameskyle.com')})
    PyJs_Object_418_ = Js({})
    PyJs_Object_419_ = Js({u'type':Js(u'git'),u'url':Js(u'https://github.com/babel/babel/tree/master/packages/babel-core')})
    PyJs_Object_420_ = Js({u'bench':Js(u'make bench'),u'test':Js(u'make test')})
    PyJs_Object_401_ = Js({u'_args':Js([Js([PyJs_Object_402_, Js(u'/Users/PiotrDabkowski/PycharmProjects/Js2Py/js2py/es6')])]),u'_from':Js(u'babel-core@latest'),u'_id':Js(u'babel-core@6.18.2'),u'_inCache':var.get(u'true'),u'_location':Js(u'/babel-core'),u'_nodeVersion':Js(u'6.8.1'),u'_npmOperationalInternal':PyJs_Object_403_,u'_npmUser':PyJs_Object_404_,u'_npmVersion':Js(u'3.10.9'),u'_phantomChildren':PyJs_Object_405_,u'_requested':PyJs_Object_406_,u'_requiredBy':Js([Js(u'#USER'), Js(u'/babel-cli'), Js(u'/babel-register'), Js(u'/babelify')]),u'_resolved':Js(u'https://registry.npmjs.org/babel-core/-/babel-core-6.18.2.tgz'),u'_shasum':Js(u'd8bb14dd6986fa4f3566a26ceda3964fa0e04e5b'),u'_shrinkwrap':var.get(u"null"),u'_spec':Js(u'babel-core'),u'_where':Js(u'/Users/PiotrDabkowski/PycharmProjects/Js2Py/js2py/es6'),u'author':PyJs_Object_407_,u'dependencies':PyJs_Object_408_,u'description':Js(u'Babel compiler core.'),u'devDependencies':PyJs_Object_409_,u'directories':PyJs_Object_410_,u'dist':PyJs_Object_411_,u'homepage':Js(u'https://babeljs.io/'),u'keywords':Js([Js(u'6to5'), Js(u'babel'), Js(u'classes'), Js(u'const'), Js(u'es6'), Js(u'harmony'), Js(u'let'), Js(u'modules'), Js(u'transpile'), Js(u'transpiler'), Js(u'var')]),u'license':Js(u'MIT'),u'maintainers':Js([PyJs_Object_412_, PyJs_Object_413_, PyJs_Object_414_, PyJs_Object_415_, PyJs_Object_416_, PyJs_Object_417_]),u'name':Js(u'babel-core'),u'optionalDependencies':PyJs_Object_418_,u'readme':Js(u'ERROR: No README data found!'),u'repository':PyJs_Object_419_,u'scripts':PyJs_Object_420_,u'version':Js(u'6.18.2')})
    var.get(u'module').put(u'exports', PyJs_Object_401_)
PyJs_anonymous_400_._set_name(u'anonymous')
PyJs_Object_421_ = Js({})
@Js
def PyJs_anonymous_422_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'Buffer', u'require', u'_trimEnd2', u'module', u'_trimEnd', u'_interopRequireDefault', u'SPACES_RE', u'_classCallCheck2', u'_classCallCheck3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_423_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_423_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_trimEnd', var.get(u'require')(Js(u'lodash/trimEnd')))
    var.put(u'_trimEnd2', var.get(u'_interopRequireDefault')(var.get(u'_trimEnd')))
    pass
    var.put(u'SPACES_RE', JsRegExp(u'/^[ \\t]+$/'))
    @Js
    def PyJs_anonymous_424_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'Buffer'])
        @Js
        def PyJsHoisted_Buffer_(map, this, arguments, var=var):
            var = Scope({u'this':this, u'map':map, u'arguments':arguments}, var)
            var.registers([u'map'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Buffer'))
            var.get(u"this").put(u'_map', var.get(u"null"))
            var.get(u"this").put(u'_buf', Js([]))
            var.get(u"this").put(u'_last', Js(u''))
            var.get(u"this").put(u'_queue', Js([]))
            PyJs_Object_425_ = Js({u'line':Js(1.0),u'column':Js(0.0)})
            var.get(u"this").put(u'_position', PyJs_Object_425_)
            PyJs_Object_426_ = Js({u'identifierName':var.get(u"null"),u'line':var.get(u"null"),u'column':var.get(u"null"),u'filename':var.get(u"null")})
            var.get(u"this").put(u'_sourcePosition', PyJs_Object_426_)
            var.get(u"this").put(u'_map', var.get(u'map'))
        PyJsHoisted_Buffer_.func_name = u'Buffer'
        var.put(u'Buffer', PyJsHoisted_Buffer_)
        pass
        @Js
        def PyJs_get_427_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_427_}, var)
            var.registers([])
            var.get(u"this").callprop(u'_flush')
            PyJs_Object_428_ = Js({u'code':PyJsComma(Js(0.0),var.get(u'_trimEnd2').get(u'default'))(var.get(u"this").get(u'_buf').callprop(u'join', Js(u''))),u'map':(var.get(u"this").get(u'_map').callprop(u'get') if var.get(u"this").get(u'_map') else var.get(u"null"))})
            return PyJs_Object_428_
        PyJs_get_427_._set_name(u'get')
        var.get(u'Buffer').get(u'prototype').put(u'get', PyJs_get_427_)
        @Js
        def PyJs_append_429_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'append':PyJs_append_429_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'identifierName', u'column', u'filename', u'str', u'line', u'_sourcePosition'])
            var.get(u"this").callprop(u'_flush')
            var.put(u'_sourcePosition', var.get(u"this").get(u'_sourcePosition'))
            var.put(u'line', var.get(u'_sourcePosition').get(u'line'))
            var.put(u'column', var.get(u'_sourcePosition').get(u'column'))
            var.put(u'filename', var.get(u'_sourcePosition').get(u'filename'))
            var.put(u'identifierName', var.get(u'_sourcePosition').get(u'identifierName'))
            var.get(u"this").callprop(u'_append', var.get(u'str'), var.get(u'line'), var.get(u'column'), var.get(u'identifierName'), var.get(u'filename'))
        PyJs_append_429_._set_name(u'append')
        var.get(u'Buffer').get(u'prototype').put(u'append', PyJs_append_429_)
        @Js
        def PyJs_queue_430_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'queue':PyJs_queue_430_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'identifierName', u'column', u'filename', u'_sourcePosition2', u'str', u'line'])
            if PyJsStrictEq(var.get(u'str'),Js(u'\n')):
                while ((var.get(u"this").get(u'_queue').get(u'length')>Js(0.0)) and var.get(u'SPACES_RE').callprop(u'test', var.get(u"this").get(u'_queue').get(u'0').get(u'0'))):
                    var.get(u"this").get(u'_queue').callprop(u'shift')
            var.put(u'_sourcePosition2', var.get(u"this").get(u'_sourcePosition'))
            var.put(u'line', var.get(u'_sourcePosition2').get(u'line'))
            var.put(u'column', var.get(u'_sourcePosition2').get(u'column'))
            var.put(u'filename', var.get(u'_sourcePosition2').get(u'filename'))
            var.put(u'identifierName', var.get(u'_sourcePosition2').get(u'identifierName'))
            var.get(u"this").get(u'_queue').callprop(u'unshift', Js([var.get(u'str'), var.get(u'line'), var.get(u'column'), var.get(u'identifierName'), var.get(u'filename')]))
        PyJs_queue_430_._set_name(u'queue')
        var.get(u'Buffer').get(u'prototype').put(u'queue', PyJs_queue_430_)
        @Js
        def PyJs__flush_431_(this, arguments, var=var):
            var = Scope({u'this':this, u'_flush':PyJs__flush_431_, u'arguments':arguments}, var)
            var.registers([u'item'])
            var.put(u'item', PyJsComma(Js(0.0), Js(None)))
            while var.put(u'item', var.get(u"this").get(u'_queue').callprop(u'pop')):
                var.get(u"this").get(u'_append').callprop(u'apply', var.get(u"this"), var.get(u'item'))
        PyJs__flush_431_._set_name(u'_flush')
        var.get(u'Buffer').get(u'prototype').put(u'_flush', PyJs__flush_431_)
        @Js
        def PyJs__append_432_(str, line, column, identifierName, filename, this, arguments, var=var):
            var = Scope({u'this':this, u'_append':PyJs__append_432_, u'str':str, u'identifierName':identifierName, u'column':column, u'arguments':arguments, u'line':line, u'filename':filename}, var)
            var.registers([u'identifierName', u'i', u'filename', u'column', u'str', u'line'])
            if (var.get(u"this").get(u'_map') and PyJsStrictNeq(var.get(u'str').get(u'0'),Js(u'\n'))):
                var.get(u"this").get(u'_map').callprop(u'mark', var.get(u"this").get(u'_position').get(u'line'), var.get(u"this").get(u'_position').get(u'column'), var.get(u'line'), var.get(u'column'), var.get(u'identifierName'), var.get(u'filename'))
            var.get(u"this").get(u'_buf').callprop(u'push', var.get(u'str'))
            var.get(u"this").put(u'_last', var.get(u'str').get((var.get(u'str').get(u'length')-Js(1.0))))
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'str').get(u'length')):
                try:
                    if PyJsStrictEq(var.get(u'str').get(var.get(u'i')),Js(u'\n')):
                        (var.get(u"this").get(u'_position').put(u'line',Js(var.get(u"this").get(u'_position').get(u'line').to_number())+Js(1))-Js(1))
                        var.get(u"this").get(u'_position').put(u'column', Js(0.0))
                    else:
                        (var.get(u"this").get(u'_position').put(u'column',Js(var.get(u"this").get(u'_position').get(u'column').to_number())+Js(1))-Js(1))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        PyJs__append_432_._set_name(u'_append')
        var.get(u'Buffer').get(u'prototype').put(u'_append', PyJs__append_432_)
        @Js
        def PyJs_removeTrailingNewline_433_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'removeTrailingNewline':PyJs_removeTrailingNewline_433_}, var)
            var.registers([])
            if ((var.get(u"this").get(u'_queue').get(u'length')>Js(0.0)) and PyJsStrictEq(var.get(u"this").get(u'_queue').get(u'0').get(u'0'),Js(u'\n'))):
                var.get(u"this").get(u'_queue').callprop(u'shift')
        PyJs_removeTrailingNewline_433_._set_name(u'removeTrailingNewline')
        var.get(u'Buffer').get(u'prototype').put(u'removeTrailingNewline', PyJs_removeTrailingNewline_433_)
        @Js
        def PyJs_removeLastSemicolon_434_(this, arguments, var=var):
            var = Scope({u'this':this, u'removeLastSemicolon':PyJs_removeLastSemicolon_434_, u'arguments':arguments}, var)
            var.registers([])
            if ((var.get(u"this").get(u'_queue').get(u'length')>Js(0.0)) and PyJsStrictEq(var.get(u"this").get(u'_queue').get(u'0').get(u'0'),Js(u';'))):
                var.get(u"this").get(u'_queue').callprop(u'shift')
        PyJs_removeLastSemicolon_434_._set_name(u'removeLastSemicolon')
        var.get(u'Buffer').get(u'prototype').put(u'removeLastSemicolon', PyJs_removeLastSemicolon_434_)
        @Js
        def PyJs_endsWith_435_(suffix, this, arguments, var=var):
            var = Scope({u'this':this, u'endsWith':PyJs_endsWith_435_, u'suffix':suffix, u'arguments':arguments}, var)
            var.registers([u'end', u'last', u'suffix', u'str'])
            if PyJsStrictEq(var.get(u'suffix').get(u'length'),Js(1.0)):
                var.put(u'last', PyJsComma(Js(0.0), Js(None)))
                if (var.get(u"this").get(u'_queue').get(u'length')>Js(0.0)):
                    var.put(u'str', var.get(u"this").get(u'_queue').get(u'0').get(u'0'))
                    var.put(u'last', var.get(u'str').get((var.get(u'str').get(u'length')-Js(1.0))))
                else:
                    var.put(u'last', var.get(u"this").get(u'_last'))
                return PyJsStrictEq(var.get(u'last'),var.get(u'suffix'))
            @Js
            def PyJs_anonymous_436_(acc, item, this, arguments, var=var):
                var = Scope({u'acc':acc, u'item':item, u'this':this, u'arguments':arguments}, var)
                var.registers([u'acc', u'item'])
                return (var.get(u'item').get(u'0')+var.get(u'acc'))
            PyJs_anonymous_436_._set_name(u'anonymous')
            var.put(u'end', (var.get(u"this").get(u'_last')+var.get(u"this").get(u'_queue').callprop(u'reduce', PyJs_anonymous_436_, Js(u''))))
            if (var.get(u'suffix').get(u'length')<=var.get(u'end').get(u'length')):
                return PyJsStrictEq(var.get(u'end').callprop(u'slice', (-var.get(u'suffix').get(u'length'))),var.get(u'suffix'))
            return Js(False)
        PyJs_endsWith_435_._set_name(u'endsWith')
        var.get(u'Buffer').get(u'prototype').put(u'endsWith', PyJs_endsWith_435_)
        @Js
        def PyJs_hasContent_437_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'hasContent':PyJs_hasContent_437_}, var)
            var.registers([])
            return ((var.get(u"this").get(u'_queue').get(u'length')>Js(0.0)) or var.get(u"this").get(u'_last').neg().neg())
        PyJs_hasContent_437_._set_name(u'hasContent')
        var.get(u'Buffer').get(u'prototype').put(u'hasContent', PyJs_hasContent_437_)
        @Js
        def PyJs_source_438_(prop, loc, this, arguments, var=var):
            var = Scope({u'this':this, u'loc':loc, u'source':PyJs_source_438_, u'arguments':arguments, u'prop':prop}, var)
            var.registers([u'loc', u'pos', u'prop'])
            if (var.get(u'prop') and var.get(u'loc').neg()):
                return var.get('undefined')
            var.put(u'pos', (var.get(u'loc').get(var.get(u'prop')) if var.get(u'loc') else var.get(u"null")))
            var.get(u"this").get(u'_sourcePosition').put(u'identifierName', ((var.get(u'loc') and var.get(u'loc').get(u'identifierName')) or var.get(u"null")))
            var.get(u"this").get(u'_sourcePosition').put(u'line', (var.get(u'pos').get(u'line') if var.get(u'pos') else var.get(u"null")))
            var.get(u"this").get(u'_sourcePosition').put(u'column', (var.get(u'pos').get(u'column') if var.get(u'pos') else var.get(u"null")))
            var.get(u"this").get(u'_sourcePosition').put(u'filename', ((var.get(u'loc') and var.get(u'loc').get(u'filename')) or var.get(u"null")))
        PyJs_source_438_._set_name(u'source')
        var.get(u'Buffer').get(u'prototype').put(u'source', PyJs_source_438_)
        @Js
        def PyJs_withSource_439_(prop, loc, cb, this, arguments, var=var):
            var = Scope({u'loc':loc, u'this':this, u'cb':cb, u'prop':prop, u'withSource':PyJs_withSource_439_, u'arguments':arguments}, var)
            var.registers([u'originalColumn', u'originalIdentifierName', u'loc', u'cb', u'prop', u'originalLine', u'originalFilename'])
            if var.get(u"this").get(u'_map').neg():
                return var.get(u'cb')()
            var.put(u'originalLine', var.get(u"this").get(u'_sourcePosition').get(u'line'))
            var.put(u'originalColumn', var.get(u"this").get(u'_sourcePosition').get(u'column'))
            var.put(u'originalFilename', var.get(u"this").get(u'_sourcePosition').get(u'filename'))
            var.put(u'originalIdentifierName', var.get(u"this").get(u'_sourcePosition').get(u'identifierName'))
            var.get(u"this").callprop(u'source', var.get(u'prop'), var.get(u'loc'))
            var.get(u'cb')()
            var.get(u"this").get(u'_sourcePosition').put(u'line', var.get(u'originalLine'))
            var.get(u"this").get(u'_sourcePosition').put(u'column', var.get(u'originalColumn'))
            var.get(u"this").get(u'_sourcePosition').put(u'filename', var.get(u'originalFilename'))
            var.get(u"this").get(u'_sourcePosition').put(u'identifierName', var.get(u'originalIdentifierName'))
        PyJs_withSource_439_._set_name(u'withSource')
        var.get(u'Buffer').get(u'prototype').put(u'withSource', PyJs_withSource_439_)
        @Js
        def PyJs_getCurrentColumn_440_(this, arguments, var=var):
            var = Scope({u'this':this, u'getCurrentColumn':PyJs_getCurrentColumn_440_, u'arguments':arguments}, var)
            var.registers([u'lastIndex', u'extra'])
            @Js
            def PyJs_anonymous_441_(acc, item, this, arguments, var=var):
                var = Scope({u'acc':acc, u'item':item, u'this':this, u'arguments':arguments}, var)
                var.registers([u'acc', u'item'])
                return (var.get(u'item').get(u'0')+var.get(u'acc'))
            PyJs_anonymous_441_._set_name(u'anonymous')
            var.put(u'extra', var.get(u"this").get(u'_queue').callprop(u'reduce', PyJs_anonymous_441_, Js(u'')))
            var.put(u'lastIndex', var.get(u'extra').callprop(u'lastIndexOf', Js(u'\n')))
            return ((var.get(u"this").get(u'_position').get(u'column')+var.get(u'extra').get(u'length')) if PyJsStrictEq(var.get(u'lastIndex'),(-Js(1.0))) else ((var.get(u'extra').get(u'length')-Js(1.0))-var.get(u'lastIndex')))
        PyJs_getCurrentColumn_440_._set_name(u'getCurrentColumn')
        var.get(u'Buffer').get(u'prototype').put(u'getCurrentColumn', PyJs_getCurrentColumn_440_)
        @Js
        def PyJs_getCurrentLine_442_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'getCurrentLine':PyJs_getCurrentLine_442_}, var)
            var.registers([u'count', u'i', u'extra'])
            @Js
            def PyJs_anonymous_443_(acc, item, this, arguments, var=var):
                var = Scope({u'acc':acc, u'item':item, u'this':this, u'arguments':arguments}, var)
                var.registers([u'acc', u'item'])
                return (var.get(u'item').get(u'0')+var.get(u'acc'))
            PyJs_anonymous_443_._set_name(u'anonymous')
            var.put(u'extra', var.get(u"this").get(u'_queue').callprop(u'reduce', PyJs_anonymous_443_, Js(u'')))
            var.put(u'count', Js(0.0))
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'extra').get(u'length')):
                try:
                    if PyJsStrictEq(var.get(u'extra').get(var.get(u'i')),Js(u'\n')):
                        (var.put(u'count',Js(var.get(u'count').to_number())+Js(1))-Js(1))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            return (var.get(u"this").get(u'_position').get(u'line')+var.get(u'count'))
        PyJs_getCurrentLine_442_._set_name(u'getCurrentLine')
        var.get(u'Buffer').get(u'prototype').put(u'getCurrentLine', PyJs_getCurrentLine_442_)
        return var.get(u'Buffer')
    PyJs_anonymous_424_._set_name(u'anonymous')
    var.put(u'Buffer', PyJs_anonymous_424_())
    var.get(u'exports').put(u'default', var.get(u'Buffer'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_422_._set_name(u'anonymous')
PyJs_Object_444_ = Js({u'babel-runtime/helpers/classCallCheck':Js(110.0),u'lodash/trimEnd':Js(494.0)})
@Js
def PyJs_anonymous_445_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_types', u'exports', u'Directive', u'require', u'module', u'Program', u'Noop', u'File', u'BlockStatement'])
    @Js
    def PyJsHoisted_BlockStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'{'))
        var.get(u"this").callprop(u'printInnerComments', var.get(u'node'))
        if var.get(u'node').get(u'body').get(u'length'):
            var.get(u"this").callprop(u'newline')
            PyJs_Object_448_ = Js({u'indent':var.get(u'true')})
            var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'directives'), var.get(u'node'), PyJs_Object_448_)
            if (var.get(u'node').get(u'directives') and var.get(u'node').get(u'directives').get(u'length')):
                var.get(u"this").callprop(u'newline')
            PyJs_Object_449_ = Js({u'indent':var.get(u'true')})
            var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'body'), var.get(u'node'), PyJs_Object_449_)
            var.get(u"this").callprop(u'removeTrailingNewline')
            var.get(u"this").callprop(u'source', Js(u'end'), var.get(u'node').get(u'loc'))
            if var.get(u"this").callprop(u'endsWith', Js(u'\n')).neg():
                var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'rightBrace')
        else:
            var.get(u"this").callprop(u'source', Js(u'end'), var.get(u'node').get(u'loc'))
            var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_BlockStatement_.func_name = u'BlockStatement'
    var.put(u'BlockStatement', PyJsHoisted_BlockStatement_)
    @Js
    def PyJsHoisted_Program_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printInnerComments', var.get(u'node'), Js(False))
        var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'directives'), var.get(u'node'))
        if (var.get(u'node').get(u'directives') and var.get(u'node').get(u'directives').get(u'length')):
            var.get(u"this").callprop(u'newline')
        var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_Program_.func_name = u'Program'
    var.put(u'Program', PyJsHoisted_Program_)
    @Js
    def PyJsHoisted_Noop_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        pass
    PyJsHoisted_Noop_.func_name = u'Noop'
    var.put(u'Noop', PyJsHoisted_Noop_)
    @Js
    def PyJsHoisted_Directive_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_Directive_.func_name = u'Directive'
    var.put(u'Directive', PyJsHoisted_Directive_)
    @Js
    def PyJsHoisted_File_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'program'), var.get(u'node'))
    PyJsHoisted_File_.func_name = u'File'
    var.put(u'File', PyJsHoisted_File_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'File', var.get(u'File'))
    var.get(u'exports').put(u'Program', var.get(u'Program'))
    var.get(u'exports').put(u'BlockStatement', var.get(u'BlockStatement'))
    var.get(u'exports').put(u'Noop', var.get(u'Noop'))
    var.get(u'exports').put(u'Directive', var.get(u'Directive'))
    var.put(u'_types', var.get(u'require')(Js(u'./types')))
    @Js
    def PyJs_get_447_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_447_}, var)
        var.registers([])
        return var.get(u'_types').get(u'StringLiteral')
    PyJs_get_447_._set_name(u'get')
    PyJs_Object_446_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_447_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'DirectiveLiteral'), PyJs_Object_446_)
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_445_._set_name(u'anonymous')
PyJs_Object_450_ = Js({u'./types':Js(39.0)})
@Js
def PyJs_anonymous_451_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'ClassProperty', u'ClassMethod', u'require', u'module', u'ClassDeclaration', u'ClassBody'])
    @Js
    def PyJsHoisted_ClassMethod_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'decorators'), var.get(u'node'))
        if var.get(u'node').get(u'static'):
            var.get(u"this").callprop(u'word', Js(u'static'))
            var.get(u"this").callprop(u'space')
        if PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'constructorCall')):
            var.get(u"this").callprop(u'word', Js(u'call'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_method', var.get(u'node'))
    PyJsHoisted_ClassMethod_.func_name = u'ClassMethod'
    var.put(u'ClassMethod', PyJsHoisted_ClassMethod_)
    @Js
    def PyJsHoisted_ClassDeclaration_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'decorators'), var.get(u'node'))
        var.get(u"this").callprop(u'word', Js(u'class'))
        if var.get(u'node').get(u'id'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
        if var.get(u'node').get(u'superClass'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'extends'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'superClass'), var.get(u'node'))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'superTypeParameters'), var.get(u'node'))
        if var.get(u'node').get(u'implements'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'implements'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'printList', var.get(u'node').get(u'implements'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_ClassDeclaration_.func_name = u'ClassDeclaration'
    var.put(u'ClassDeclaration', PyJsHoisted_ClassDeclaration_)
    @Js
    def PyJsHoisted_ClassBody_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'{'))
        var.get(u"this").callprop(u'printInnerComments', var.get(u'node'))
        if PyJsStrictEq(var.get(u'node').get(u'body').get(u'length'),Js(0.0)):
            var.get(u"this").callprop(u'token', Js(u'}'))
        else:
            var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'indent')
            var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'body'), var.get(u'node'))
            var.get(u"this").callprop(u'dedent')
            if var.get(u"this").callprop(u'endsWith', Js(u'\n')).neg():
                var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'rightBrace')
    PyJsHoisted_ClassBody_.func_name = u'ClassBody'
    var.put(u'ClassBody', PyJsHoisted_ClassBody_)
    @Js
    def PyJsHoisted_ClassProperty_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'decorators'), var.get(u'node'))
        if var.get(u'node').get(u'static'):
            var.get(u"this").callprop(u'word', Js(u'static'))
            var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'computed'):
            var.get(u"this").callprop(u'token', Js(u'['))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u']'))
        else:
            var.get(u"this").callprop(u'_variance', var.get(u'node'))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
        if var.get(u'node').get(u'value'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'='))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_ClassProperty_.func_name = u'ClassProperty'
    var.put(u'ClassProperty', PyJsHoisted_ClassProperty_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'ClassDeclaration', var.get(u'ClassDeclaration'))
    var.get(u'exports').put(u'ClassBody', var.get(u'ClassBody'))
    var.get(u'exports').put(u'ClassProperty', var.get(u'ClassProperty'))
    var.get(u'exports').put(u'ClassMethod', var.get(u'ClassMethod'))
    pass
    var.get(u'exports').put(u'ClassExpression', var.get(u'ClassDeclaration'))
    pass
    pass
    pass
PyJs_anonymous_451_._set_name(u'anonymous')
PyJs_Object_452_ = Js({})
@Js
def PyJs_anonymous_453_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'ParenthesizedExpression', u'MetaProperty', u'CallExpression', u'ExpressionStatement', u'UpdateExpression', u'module', u'_interopRequireDefault', u'_isNumber', u'_node', u'Super', u'Decorator', u'_isNumber2', u'AssignmentExpression', u'exports', u'commaSeparatorNewline', u'buildYieldAwait', u'_interopRequireWildcard', u'_babelTypes', u'ConditionalExpression', u'DoExpression', u'MemberExpression', u'SequenceExpression', u'UnaryExpression', u'AwaitExpression', u'NewExpression', u'require', u'BindExpression', u'n', u'ThisExpression', u'YieldExpression', u't', u'AssignmentPattern', u'EmptyStatement'])
    @Js
    def PyJsHoisted_ParenthesizedExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'expression'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
    PyJsHoisted_ParenthesizedExpression_.func_name = u'ParenthesizedExpression'
    var.put(u'ParenthesizedExpression', PyJsHoisted_ParenthesizedExpression_)
    @Js
    def PyJsHoisted_MetaProperty_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'meta'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'.'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'property'), var.get(u'node'))
    PyJsHoisted_MetaProperty_.func_name = u'MetaProperty'
    var.put(u'MetaProperty', PyJsHoisted_MetaProperty_)
    @Js
    def PyJsHoisted_CallExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'separator', u'isPrettyCall'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'callee'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'('))
        var.put(u'isPrettyCall', var.get(u'node').get(u'_prettyCall'))
        var.put(u'separator', PyJsComma(Js(0.0), Js(None)))
        if var.get(u'isPrettyCall'):
            var.put(u'separator', var.get(u'commaSeparatorNewline'))
            var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'indent')
        PyJs_Object_457_ = Js({u'separator':var.get(u'separator')})
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'arguments'), var.get(u'node'), PyJs_Object_457_)
        if var.get(u'isPrettyCall'):
            var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'dedent')
        var.get(u"this").callprop(u'token', Js(u')'))
    PyJsHoisted_CallExpression_.func_name = u'CallExpression'
    var.put(u'CallExpression', PyJsHoisted_CallExpression_)
    @Js
    def PyJsHoisted_ExpressionStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'expression'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_ExpressionStatement_.func_name = u'ExpressionStatement'
    var.put(u'ExpressionStatement', PyJsHoisted_ExpressionStatement_)
    @Js
    def PyJsHoisted_UpdateExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'prefix'):
            var.get(u"this").callprop(u'token', var.get(u'node').get(u'operator'))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
        else:
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
            var.get(u"this").callprop(u'token', var.get(u'node').get(u'operator'))
    PyJsHoisted_UpdateExpression_.func_name = u'UpdateExpression'
    var.put(u'UpdateExpression', PyJsHoisted_UpdateExpression_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_455_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_455_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_Super_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'super'))
    PyJsHoisted_Super_.func_name = u'Super'
    var.put(u'Super', PyJsHoisted_Super_)
    @Js
    def PyJsHoisted_Decorator_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'@'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'expression'), var.get(u'node'))
        var.get(u"this").callprop(u'newline')
    PyJsHoisted_Decorator_.func_name = u'Decorator'
    var.put(u'Decorator', PyJsHoisted_Decorator_)
    @Js
    def PyJsHoisted_AssignmentExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parens', u'parent'])
        var.put(u'parens', ((var.get(u"this").get(u'inForStatementInitCounter') and PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'in'))) and var.get(u'n').callprop(u'needsParens', var.get(u'node'), var.get(u'parent')).neg()))
        if var.get(u'parens'):
            var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'left'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        if (PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'in')) or PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'instanceof'))):
            var.get(u"this").callprop(u'word', var.get(u'node').get(u'operator'))
        else:
            var.get(u"this").callprop(u'token', var.get(u'node').get(u'operator'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'right'), var.get(u'node'))
        if var.get(u'parens'):
            var.get(u"this").callprop(u'token', Js(u')'))
    PyJsHoisted_AssignmentExpression_.func_name = u'AssignmentExpression'
    var.put(u'AssignmentExpression', PyJsHoisted_AssignmentExpression_)
    @Js
    def PyJsHoisted_commaSeparatorNewline_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'token', Js(u','))
        var.get(u"this").callprop(u'newline')
        if var.get(u"this").callprop(u'endsWith', Js(u'\n')).neg():
            var.get(u"this").callprop(u'space')
    PyJsHoisted_commaSeparatorNewline_.func_name = u'commaSeparatorNewline'
    var.put(u'commaSeparatorNewline', PyJsHoisted_commaSeparatorNewline_)
    @Js
    def PyJsHoisted_buildYieldAwait_(keyword, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'keyword':keyword}, var)
        var.registers([u'keyword'])
        @Js
        def PyJs_anonymous_458_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
            var.registers([u'node', u'terminatorState'])
            var.get(u"this").callprop(u'word', var.get(u'keyword'))
            if var.get(u'node').get(u'delegate'):
                var.get(u"this").callprop(u'token', Js(u'*'))
            if var.get(u'node').get(u'argument'):
                var.get(u"this").callprop(u'space')
                var.put(u'terminatorState', var.get(u"this").callprop(u'startTerminatorless'))
                var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
                var.get(u"this").callprop(u'endTerminatorless', var.get(u'terminatorState'))
        PyJs_anonymous_458_._set_name(u'anonymous')
        return PyJs_anonymous_458_
    PyJsHoisted_buildYieldAwait_.func_name = u'buildYieldAwait'
    var.put(u'buildYieldAwait', PyJsHoisted_buildYieldAwait_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_454_ = Js({})
            var.put(u'newObj', PyJs_Object_454_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ThisExpression_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'this'))
    PyJsHoisted_ThisExpression_.func_name = u'ThisExpression'
    var.put(u'ThisExpression', PyJsHoisted_ThisExpression_)
    @Js
    def PyJsHoisted_ConditionalExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'?'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'consequent'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'alternate'), var.get(u'node'))
    PyJsHoisted_ConditionalExpression_.func_name = u'ConditionalExpression'
    var.put(u'ConditionalExpression', PyJsHoisted_ConditionalExpression_)
    @Js
    def PyJsHoisted_DoExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'do'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_DoExpression_.func_name = u'DoExpression'
    var.put(u'DoExpression', PyJsHoisted_DoExpression_)
    @Js
    def PyJsHoisted_MemberExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'computed'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'object'), var.get(u'node'))
        if (var.get(u'node').get(u'computed').neg() and var.get(u't').callprop(u'isMemberExpression', var.get(u'node').get(u'property'))):
            PyJsTempException = JsToPyException(var.get(u'TypeError').create(Js(u'Got a MemberExpression for MemberExpression property')))
            raise PyJsTempException
        var.put(u'computed', var.get(u'node').get(u'computed'))
        if (var.get(u't').callprop(u'isLiteral', var.get(u'node').get(u'property')) and PyJsComma(Js(0.0),var.get(u'_isNumber2').get(u'default'))(var.get(u'node').get(u'property').get(u'value'))):
            var.put(u'computed', var.get(u'true'))
        if var.get(u'computed'):
            var.get(u"this").callprop(u'token', Js(u'['))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'property'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u']'))
        else:
            var.get(u"this").callprop(u'token', Js(u'.'))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'property'), var.get(u'node'))
    PyJsHoisted_MemberExpression_.func_name = u'MemberExpression'
    var.put(u'MemberExpression', PyJsHoisted_MemberExpression_)
    @Js
    def PyJsHoisted_SequenceExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'expressions'), var.get(u'node'))
    PyJsHoisted_SequenceExpression_.func_name = u'SequenceExpression'
    var.put(u'SequenceExpression', PyJsHoisted_SequenceExpression_)
    @Js
    def PyJsHoisted_UnaryExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if ((PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'void')) or PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'delete'))) or PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'typeof'))):
            var.get(u"this").callprop(u'word', var.get(u'node').get(u'operator'))
            var.get(u"this").callprop(u'space')
        else:
            var.get(u"this").callprop(u'token', var.get(u'node').get(u'operator'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
    PyJsHoisted_UnaryExpression_.func_name = u'UnaryExpression'
    var.put(u'UnaryExpression', PyJsHoisted_UnaryExpression_)
    @Js
    def PyJsHoisted_NewExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        var.get(u"this").callprop(u'word', Js(u'new'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'callee'), var.get(u'node'))
        PyJs_Object_456_ = Js({u'callee':var.get(u'node')})
        if ((((PyJsStrictEq(var.get(u'node').get(u'arguments').get(u'length'),Js(0.0)) and var.get(u"this").get(u'format').get(u'minified')) and var.get(u't').callprop(u'isCallExpression', var.get(u'parent'), PyJs_Object_456_).neg()) and var.get(u't').callprop(u'isMemberExpression', var.get(u'parent')).neg()) and var.get(u't').callprop(u'isNewExpression', var.get(u'parent')).neg()):
            return var.get('undefined')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'arguments'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
    PyJsHoisted_NewExpression_.func_name = u'NewExpression'
    var.put(u'NewExpression', PyJsHoisted_NewExpression_)
    @Js
    def PyJsHoisted_BindExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'object'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'::'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'callee'), var.get(u'node'))
    PyJsHoisted_BindExpression_.func_name = u'BindExpression'
    var.put(u'BindExpression', PyJsHoisted_BindExpression_)
    @Js
    def PyJsHoisted_AssignmentPattern_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'left'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'='))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'right'), var.get(u'node'))
    PyJsHoisted_AssignmentPattern_.func_name = u'AssignmentPattern'
    var.put(u'AssignmentPattern', PyJsHoisted_AssignmentPattern_)
    @Js
    def PyJsHoisted_EmptyStatement_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'semicolon', var.get(u'true'))
    PyJsHoisted_EmptyStatement_.func_name = u'EmptyStatement'
    var.put(u'EmptyStatement', PyJsHoisted_EmptyStatement_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'LogicalExpression', var.get(u'exports').put(u'BinaryExpression', var.get(u'exports').put(u'AwaitExpression', var.get(u'exports').put(u'YieldExpression', var.get(u'undefined')))))
    var.get(u'exports').put(u'UnaryExpression', var.get(u'UnaryExpression'))
    var.get(u'exports').put(u'DoExpression', var.get(u'DoExpression'))
    var.get(u'exports').put(u'ParenthesizedExpression', var.get(u'ParenthesizedExpression'))
    var.get(u'exports').put(u'UpdateExpression', var.get(u'UpdateExpression'))
    var.get(u'exports').put(u'ConditionalExpression', var.get(u'ConditionalExpression'))
    var.get(u'exports').put(u'NewExpression', var.get(u'NewExpression'))
    var.get(u'exports').put(u'SequenceExpression', var.get(u'SequenceExpression'))
    var.get(u'exports').put(u'ThisExpression', var.get(u'ThisExpression'))
    var.get(u'exports').put(u'Super', var.get(u'Super'))
    var.get(u'exports').put(u'Decorator', var.get(u'Decorator'))
    var.get(u'exports').put(u'CallExpression', var.get(u'CallExpression'))
    var.get(u'exports').put(u'EmptyStatement', var.get(u'EmptyStatement'))
    var.get(u'exports').put(u'ExpressionStatement', var.get(u'ExpressionStatement'))
    var.get(u'exports').put(u'AssignmentPattern', var.get(u'AssignmentPattern'))
    var.get(u'exports').put(u'AssignmentExpression', var.get(u'AssignmentExpression'))
    var.get(u'exports').put(u'BindExpression', var.get(u'BindExpression'))
    var.get(u'exports').put(u'MemberExpression', var.get(u'MemberExpression'))
    var.get(u'exports').put(u'MetaProperty', var.get(u'MetaProperty'))
    var.put(u'_isNumber', var.get(u'require')(Js(u'lodash/isNumber')))
    var.put(u'_isNumber2', var.get(u'_interopRequireDefault')(var.get(u'_isNumber')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    var.put(u'_node', var.get(u'require')(Js(u'../node')))
    var.put(u'n', var.get(u'_interopRequireWildcard')(var.get(u'_node')))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    var.put(u'YieldExpression', var.get(u'exports').put(u'YieldExpression', var.get(u'buildYieldAwait')(Js(u'yield'))))
    var.put(u'AwaitExpression', var.get(u'exports').put(u'AwaitExpression', var.get(u'buildYieldAwait')(Js(u'await'))))
    pass
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'BinaryExpression', var.get(u'AssignmentExpression'))
    var.get(u'exports').put(u'LogicalExpression', var.get(u'AssignmentExpression'))
    pass
    pass
PyJs_anonymous_453_._set_name(u'anonymous')
PyJs_Object_459_ = Js({u'../node':Js(41.0),u'babel-types':Js(258.0),u'lodash/isNumber':Js(466.0)})
@Js
def PyJs_anonymous_460_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_interfaceish', u'QualifiedTypeIdentifier', u'DeclareFunction', u'exports', u'module', u'StringTypeAnnotation', u'InterfaceDeclaration', u'InterfaceExtends', u'EmptyTypeAnnotation', u'AnyTypeAnnotation', u'ThisTypeAnnotation', u'ObjectTypeIndexer', u'ObjectTypeAnnotation', u'DeclareClass', u'NumberTypeAnnotation', u'ArrayTypeAnnotation', u'MixedTypeAnnotation', u'DeclareInterface', u'DeclareTypeAlias', u'TypeAlias', u'TypeofTypeAnnotation', u'DeclareVariable', u'NullLiteralTypeAnnotation', u'TypeParameterInstantiation', u'TypeParameter', u'ExistentialTypeParam', u'FunctionTypeParam', u'orSeparator', u'UnionTypeAnnotation', u'DeclareModuleExports', u'TypeCastExpression', u'BooleanLiteralTypeAnnotation', u'VoidTypeAnnotation', u'ObjectTypeProperty', u'IntersectionTypeAnnotation', u'ObjectTypeCallProperty', u'TupleTypeAnnotation', u'_types', u'TypeAnnotation', u'require', u'_variance', u'FunctionTypeAnnotation', u'DeclareModule', u'NullableTypeAnnotation', u'andSeparator', u'BooleanTypeAnnotation'])
    @Js
    def PyJsHoisted__interfaceish_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
        if var.get(u'node').get(u'extends').get(u'length'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'extends'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'printList', var.get(u'node').get(u'extends'), var.get(u'node'))
        if (var.get(u'node').get(u'mixins') and var.get(u'node').get(u'mixins').get(u'length')):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'mixins'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'printList', var.get(u'node').get(u'mixins'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted__interfaceish_.func_name = u'_interfaceish'
    var.put(u'_interfaceish', PyJsHoisted__interfaceish_)
    @Js
    def PyJsHoisted_QualifiedTypeIdentifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'qualification'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'.'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
    PyJsHoisted_QualifiedTypeIdentifier_.func_name = u'QualifiedTypeIdentifier'
    var.put(u'QualifiedTypeIdentifier', PyJsHoisted_QualifiedTypeIdentifier_)
    @Js
    def PyJsHoisted_DeclareFunction_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'function'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id').get(u'typeAnnotation').get(u'typeAnnotation'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_DeclareFunction_.func_name = u'DeclareFunction'
    var.put(u'DeclareFunction', PyJsHoisted_DeclareFunction_)
    @Js
    def PyJsHoisted_StringTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'string'))
    PyJsHoisted_StringTypeAnnotation_.func_name = u'StringTypeAnnotation'
    var.put(u'StringTypeAnnotation', PyJsHoisted_StringTypeAnnotation_)
    @Js
    def PyJsHoisted_InterfaceDeclaration_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'interface'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_interfaceish', var.get(u'node'))
    PyJsHoisted_InterfaceDeclaration_.func_name = u'InterfaceDeclaration'
    var.put(u'InterfaceDeclaration', PyJsHoisted_InterfaceDeclaration_)
    @Js
    def PyJsHoisted_InterfaceExtends_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
    PyJsHoisted_InterfaceExtends_.func_name = u'InterfaceExtends'
    var.put(u'InterfaceExtends', PyJsHoisted_InterfaceExtends_)
    @Js
    def PyJsHoisted_EmptyTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'empty'))
    PyJsHoisted_EmptyTypeAnnotation_.func_name = u'EmptyTypeAnnotation'
    var.put(u'EmptyTypeAnnotation', PyJsHoisted_EmptyTypeAnnotation_)
    @Js
    def PyJsHoisted_AnyTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'any'))
    PyJsHoisted_AnyTypeAnnotation_.func_name = u'AnyTypeAnnotation'
    var.put(u'AnyTypeAnnotation', PyJsHoisted_AnyTypeAnnotation_)
    @Js
    def PyJsHoisted_ThisTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'this'))
    PyJsHoisted_ThisTypeAnnotation_.func_name = u'ThisTypeAnnotation'
    var.put(u'ThisTypeAnnotation', PyJsHoisted_ThisTypeAnnotation_)
    @Js
    def PyJsHoisted_ObjectTypeIndexer_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'static'):
            var.get(u"this").callprop(u'word', Js(u'static'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_variance', var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'['))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u']'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
    PyJsHoisted_ObjectTypeIndexer_.func_name = u'ObjectTypeIndexer'
    var.put(u'ObjectTypeIndexer', PyJsHoisted_ObjectTypeIndexer_)
    @Js
    def PyJsHoisted_ObjectTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'_this', u'props'])
        var.put(u'_this', var.get(u"this"))
        if var.get(u'node').get(u'exact'):
            var.get(u"this").callprop(u'token', Js(u'{|'))
        else:
            var.get(u"this").callprop(u'token', Js(u'{'))
        var.put(u'props', var.get(u'node').get(u'properties').callprop(u'concat', var.get(u'node').get(u'callProperties'), var.get(u'node').get(u'indexers')))
        if var.get(u'props').get(u'length'):
            var.get(u"this").callprop(u'space')
            @Js
            def PyJs_iterator_468_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'iterator':PyJs_iterator_468_}, var)
                var.registers([])
                if PyJsStrictNeq(var.get(u'props').get(u'length'),Js(1.0)):
                    var.get(u'_this').callprop(u'semicolon')
                    var.get(u'_this').callprop(u'space')
            PyJs_iterator_468_._set_name(u'iterator')
            PyJs_Object_467_ = Js({u'indent':var.get(u'true'),u'statement':var.get(u'true'),u'iterator':PyJs_iterator_468_})
            var.get(u"this").callprop(u'printJoin', var.get(u'props'), var.get(u'node'), PyJs_Object_467_)
            var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'exact'):
            var.get(u"this").callprop(u'token', Js(u'|}'))
        else:
            var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_ObjectTypeAnnotation_.func_name = u'ObjectTypeAnnotation'
    var.put(u'ObjectTypeAnnotation', PyJsHoisted_ObjectTypeAnnotation_)
    @Js
    def PyJsHoisted_DeclareClass_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'class'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_interfaceish', var.get(u'node'))
    PyJsHoisted_DeclareClass_.func_name = u'DeclareClass'
    var.put(u'DeclareClass', PyJsHoisted_DeclareClass_)
    @Js
    def PyJsHoisted_NumberTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'number'))
    PyJsHoisted_NumberTypeAnnotation_.func_name = u'NumberTypeAnnotation'
    var.put(u'NumberTypeAnnotation', PyJsHoisted_NumberTypeAnnotation_)
    @Js
    def PyJsHoisted_ArrayTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'elementType'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'['))
        var.get(u"this").callprop(u'token', Js(u']'))
    PyJsHoisted_ArrayTypeAnnotation_.func_name = u'ArrayTypeAnnotation'
    var.put(u'ArrayTypeAnnotation', PyJsHoisted_ArrayTypeAnnotation_)
    @Js
    def PyJsHoisted_MixedTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'mixed'))
    PyJsHoisted_MixedTypeAnnotation_.func_name = u'MixedTypeAnnotation'
    var.put(u'MixedTypeAnnotation', PyJsHoisted_MixedTypeAnnotation_)
    @Js
    def PyJsHoisted_DeclareInterface_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'InterfaceDeclaration', var.get(u'node'))
    PyJsHoisted_DeclareInterface_.func_name = u'DeclareInterface'
    var.put(u'DeclareInterface', PyJsHoisted_DeclareInterface_)
    @Js
    def PyJsHoisted_DeclareTypeAlias_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'TypeAlias', var.get(u'node'))
    PyJsHoisted_DeclareTypeAlias_.func_name = u'DeclareTypeAlias'
    var.put(u'DeclareTypeAlias', PyJsHoisted_DeclareTypeAlias_)
    @Js
    def PyJsHoisted_TypeAlias_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'type'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'='))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'right'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_TypeAlias_.func_name = u'TypeAlias'
    var.put(u'TypeAlias', PyJsHoisted_TypeAlias_)
    @Js
    def PyJsHoisted_TypeofTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'typeof'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
    PyJsHoisted_TypeofTypeAnnotation_.func_name = u'TypeofTypeAnnotation'
    var.put(u'TypeofTypeAnnotation', PyJsHoisted_TypeofTypeAnnotation_)
    @Js
    def PyJsHoisted_DeclareVariable_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'var'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id').get(u'typeAnnotation'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_DeclareVariable_.func_name = u'DeclareVariable'
    var.put(u'DeclareVariable', PyJsHoisted_DeclareVariable_)
    @Js
    def PyJsHoisted_NullLiteralTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'null'))
    PyJsHoisted_NullLiteralTypeAnnotation_.func_name = u'NullLiteralTypeAnnotation'
    var.put(u'NullLiteralTypeAnnotation', PyJsHoisted_NullLiteralTypeAnnotation_)
    @Js
    def PyJsHoisted_TypeParameterInstantiation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'<'))
        PyJs_Object_466_ = Js({})
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'params'), var.get(u'node'), PyJs_Object_466_)
        var.get(u"this").callprop(u'token', Js(u'>'))
    PyJsHoisted_TypeParameterInstantiation_.func_name = u'TypeParameterInstantiation'
    var.put(u'TypeParameterInstantiation', PyJsHoisted_TypeParameterInstantiation_)
    @Js
    def PyJsHoisted_TypeParameter_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'_variance', var.get(u'node'))
        var.get(u"this").callprop(u'word', var.get(u'node').get(u'name'))
        if var.get(u'node').get(u'bound'):
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'bound'), var.get(u'node'))
        if var.get(u'node').get(u'default'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'='))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'default'), var.get(u'node'))
    PyJsHoisted_TypeParameter_.func_name = u'TypeParameter'
    var.put(u'TypeParameter', PyJsHoisted_TypeParameter_)
    @Js
    def PyJsHoisted_ExistentialTypeParam_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'token', Js(u'*'))
    PyJsHoisted_ExistentialTypeParam_.func_name = u'ExistentialTypeParam'
    var.put(u'ExistentialTypeParam', PyJsHoisted_ExistentialTypeParam_)
    @Js
    def PyJsHoisted_FunctionTypeParam_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'name'), var.get(u'node'))
        if var.get(u'node').get(u'optional'):
            var.get(u"this").callprop(u'token', Js(u'?'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
    PyJsHoisted_FunctionTypeParam_.func_name = u'FunctionTypeParam'
    var.put(u'FunctionTypeParam', PyJsHoisted_FunctionTypeParam_)
    @Js
    def PyJsHoisted_orSeparator_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'|'))
        var.get(u"this").callprop(u'space')
    PyJsHoisted_orSeparator_.func_name = u'orSeparator'
    var.put(u'orSeparator', PyJsHoisted_orSeparator_)
    @Js
    def PyJsHoisted_UnionTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        PyJs_Object_469_ = Js({u'separator':var.get(u'orSeparator')})
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'types'), var.get(u'node'), PyJs_Object_469_)
    PyJsHoisted_UnionTypeAnnotation_.func_name = u'UnionTypeAnnotation'
    var.put(u'UnionTypeAnnotation', PyJsHoisted_UnionTypeAnnotation_)
    @Js
    def PyJsHoisted_DeclareModuleExports_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'module'))
        var.get(u"this").callprop(u'token', Js(u'.'))
        var.get(u"this").callprop(u'word', Js(u'exports'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
    PyJsHoisted_DeclareModuleExports_.func_name = u'DeclareModuleExports'
    var.put(u'DeclareModuleExports', PyJsHoisted_DeclareModuleExports_)
    @Js
    def PyJsHoisted_TypeCastExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'expression'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
    PyJsHoisted_TypeCastExpression_.func_name = u'TypeCastExpression'
    var.put(u'TypeCastExpression', PyJsHoisted_TypeCastExpression_)
    @Js
    def PyJsHoisted_BooleanLiteralTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', (Js(u'true') if var.get(u'node').get(u'value') else Js(u'false')))
    PyJsHoisted_BooleanLiteralTypeAnnotation_.func_name = u'BooleanLiteralTypeAnnotation'
    var.put(u'BooleanLiteralTypeAnnotation', PyJsHoisted_BooleanLiteralTypeAnnotation_)
    @Js
    def PyJsHoisted_VoidTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'void'))
    PyJsHoisted_VoidTypeAnnotation_.func_name = u'VoidTypeAnnotation'
    var.put(u'VoidTypeAnnotation', PyJsHoisted_VoidTypeAnnotation_)
    @Js
    def PyJsHoisted_ObjectTypeProperty_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'static'):
            var.get(u"this").callprop(u'word', Js(u'static'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_variance', var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
        if var.get(u'node').get(u'optional'):
            var.get(u"this").callprop(u'token', Js(u'?'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
    PyJsHoisted_ObjectTypeProperty_.func_name = u'ObjectTypeProperty'
    var.put(u'ObjectTypeProperty', PyJsHoisted_ObjectTypeProperty_)
    @Js
    def PyJsHoisted_IntersectionTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        PyJs_Object_465_ = Js({u'separator':var.get(u'andSeparator')})
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'types'), var.get(u'node'), PyJs_Object_465_)
    PyJsHoisted_IntersectionTypeAnnotation_.func_name = u'IntersectionTypeAnnotation'
    var.put(u'IntersectionTypeAnnotation', PyJsHoisted_IntersectionTypeAnnotation_)
    @Js
    def PyJsHoisted_ObjectTypeCallProperty_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'static'):
            var.get(u"this").callprop(u'word', Js(u'static'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
    PyJsHoisted_ObjectTypeCallProperty_.func_name = u'ObjectTypeCallProperty'
    var.put(u'ObjectTypeCallProperty', PyJsHoisted_ObjectTypeCallProperty_)
    @Js
    def PyJsHoisted_TupleTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'['))
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'types'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u']'))
    PyJsHoisted_TupleTypeAnnotation_.func_name = u'TupleTypeAnnotation'
    var.put(u'TupleTypeAnnotation', PyJsHoisted_TupleTypeAnnotation_)
    @Js
    def PyJsHoisted_TypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'optional'):
            var.get(u"this").callprop(u'token', Js(u'?'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
    PyJsHoisted_TypeAnnotation_.func_name = u'TypeAnnotation'
    var.put(u'TypeAnnotation', PyJsHoisted_TypeAnnotation_)
    @Js
    def PyJsHoisted__variance_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if PyJsStrictEq(var.get(u'node').get(u'variance'),Js(u'plus')):
            var.get(u"this").callprop(u'token', Js(u'+'))
        else:
            if PyJsStrictEq(var.get(u'node').get(u'variance'),Js(u'minus')):
                var.get(u"this").callprop(u'token', Js(u'-'))
    PyJsHoisted__variance_.func_name = u'_variance'
    var.put(u'_variance', PyJsHoisted__variance_)
    @Js
    def PyJsHoisted_FunctionTypeAnnotation_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'params'), var.get(u'node'))
        if var.get(u'node').get(u'rest'):
            if var.get(u'node').get(u'params').get(u'length'):
                var.get(u"this").callprop(u'token', Js(u','))
                var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'...'))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'rest'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        if (PyJsStrictEq(var.get(u'parent').get(u'type'),Js(u'ObjectTypeCallProperty')) or PyJsStrictEq(var.get(u'parent').get(u'type'),Js(u'DeclareFunction'))):
            var.get(u"this").callprop(u'token', Js(u':'))
        else:
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'=>'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'returnType'), var.get(u'node'))
    PyJsHoisted_FunctionTypeAnnotation_.func_name = u'FunctionTypeAnnotation'
    var.put(u'FunctionTypeAnnotation', PyJsHoisted_FunctionTypeAnnotation_)
    @Js
    def PyJsHoisted_DeclareModule_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'declare'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'module'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_DeclareModule_.func_name = u'DeclareModule'
    var.put(u'DeclareModule', PyJsHoisted_DeclareModule_)
    @Js
    def PyJsHoisted_NullableTypeAnnotation_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'?'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
    PyJsHoisted_NullableTypeAnnotation_.func_name = u'NullableTypeAnnotation'
    var.put(u'NullableTypeAnnotation', PyJsHoisted_NullableTypeAnnotation_)
    @Js
    def PyJsHoisted_andSeparator_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'&'))
        var.get(u"this").callprop(u'space')
    PyJsHoisted_andSeparator_.func_name = u'andSeparator'
    var.put(u'andSeparator', PyJsHoisted_andSeparator_)
    @Js
    def PyJsHoisted_BooleanTypeAnnotation_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'boolean'))
    PyJsHoisted_BooleanTypeAnnotation_.func_name = u'BooleanTypeAnnotation'
    var.put(u'BooleanTypeAnnotation', PyJsHoisted_BooleanTypeAnnotation_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'AnyTypeAnnotation', var.get(u'AnyTypeAnnotation'))
    var.get(u'exports').put(u'ArrayTypeAnnotation', var.get(u'ArrayTypeAnnotation'))
    var.get(u'exports').put(u'BooleanTypeAnnotation', var.get(u'BooleanTypeAnnotation'))
    var.get(u'exports').put(u'BooleanLiteralTypeAnnotation', var.get(u'BooleanLiteralTypeAnnotation'))
    var.get(u'exports').put(u'NullLiteralTypeAnnotation', var.get(u'NullLiteralTypeAnnotation'))
    var.get(u'exports').put(u'DeclareClass', var.get(u'DeclareClass'))
    var.get(u'exports').put(u'DeclareFunction', var.get(u'DeclareFunction'))
    var.get(u'exports').put(u'DeclareInterface', var.get(u'DeclareInterface'))
    var.get(u'exports').put(u'DeclareModule', var.get(u'DeclareModule'))
    var.get(u'exports').put(u'DeclareModuleExports', var.get(u'DeclareModuleExports'))
    var.get(u'exports').put(u'DeclareTypeAlias', var.get(u'DeclareTypeAlias'))
    var.get(u'exports').put(u'DeclareVariable', var.get(u'DeclareVariable'))
    var.get(u'exports').put(u'ExistentialTypeParam', var.get(u'ExistentialTypeParam'))
    var.get(u'exports').put(u'FunctionTypeAnnotation', var.get(u'FunctionTypeAnnotation'))
    var.get(u'exports').put(u'FunctionTypeParam', var.get(u'FunctionTypeParam'))
    var.get(u'exports').put(u'InterfaceExtends', var.get(u'InterfaceExtends'))
    var.get(u'exports').put(u'_interfaceish', var.get(u'_interfaceish'))
    var.get(u'exports').put(u'_variance', var.get(u'_variance'))
    var.get(u'exports').put(u'InterfaceDeclaration', var.get(u'InterfaceDeclaration'))
    var.get(u'exports').put(u'IntersectionTypeAnnotation', var.get(u'IntersectionTypeAnnotation'))
    var.get(u'exports').put(u'MixedTypeAnnotation', var.get(u'MixedTypeAnnotation'))
    var.get(u'exports').put(u'EmptyTypeAnnotation', var.get(u'EmptyTypeAnnotation'))
    var.get(u'exports').put(u'NullableTypeAnnotation', var.get(u'NullableTypeAnnotation'))
    var.put(u'_types', var.get(u'require')(Js(u'./types')))
    @Js
    def PyJs_get_462_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_462_}, var)
        var.registers([])
        return var.get(u'_types').get(u'NumericLiteral')
    PyJs_get_462_._set_name(u'get')
    PyJs_Object_461_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_462_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'NumericLiteralTypeAnnotation'), PyJs_Object_461_)
    @Js
    def PyJs_get_464_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_464_}, var)
        var.registers([])
        return var.get(u'_types').get(u'StringLiteral')
    PyJs_get_464_._set_name(u'get')
    PyJs_Object_463_ = Js({u'enumerable':var.get(u'true'),u'get':PyJs_get_464_})
    var.get(u'Object').callprop(u'defineProperty', var.get(u'exports'), Js(u'StringLiteralTypeAnnotation'), PyJs_Object_463_)
    var.get(u'exports').put(u'NumberTypeAnnotation', var.get(u'NumberTypeAnnotation'))
    var.get(u'exports').put(u'StringTypeAnnotation', var.get(u'StringTypeAnnotation'))
    var.get(u'exports').put(u'ThisTypeAnnotation', var.get(u'ThisTypeAnnotation'))
    var.get(u'exports').put(u'TupleTypeAnnotation', var.get(u'TupleTypeAnnotation'))
    var.get(u'exports').put(u'TypeofTypeAnnotation', var.get(u'TypeofTypeAnnotation'))
    var.get(u'exports').put(u'TypeAlias', var.get(u'TypeAlias'))
    var.get(u'exports').put(u'TypeAnnotation', var.get(u'TypeAnnotation'))
    var.get(u'exports').put(u'TypeParameter', var.get(u'TypeParameter'))
    var.get(u'exports').put(u'TypeParameterInstantiation', var.get(u'TypeParameterInstantiation'))
    var.get(u'exports').put(u'ObjectTypeAnnotation', var.get(u'ObjectTypeAnnotation'))
    var.get(u'exports').put(u'ObjectTypeCallProperty', var.get(u'ObjectTypeCallProperty'))
    var.get(u'exports').put(u'ObjectTypeIndexer', var.get(u'ObjectTypeIndexer'))
    var.get(u'exports').put(u'ObjectTypeProperty', var.get(u'ObjectTypeProperty'))
    var.get(u'exports').put(u'QualifiedTypeIdentifier', var.get(u'QualifiedTypeIdentifier'))
    var.get(u'exports').put(u'UnionTypeAnnotation', var.get(u'UnionTypeAnnotation'))
    var.get(u'exports').put(u'TypeCastExpression', var.get(u'TypeCastExpression'))
    var.get(u'exports').put(u'VoidTypeAnnotation', var.get(u'VoidTypeAnnotation'))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'ClassImplements', var.get(u'InterfaceExtends'))
    var.get(u'exports').put(u'GenericTypeAnnotation', var.get(u'InterfaceExtends'))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'TypeParameterDeclaration', var.get(u'TypeParameterInstantiation'))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_460_._set_name(u'anonymous')
PyJs_Object_470_ = Js({u'./types':Js(39.0)})
@Js
def PyJs_anonymous_471_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'JSXSpreadAttribute', u'exports', u'JSXOpeningElement', u'JSXMemberExpression', u'JSXClosingElement', u'module', u'JSXElement', u'JSXAttribute', u'JSXNamespacedName', u'JSXText', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'JSXExpressionContainer', u'spaceSeparator', u'JSXEmptyExpression', u'JSXIdentifier'])
    @Js
    def PyJsHoisted_JSXSpreadAttribute_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'{'))
        var.get(u"this").callprop(u'token', Js(u'...'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_JSXSpreadAttribute_.func_name = u'JSXSpreadAttribute'
    var.put(u'JSXSpreadAttribute', PyJsHoisted_JSXSpreadAttribute_)
    @Js
    def PyJsHoisted_JSXOpeningElement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'<'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'name'), var.get(u'node'))
        if (var.get(u'node').get(u'attributes').get(u'length')>Js(0.0)):
            var.get(u"this").callprop(u'space')
            PyJs_Object_473_ = Js({u'separator':var.get(u'spaceSeparator')})
            var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'attributes'), var.get(u'node'), PyJs_Object_473_)
        if var.get(u'node').get(u'selfClosing'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'/>'))
        else:
            var.get(u"this").callprop(u'token', Js(u'>'))
    PyJsHoisted_JSXOpeningElement_.func_name = u'JSXOpeningElement'
    var.put(u'JSXOpeningElement', PyJsHoisted_JSXOpeningElement_)
    @Js
    def PyJsHoisted_JSXMemberExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'object'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'.'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'property'), var.get(u'node'))
    PyJsHoisted_JSXMemberExpression_.func_name = u'JSXMemberExpression'
    var.put(u'JSXMemberExpression', PyJsHoisted_JSXMemberExpression_)
    @Js
    def PyJsHoisted_JSXClosingElement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'</'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'name'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'>'))
    PyJsHoisted_JSXClosingElement_.func_name = u'JSXClosingElement'
    var.put(u'JSXClosingElement', PyJsHoisted_JSXClosingElement_)
    @Js
    def PyJsHoisted_JSXElement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'_isArray', u'_iterator', u'_i', u'child', u'_ref', u'open'])
        var.put(u'open', var.get(u'node').get(u'openingElement'))
        var.get(u"this").callprop(u'print', var.get(u'open'), var.get(u'node'))
        if var.get(u'open').get(u'selfClosing'):
            return var.get('undefined')
        var.get(u"this").callprop(u'indent')
        #for JS loop
        var.put(u'_iterator', var.get(u'node').get(u'children'))
        var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
        var.put(u'_i', Js(0.0))
        var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
        while 1:
            pass
            if var.get(u'_isArray'):
                if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                    break
                var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
            else:
                var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                if var.get(u'_i').get(u'done'):
                    break
                var.put(u'_ref', var.get(u'_i').get(u'value'))
            var.put(u'child', var.get(u'_ref'))
            var.get(u"this").callprop(u'print', var.get(u'child'), var.get(u'node'))
        
        var.get(u"this").callprop(u'dedent')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'closingElement'), var.get(u'node'))
    PyJsHoisted_JSXElement_.func_name = u'JSXElement'
    var.put(u'JSXElement', PyJsHoisted_JSXElement_)
    @Js
    def PyJsHoisted_JSXAttribute_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'name'), var.get(u'node'))
        if var.get(u'node').get(u'value'):
            var.get(u"this").callprop(u'token', Js(u'='))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
    PyJsHoisted_JSXAttribute_.func_name = u'JSXAttribute'
    var.put(u'JSXAttribute', PyJsHoisted_JSXAttribute_)
    @Js
    def PyJsHoisted_JSXNamespacedName_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'namespace'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'name'), var.get(u'node'))
    PyJsHoisted_JSXNamespacedName_.func_name = u'JSXNamespacedName'
    var.put(u'JSXNamespacedName', PyJsHoisted_JSXNamespacedName_)
    @Js
    def PyJsHoisted_JSXText_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', var.get(u'node').get(u'value'))
    PyJsHoisted_JSXText_.func_name = u'JSXText'
    var.put(u'JSXText', PyJsHoisted_JSXText_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_472_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_472_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_JSXExpressionContainer_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'{'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'expression'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_JSXExpressionContainer_.func_name = u'JSXExpressionContainer'
    var.put(u'JSXExpressionContainer', PyJsHoisted_JSXExpressionContainer_)
    @Js
    def PyJsHoisted_spaceSeparator_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'space')
    PyJsHoisted_spaceSeparator_.func_name = u'spaceSeparator'
    var.put(u'spaceSeparator', PyJsHoisted_spaceSeparator_)
    @Js
    def PyJsHoisted_JSXEmptyExpression_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        pass
    PyJsHoisted_JSXEmptyExpression_.func_name = u'JSXEmptyExpression'
    var.put(u'JSXEmptyExpression', PyJsHoisted_JSXEmptyExpression_)
    @Js
    def PyJsHoisted_JSXIdentifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', var.get(u'node').get(u'name'))
    PyJsHoisted_JSXIdentifier_.func_name = u'JSXIdentifier'
    var.put(u'JSXIdentifier', PyJsHoisted_JSXIdentifier_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.get(u'exports').put(u'JSXAttribute', var.get(u'JSXAttribute'))
    var.get(u'exports').put(u'JSXIdentifier', var.get(u'JSXIdentifier'))
    var.get(u'exports').put(u'JSXNamespacedName', var.get(u'JSXNamespacedName'))
    var.get(u'exports').put(u'JSXMemberExpression', var.get(u'JSXMemberExpression'))
    var.get(u'exports').put(u'JSXSpreadAttribute', var.get(u'JSXSpreadAttribute'))
    var.get(u'exports').put(u'JSXExpressionContainer', var.get(u'JSXExpressionContainer'))
    var.get(u'exports').put(u'JSXText', var.get(u'JSXText'))
    var.get(u'exports').put(u'JSXElement', var.get(u'JSXElement'))
    var.get(u'exports').put(u'JSXOpeningElement', var.get(u'JSXOpeningElement'))
    var.get(u'exports').put(u'JSXClosingElement', var.get(u'JSXClosingElement'))
    var.get(u'exports').put(u'JSXEmptyExpression', var.get(u'JSXEmptyExpression'))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_471_._set_name(u'anonymous')
PyJs_Object_474_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0)})
@Js
def PyJs_anonymous_475_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'ArrowFunctionExpression', u'_interopRequireWildcard', u'require', u'_babelTypes', u'FunctionExpression', u'module', u't', u'hasTypes', u'_params', u'_method'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_476_ = Js({})
            var.put(u'newObj', PyJs_Object_476_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ArrowFunctionExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'firstParam'])
        if var.get(u'node').get(u'async'):
            var.get(u"this").callprop(u'word', Js(u'async'))
            var.get(u"this").callprop(u'space')
        var.put(u'firstParam', var.get(u'node').get(u'params').get(u'0'))
        if ((PyJsStrictEq(var.get(u'node').get(u'params').get(u'length'),Js(1.0)) and var.get(u't').callprop(u'isIdentifier', var.get(u'firstParam'))) and var.get(u'hasTypes')(var.get(u'node'), var.get(u'firstParam')).neg()):
            var.get(u"this").callprop(u'print', var.get(u'firstParam'), var.get(u'node'))
        else:
            var.get(u"this").callprop(u'_params', var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'=>'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_ArrowFunctionExpression_.func_name = u'ArrowFunctionExpression'
    var.put(u'ArrowFunctionExpression', PyJsHoisted_ArrowFunctionExpression_)
    @Js
    def PyJsHoisted_FunctionExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'async'):
            var.get(u"this").callprop(u'word', Js(u'async'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'function'))
        if var.get(u'node').get(u'generator'):
            var.get(u"this").callprop(u'token', Js(u'*'))
        if var.get(u'node').get(u'id'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        else:
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'_params', var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_FunctionExpression_.func_name = u'FunctionExpression'
    var.put(u'FunctionExpression', PyJsHoisted_FunctionExpression_)
    @Js
    def PyJsHoisted_hasTypes_(node, param, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'param':param}, var)
        var.registers([u'node', u'param'])
        return ((((var.get(u'node').get(u'typeParameters') or var.get(u'node').get(u'returnType')) or var.get(u'param').get(u'typeAnnotation')) or var.get(u'param').get(u'optional')) or var.get(u'param').get(u'trailingComments'))
    PyJsHoisted_hasTypes_.func_name = u'hasTypes'
    var.put(u'hasTypes', PyJsHoisted_hasTypes_)
    @Js
    def PyJsHoisted__params_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'_this'])
        var.put(u'_this', var.get(u"this"))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'typeParameters'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u'('))
        @Js
        def PyJs_iterator_478_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'iterator':PyJs_iterator_478_}, var)
            var.registers([u'node'])
            if var.get(u'node').get(u'optional'):
                var.get(u'_this').callprop(u'token', Js(u'?'))
            var.get(u'_this').callprop(u'print', var.get(u'node').get(u'typeAnnotation'), var.get(u'node'))
        PyJs_iterator_478_._set_name(u'iterator')
        PyJs_Object_477_ = Js({u'iterator':PyJs_iterator_478_})
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'params'), var.get(u'node'), PyJs_Object_477_)
        var.get(u"this").callprop(u'token', Js(u')'))
        if var.get(u'node').get(u'returnType'):
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'returnType'), var.get(u'node'))
    PyJsHoisted__params_.func_name = u'_params'
    var.put(u'_params', PyJsHoisted__params_)
    @Js
    def PyJsHoisted__method_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'kind', u'key'])
        var.put(u'kind', var.get(u'node').get(u'kind'))
        var.put(u'key', var.get(u'node').get(u'key'))
        if (PyJsStrictEq(var.get(u'kind'),Js(u'method')) or PyJsStrictEq(var.get(u'kind'),Js(u'init'))):
            if var.get(u'node').get(u'generator'):
                var.get(u"this").callprop(u'token', Js(u'*'))
        if (PyJsStrictEq(var.get(u'kind'),Js(u'get')) or PyJsStrictEq(var.get(u'kind'),Js(u'set'))):
            var.get(u"this").callprop(u'word', var.get(u'kind'))
            var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'async'):
            var.get(u"this").callprop(u'word', Js(u'async'))
            var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'computed'):
            var.get(u"this").callprop(u'token', Js(u'['))
            var.get(u"this").callprop(u'print', var.get(u'key'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u']'))
        else:
            var.get(u"this").callprop(u'print', var.get(u'key'), var.get(u'node'))
        var.get(u"this").callprop(u'_params', var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted__method_.func_name = u'_method'
    var.put(u'_method', PyJsHoisted__method_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'FunctionDeclaration', var.get(u'undefined'))
    var.get(u'exports').put(u'_params', var.get(u'_params'))
    var.get(u'exports').put(u'_method', var.get(u'_method'))
    var.get(u'exports').put(u'FunctionExpression', var.get(u'FunctionExpression'))
    var.get(u'exports').put(u'ArrowFunctionExpression', var.get(u'ArrowFunctionExpression'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'FunctionDeclaration', var.get(u'FunctionExpression'))
    pass
    pass
PyJs_anonymous_475_._set_name(u'anonymous')
PyJs_Object_479_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_480_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'ExportDeclaration', u'ExportNamespaceSpecifier', u'_interopRequireWildcard', u'ExportDefaultDeclaration', u'ImportDeclaration', u'ExportSpecifier', u'ImportSpecifier', u'_babelTypes', u'require', u'module', u'ImportDefaultSpecifier', u'ExportNamedDeclaration', u't', u'ImportNamespaceSpecifier', u'ExportDefaultSpecifier', u'ExportAllDeclaration'])
    @Js
    def PyJsHoisted_ExportNamespaceSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'*'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'as'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'exported'), var.get(u'node'))
    PyJsHoisted_ExportNamespaceSpecifier_.func_name = u'ExportNamespaceSpecifier'
    var.put(u'ExportNamespaceSpecifier', PyJsHoisted_ExportNamespaceSpecifier_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_481_ = Js({})
            var.put(u'newObj', PyJs_Object_481_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ExportDefaultDeclaration_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'export'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'default'))
        var.get(u"this").callprop(u'space')
        var.get(u'ExportDeclaration').callprop(u'apply', var.get(u"this"), var.get(u'arguments'))
    PyJsHoisted_ExportDefaultDeclaration_.func_name = u'ExportDefaultDeclaration'
    var.put(u'ExportDefaultDeclaration', PyJsHoisted_ExportDefaultDeclaration_)
    @Js
    def PyJsHoisted_ImportDeclaration_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'specifiers', u'first'])
        var.get(u"this").callprop(u'word', Js(u'import'))
        var.get(u"this").callprop(u'space')
        if (PyJsStrictEq(var.get(u'node').get(u'importKind'),Js(u'type')) or PyJsStrictEq(var.get(u'node').get(u'importKind'),Js(u'typeof'))):
            var.get(u"this").callprop(u'word', var.get(u'node').get(u'importKind'))
            var.get(u"this").callprop(u'space')
        var.put(u'specifiers', var.get(u'node').get(u'specifiers').callprop(u'slice', Js(0.0)))
        if (var.get(u'specifiers') and var.get(u'specifiers').get(u'length')):
            while var.get(u'true'):
                var.put(u'first', var.get(u'specifiers').get(u'0'))
                if (var.get(u't').callprop(u'isImportDefaultSpecifier', var.get(u'first')) or var.get(u't').callprop(u'isImportNamespaceSpecifier', var.get(u'first'))):
                    var.get(u"this").callprop(u'print', var.get(u'specifiers').callprop(u'shift'), var.get(u'node'))
                    if var.get(u'specifiers').get(u'length'):
                        var.get(u"this").callprop(u'token', Js(u','))
                        var.get(u"this").callprop(u'space')
                else:
                    break
            if var.get(u'specifiers').get(u'length'):
                var.get(u"this").callprop(u'token', Js(u'{'))
                var.get(u"this").callprop(u'space')
                var.get(u"this").callprop(u'printList', var.get(u'specifiers'), var.get(u'node'))
                var.get(u"this").callprop(u'space')
                var.get(u"this").callprop(u'token', Js(u'}'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'from'))
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'source'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_ImportDeclaration_.func_name = u'ImportDeclaration'
    var.put(u'ImportDeclaration', PyJsHoisted_ImportDeclaration_)
    @Js
    def PyJsHoisted_ExportSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'local'), var.get(u'node'))
        if (var.get(u'node').get(u'exported') and PyJsStrictNeq(var.get(u'node').get(u'local').get(u'name'),var.get(u'node').get(u'exported').get(u'name'))):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'as'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'exported'), var.get(u'node'))
    PyJsHoisted_ExportSpecifier_.func_name = u'ExportSpecifier'
    var.put(u'ExportSpecifier', PyJsHoisted_ExportSpecifier_)
    @Js
    def PyJsHoisted_ImportSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'imported'), var.get(u'node'))
        if (var.get(u'node').get(u'local') and PyJsStrictNeq(var.get(u'node').get(u'local').get(u'name'),var.get(u'node').get(u'imported').get(u'name'))):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'as'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'local'), var.get(u'node'))
    PyJsHoisted_ImportSpecifier_.func_name = u'ImportSpecifier'
    var.put(u'ImportSpecifier', PyJsHoisted_ImportSpecifier_)
    @Js
    def PyJsHoisted_ExportDeclaration_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'specifiers', u'declar', u'first', u'hasSpecial'])
        if var.get(u'node').get(u'declaration'):
            var.put(u'declar', var.get(u'node').get(u'declaration'))
            var.get(u"this").callprop(u'print', var.get(u'declar'), var.get(u'node'))
            if var.get(u't').callprop(u'isStatement', var.get(u'declar')).neg():
                var.get(u"this").callprop(u'semicolon')
        else:
            if PyJsStrictEq(var.get(u'node').get(u'exportKind'),Js(u'type')):
                var.get(u"this").callprop(u'word', Js(u'type'))
                var.get(u"this").callprop(u'space')
            var.put(u'specifiers', var.get(u'node').get(u'specifiers').callprop(u'slice', Js(0.0)))
            var.put(u'hasSpecial', Js(False))
            while var.get(u'true'):
                var.put(u'first', var.get(u'specifiers').get(u'0'))
                if (var.get(u't').callprop(u'isExportDefaultSpecifier', var.get(u'first')) or var.get(u't').callprop(u'isExportNamespaceSpecifier', var.get(u'first'))):
                    var.put(u'hasSpecial', var.get(u'true'))
                    var.get(u"this").callprop(u'print', var.get(u'specifiers').callprop(u'shift'), var.get(u'node'))
                    if var.get(u'specifiers').get(u'length'):
                        var.get(u"this").callprop(u'token', Js(u','))
                        var.get(u"this").callprop(u'space')
                else:
                    break
            if (var.get(u'specifiers').get(u'length') or (var.get(u'specifiers').get(u'length').neg() and var.get(u'hasSpecial').neg())):
                var.get(u"this").callprop(u'token', Js(u'{'))
                if var.get(u'specifiers').get(u'length'):
                    var.get(u"this").callprop(u'space')
                    var.get(u"this").callprop(u'printList', var.get(u'specifiers'), var.get(u'node'))
                    var.get(u"this").callprop(u'space')
                var.get(u"this").callprop(u'token', Js(u'}'))
            if var.get(u'node').get(u'source'):
                var.get(u"this").callprop(u'space')
                var.get(u"this").callprop(u'word', Js(u'from'))
                var.get(u"this").callprop(u'space')
                var.get(u"this").callprop(u'print', var.get(u'node').get(u'source'), var.get(u'node'))
            var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_ExportDeclaration_.func_name = u'ExportDeclaration'
    var.put(u'ExportDeclaration', PyJsHoisted_ExportDeclaration_)
    @Js
    def PyJsHoisted_ImportDefaultSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'local'), var.get(u'node'))
    PyJsHoisted_ImportDefaultSpecifier_.func_name = u'ImportDefaultSpecifier'
    var.put(u'ImportDefaultSpecifier', PyJsHoisted_ImportDefaultSpecifier_)
    @Js
    def PyJsHoisted_ExportNamedDeclaration_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'export'))
        var.get(u"this").callprop(u'space')
        var.get(u'ExportDeclaration').callprop(u'apply', var.get(u"this"), var.get(u'arguments'))
    PyJsHoisted_ExportNamedDeclaration_.func_name = u'ExportNamedDeclaration'
    var.put(u'ExportNamedDeclaration', PyJsHoisted_ExportNamedDeclaration_)
    @Js
    def PyJsHoisted_ExportAllDeclaration_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'export'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'*'))
        if var.get(u'node').get(u'exported'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'as'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'exported'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'from'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'source'), var.get(u'node'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_ExportAllDeclaration_.func_name = u'ExportAllDeclaration'
    var.put(u'ExportAllDeclaration', PyJsHoisted_ExportAllDeclaration_)
    @Js
    def PyJsHoisted_ImportNamespaceSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'*'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'as'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'local'), var.get(u'node'))
    PyJsHoisted_ImportNamespaceSpecifier_.func_name = u'ImportNamespaceSpecifier'
    var.put(u'ImportNamespaceSpecifier', PyJsHoisted_ImportNamespaceSpecifier_)
    @Js
    def PyJsHoisted_ExportDefaultSpecifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'exported'), var.get(u'node'))
    PyJsHoisted_ExportDefaultSpecifier_.func_name = u'ExportDefaultSpecifier'
    var.put(u'ExportDefaultSpecifier', PyJsHoisted_ExportDefaultSpecifier_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'ImportSpecifier', var.get(u'ImportSpecifier'))
    var.get(u'exports').put(u'ImportDefaultSpecifier', var.get(u'ImportDefaultSpecifier'))
    var.get(u'exports').put(u'ExportDefaultSpecifier', var.get(u'ExportDefaultSpecifier'))
    var.get(u'exports').put(u'ExportSpecifier', var.get(u'ExportSpecifier'))
    var.get(u'exports').put(u'ExportNamespaceSpecifier', var.get(u'ExportNamespaceSpecifier'))
    var.get(u'exports').put(u'ExportAllDeclaration', var.get(u'ExportAllDeclaration'))
    var.get(u'exports').put(u'ExportNamedDeclaration', var.get(u'ExportNamedDeclaration'))
    var.get(u'exports').put(u'ExportDefaultDeclaration', var.get(u'ExportDefaultDeclaration'))
    var.get(u'exports').put(u'ImportDeclaration', var.get(u'ImportDeclaration'))
    var.get(u'exports').put(u'ImportNamespaceSpecifier', var.get(u'ImportNamespaceSpecifier'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_480_._set_name(u'anonymous')
PyJs_Object_482_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_483_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'ForOfStatement', u'LabeledStatement', u'ForAwaitStatement', u'module', u'DebuggerStatement', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'VariableDeclaration', u'ForStatement', u'getLastStatement', u'ContinueStatement', u'DoWhileStatement', u'SwitchStatement', u'CatchClause', u'buildLabelStatement', u'BreakStatement', u'buildForXStatement', u'exports', u'_interopRequireWildcard', u'_babelTypes', u'TryStatement', u'ForInStatement', u'SwitchCase', u'constDeclarationIdent', u'ThrowStatement', u'WithStatement', u'WhileStatement', u'variableDeclarationIdent', u't', u'ReturnStatement', u'VariableDeclarator', u'require', u'IfStatement'])
    @Js
    def PyJsHoisted_ForStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'for'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        (var.get(u"this").put(u'inForStatementInitCounter',Js(var.get(u"this").get(u'inForStatementInitCounter').to_number())+Js(1))-Js(1))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'init'), var.get(u'node'))
        (var.get(u"this").put(u'inForStatementInitCounter',Js(var.get(u"this").get(u'inForStatementInitCounter').to_number())-Js(1))+Js(1))
        var.get(u"this").callprop(u'token', Js(u';'))
        if var.get(u'node').get(u'test'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u';'))
        if var.get(u'node').get(u'update'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'update'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'printBlock', var.get(u'node'))
    PyJsHoisted_ForStatement_.func_name = u'ForStatement'
    var.put(u'ForStatement', PyJsHoisted_ForStatement_)
    @Js
    def PyJsHoisted_constDeclarationIdent_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'i'])
        var.get(u"this").callprop(u'token', Js(u','))
        var.get(u"this").callprop(u'newline')
        if var.get(u"this").callprop(u'endsWith', Js(u'\n')):
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<Js(6.0)):
                try:
                    var.get(u"this").callprop(u'space', var.get(u'true'))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
    PyJsHoisted_constDeclarationIdent_.func_name = u'constDeclarationIdent'
    var.put(u'constDeclarationIdent', PyJsHoisted_constDeclarationIdent_)
    @Js
    def PyJsHoisted_getLastStatement_(statement, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'statement':statement}, var)
        var.registers([u'statement'])
        if var.get(u't').callprop(u'isStatement', var.get(u'statement').get(u'body')).neg():
            return var.get(u'statement')
        return var.get(u'getLastStatement')(var.get(u'statement').get(u'body'))
    PyJsHoisted_getLastStatement_.func_name = u'getLastStatement'
    var.put(u'getLastStatement', PyJsHoisted_getLastStatement_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_484_ = Js({})
            var.put(u'newObj', PyJs_Object_484_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_DoWhileStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'do'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'word', Js(u'while'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_DoWhileStatement_.func_name = u'DoWhileStatement'
    var.put(u'DoWhileStatement', PyJsHoisted_DoWhileStatement_)
    @Js
    def PyJsHoisted_WithStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'with'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'object'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'printBlock', var.get(u'node'))
    PyJsHoisted_WithStatement_.func_name = u'WithStatement'
    var.put(u'WithStatement', PyJsHoisted_WithStatement_)
    @Js
    def PyJsHoisted_WhileStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'while'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'printBlock', var.get(u'node'))
    PyJsHoisted_WhileStatement_.func_name = u'WhileStatement'
    var.put(u'WhileStatement', PyJsHoisted_WhileStatement_)
    @Js
    def PyJsHoisted_CatchClause_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'catch'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'param'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_CatchClause_.func_name = u'CatchClause'
    var.put(u'CatchClause', PyJsHoisted_CatchClause_)
    @Js
    def PyJsHoisted_buildLabelStatement_(prefix, this, arguments, var=var):
        var = Scope({u'this':this, u'prefix':prefix, u'arguments':arguments}, var)
        var.registers([u'prefix', u'key'])
        var.put(u'key', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else Js(u'label')))
        @Js
        def PyJs_anonymous_488_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
            var.registers([u'node', u'terminatorState', u'label'])
            var.get(u"this").callprop(u'word', var.get(u'prefix'))
            var.put(u'label', var.get(u'node').get(var.get(u'key')))
            if var.get(u'label'):
                var.get(u"this").callprop(u'space')
                var.put(u'terminatorState', var.get(u"this").callprop(u'startTerminatorless'))
                var.get(u"this").callprop(u'print', var.get(u'label'), var.get(u'node'))
                var.get(u"this").callprop(u'endTerminatorless', var.get(u'terminatorState'))
            var.get(u"this").callprop(u'semicolon')
        PyJs_anonymous_488_._set_name(u'anonymous')
        return PyJs_anonymous_488_
    PyJsHoisted_buildLabelStatement_.func_name = u'buildLabelStatement'
    var.put(u'buildLabelStatement', PyJsHoisted_buildLabelStatement_)
    @Js
    def PyJsHoisted_TryStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'try'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'block'), var.get(u'node'))
        var.get(u"this").callprop(u'space')
        if var.get(u'node').get(u'handlers'):
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'handlers').get(u'0'), var.get(u'node'))
        else:
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'handler'), var.get(u'node'))
        if var.get(u'node').get(u'finalizer'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'finally'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'finalizer'), var.get(u'node'))
    PyJsHoisted_TryStatement_.func_name = u'TryStatement'
    var.put(u'TryStatement', PyJsHoisted_TryStatement_)
    @Js
    def PyJsHoisted_DebuggerStatement_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'debugger'))
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_DebuggerStatement_.func_name = u'DebuggerStatement'
    var.put(u'DebuggerStatement', PyJsHoisted_DebuggerStatement_)
    @Js
    def PyJsHoisted_SwitchStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', Js(u'switch'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'discriminant'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'{'))
        @Js
        def PyJs_addNewlines_490_(leading, cas, this, arguments, var=var):
            var = Scope({u'cas':cas, u'leading':leading, u'this':this, u'arguments':arguments, u'addNewlines':PyJs_addNewlines_490_}, var)
            var.registers([u'cas', u'leading'])
            if (var.get(u'leading').neg() and PyJsStrictEq(var.get(u'node').get(u'cases').get((var.get(u'node').get(u'cases').get(u'length')-Js(1.0))),var.get(u'cas'))):
                return (-Js(1.0))
        PyJs_addNewlines_490_._set_name(u'addNewlines')
        PyJs_Object_489_ = Js({u'indent':var.get(u'true'),u'addNewlines':PyJs_addNewlines_490_})
        var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'cases'), var.get(u'node'), PyJs_Object_489_)
        var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_SwitchStatement_.func_name = u'SwitchStatement'
    var.put(u'SwitchStatement', PyJsHoisted_SwitchStatement_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_485_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_485_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_variableDeclarationIdent_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'i'])
        var.get(u"this").callprop(u'token', Js(u','))
        var.get(u"this").callprop(u'newline')
        if var.get(u"this").callprop(u'endsWith', Js(u'\n')):
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<Js(4.0)):
                try:
                    var.get(u"this").callprop(u'space', var.get(u'true'))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
    PyJsHoisted_variableDeclarationIdent_.func_name = u'variableDeclarationIdent'
    var.put(u'variableDeclarationIdent', PyJsHoisted_variableDeclarationIdent_)
    @Js
    def PyJsHoisted_LabeledStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'label'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'body'), var.get(u'node'))
    PyJsHoisted_LabeledStatement_.func_name = u'LabeledStatement'
    var.put(u'LabeledStatement', PyJsHoisted_LabeledStatement_)
    @Js
    def PyJsHoisted_VariableDeclaration_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'hasInits', u'_isArray', u'_iterator', u'parent', u'declar', u'separator', u'_i', u'_ref'])
        var.get(u"this").callprop(u'word', var.get(u'node').get(u'kind'))
        var.get(u"this").callprop(u'space')
        var.put(u'hasInits', Js(False))
        if var.get(u't').callprop(u'isFor', var.get(u'parent')).neg():
            #for JS loop
            var.put(u'_iterator', var.get(u'node').get(u'declarations'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'declar', var.get(u'_ref'))
                if var.get(u'declar').get(u'init'):
                    var.put(u'hasInits', var.get(u'true'))
            
        var.put(u'separator', PyJsComma(Js(0.0), Js(None)))
        if var.get(u'hasInits'):
            var.put(u'separator', (var.get(u'constDeclarationIdent') if PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'const')) else var.get(u'variableDeclarationIdent')))
        PyJs_Object_492_ = Js({u'separator':var.get(u'separator')})
        var.get(u"this").callprop(u'printList', var.get(u'node').get(u'declarations'), var.get(u'node'), PyJs_Object_492_)
        if var.get(u't').callprop(u'isFor', var.get(u'parent')):
            if (PyJsStrictEq(var.get(u'parent').get(u'left'),var.get(u'node')) or PyJsStrictEq(var.get(u'parent').get(u'init'),var.get(u'node'))):
                return var.get('undefined')
        var.get(u"this").callprop(u'semicolon')
    PyJsHoisted_VariableDeclaration_.func_name = u'VariableDeclaration'
    var.put(u'VariableDeclaration', PyJsHoisted_VariableDeclaration_)
    @Js
    def PyJsHoisted_SwitchCase_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'test'):
            var.get(u"this").callprop(u'word', Js(u'case'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u':'))
        else:
            var.get(u"this").callprop(u'word', Js(u'default'))
            var.get(u"this").callprop(u'token', Js(u':'))
        if var.get(u'node').get(u'consequent').get(u'length'):
            var.get(u"this").callprop(u'newline')
            PyJs_Object_491_ = Js({u'indent':var.get(u'true')})
            var.get(u"this").callprop(u'printSequence', var.get(u'node').get(u'consequent'), var.get(u'node'), PyJs_Object_491_)
    PyJsHoisted_SwitchCase_.func_name = u'SwitchCase'
    var.put(u'SwitchCase', PyJsHoisted_SwitchCase_)
    @Js
    def PyJsHoisted_VariableDeclarator_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'id').get(u'typeAnnotation'), var.get(u'node'))
        if var.get(u'node').get(u'init'):
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'token', Js(u'='))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'init'), var.get(u'node'))
    PyJsHoisted_VariableDeclarator_.func_name = u'VariableDeclarator'
    var.put(u'VariableDeclarator', PyJsHoisted_VariableDeclarator_)
    @Js
    def PyJsHoisted_IfStatement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'needsBlock'])
        var.get(u"this").callprop(u'word', Js(u'if'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'('))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'test'), var.get(u'node'))
        var.get(u"this").callprop(u'token', Js(u')'))
        var.get(u"this").callprop(u'space')
        var.put(u'needsBlock', (var.get(u'node').get(u'alternate') and var.get(u't').callprop(u'isIfStatement', var.get(u'getLastStatement')(var.get(u'node').get(u'consequent')))))
        if var.get(u'needsBlock'):
            var.get(u"this").callprop(u'token', Js(u'{'))
            var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'indent')
        var.get(u"this").callprop(u'printAndIndentOnComments', var.get(u'node').get(u'consequent'), var.get(u'node'))
        if var.get(u'needsBlock'):
            var.get(u"this").callprop(u'dedent')
            var.get(u"this").callprop(u'newline')
            var.get(u"this").callprop(u'token', Js(u'}'))
        if var.get(u'node').get(u'alternate'):
            if var.get(u"this").callprop(u'endsWith', Js(u'}')):
                var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', Js(u'else'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'printAndIndentOnComments', var.get(u'node').get(u'alternate'), var.get(u'node'))
    PyJsHoisted_IfStatement_.func_name = u'IfStatement'
    var.put(u'IfStatement', PyJsHoisted_IfStatement_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'ThrowStatement', var.get(u'exports').put(u'BreakStatement', var.get(u'exports').put(u'ReturnStatement', var.get(u'exports').put(u'ContinueStatement', var.get(u'exports').put(u'ForAwaitStatement', var.get(u'exports').put(u'ForOfStatement', var.get(u'exports').put(u'ForInStatement', var.get(u'undefined'))))))))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.get(u'exports').put(u'WithStatement', var.get(u'WithStatement'))
    var.get(u'exports').put(u'IfStatement', var.get(u'IfStatement'))
    var.get(u'exports').put(u'ForStatement', var.get(u'ForStatement'))
    var.get(u'exports').put(u'WhileStatement', var.get(u'WhileStatement'))
    var.get(u'exports').put(u'DoWhileStatement', var.get(u'DoWhileStatement'))
    var.get(u'exports').put(u'LabeledStatement', var.get(u'LabeledStatement'))
    var.get(u'exports').put(u'TryStatement', var.get(u'TryStatement'))
    var.get(u'exports').put(u'CatchClause', var.get(u'CatchClause'))
    var.get(u'exports').put(u'SwitchStatement', var.get(u'SwitchStatement'))
    var.get(u'exports').put(u'SwitchCase', var.get(u'SwitchCase'))
    var.get(u'exports').put(u'DebuggerStatement', var.get(u'DebuggerStatement'))
    var.get(u'exports').put(u'VariableDeclaration', var.get(u'VariableDeclaration'))
    var.get(u'exports').put(u'VariableDeclarator', var.get(u'VariableDeclarator'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    @Js
    def PyJs_buildForXStatement_486_(op, this, arguments, var=var):
        var = Scope({u'this':this, u'buildForXStatement':PyJs_buildForXStatement_486_, u'arguments':arguments, u'op':op}, var)
        var.registers([u'op'])
        @Js
        def PyJs_anonymous_487_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
            var.registers([u'node'])
            var.get(u"this").callprop(u'word', Js(u'for'))
            var.get(u"this").callprop(u'space')
            if PyJsStrictEq(var.get(u'op'),Js(u'await')):
                var.get(u"this").callprop(u'word', Js(u'await'))
                var.get(u"this").callprop(u'space')
                var.put(u'op', Js(u'of'))
            var.get(u"this").callprop(u'token', Js(u'('))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'left'), var.get(u'node'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'word', var.get(u'op'))
            var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'right'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u')'))
            var.get(u"this").callprop(u'printBlock', var.get(u'node'))
        PyJs_anonymous_487_._set_name(u'anonymous')
        return PyJs_anonymous_487_
    PyJs_buildForXStatement_486_._set_name(u'buildForXStatement')
    var.put(u'buildForXStatement', PyJs_buildForXStatement_486_)
    var.put(u'ForInStatement', var.get(u'exports').put(u'ForInStatement', var.get(u'buildForXStatement')(Js(u'in'))))
    var.put(u'ForOfStatement', var.get(u'exports').put(u'ForOfStatement', var.get(u'buildForXStatement')(Js(u'of'))))
    var.put(u'ForAwaitStatement', var.get(u'exports').put(u'ForAwaitStatement', var.get(u'buildForXStatement')(Js(u'await'))))
    pass
    pass
    var.put(u'ContinueStatement', var.get(u'exports').put(u'ContinueStatement', var.get(u'buildLabelStatement')(Js(u'continue'))))
    var.put(u'ReturnStatement', var.get(u'exports').put(u'ReturnStatement', var.get(u'buildLabelStatement')(Js(u'return'), Js(u'argument'))))
    var.put(u'BreakStatement', var.get(u'exports').put(u'BreakStatement', var.get(u'buildLabelStatement')(Js(u'break'))))
    var.put(u'ThrowStatement', var.get(u'exports').put(u'ThrowStatement', var.get(u'buildLabelStatement')(Js(u'throw'), Js(u'argument'))))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_483_._set_name(u'anonymous')
PyJs_Object_493_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_494_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'module', u'TaggedTemplateExpression', u'TemplateElement', u'TemplateLiteral'])
    @Js
    def PyJsHoisted_TemplateElement_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'value', u'parent', u'isFirst', u'isLast'])
        var.put(u'isFirst', PyJsStrictEq(var.get(u'parent').get(u'quasis').get(u'0'),var.get(u'node')))
        var.put(u'isLast', PyJsStrictEq(var.get(u'parent').get(u'quasis').get((var.get(u'parent').get(u'quasis').get(u'length')-Js(1.0))),var.get(u'node')))
        var.put(u'value', (((Js(u'`') if var.get(u'isFirst') else Js(u'}'))+var.get(u'node').get(u'value').get(u'raw'))+(Js(u'`') if var.get(u'isLast') else Js(u'${'))))
        if var.get(u'isFirst').neg():
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', var.get(u'value'))
        if var.get(u'isLast').neg():
            var.get(u"this").callprop(u'space')
    PyJsHoisted_TemplateElement_.func_name = u'TemplateElement'
    var.put(u'TemplateElement', PyJsHoisted_TemplateElement_)
    @Js
    def PyJsHoisted_TaggedTemplateExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'tag'), var.get(u'node'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'quasi'), var.get(u'node'))
    PyJsHoisted_TaggedTemplateExpression_.func_name = u'TaggedTemplateExpression'
    var.put(u'TaggedTemplateExpression', PyJsHoisted_TaggedTemplateExpression_)
    @Js
    def PyJsHoisted_TemplateLiteral_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'quasis', u'i', u'node'])
        var.put(u'quasis', var.get(u'node').get(u'quasis'))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'quasis').get(u'length')):
            try:
                var.get(u"this").callprop(u'print', var.get(u'quasis').get(var.get(u'i')), var.get(u'node'))
                if ((var.get(u'i')+Js(1.0))<var.get(u'quasis').get(u'length')):
                    var.get(u"this").callprop(u'print', var.get(u'node').get(u'expressions').get(var.get(u'i')), var.get(u'node'))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
    PyJsHoisted_TemplateLiteral_.func_name = u'TemplateLiteral'
    var.put(u'TemplateLiteral', PyJsHoisted_TemplateLiteral_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'TaggedTemplateExpression', var.get(u'TaggedTemplateExpression'))
    var.get(u'exports').put(u'TemplateElement', var.get(u'TemplateElement'))
    var.get(u'exports').put(u'TemplateLiteral', var.get(u'TemplateLiteral'))
    pass
    pass
    pass
PyJs_anonymous_494_._set_name(u'anonymous')
PyJs_Object_495_ = Js({})
@Js
def PyJs_anonymous_496_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'NumericLiteral', u'exports', u'ObjectMethod', u'module', u'_jsesc2', u'_interopRequireWildcard', u'RestElement', u'require', u'_babelTypes', u'ObjectProperty', u'StringLiteral', u'ArrayExpression', u'BooleanLiteral', u'RegExpLiteral', u'ObjectExpression', u't', u'_jsesc', u'_interopRequireDefault', u'Identifier', u'NullLiteral'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_498_ = Js({})
            var.put(u'newObj', PyJs_Object_498_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ObjectMethod_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'decorators'), var.get(u'node'))
        var.get(u"this").callprop(u'_method', var.get(u'node'))
    PyJsHoisted_ObjectMethod_.func_name = u'ObjectMethod'
    var.put(u'ObjectMethod', PyJsHoisted_ObjectMethod_)
    @Js
    def PyJsHoisted_RestElement_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'token', Js(u'...'))
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'argument'), var.get(u'node'))
    PyJsHoisted_RestElement_.func_name = u'RestElement'
    var.put(u'RestElement', PyJsHoisted_RestElement_)
    @Js
    def PyJsHoisted_ObjectProperty_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'printJoin', var.get(u'node').get(u'decorators'), var.get(u'node'))
        if var.get(u'node').get(u'computed'):
            var.get(u"this").callprop(u'token', Js(u'['))
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
            var.get(u"this").callprop(u'token', Js(u']'))
        else:
            if ((var.get(u't').callprop(u'isAssignmentPattern', var.get(u'node').get(u'value')) and var.get(u't').callprop(u'isIdentifier', var.get(u'node').get(u'key'))) and PyJsStrictEq(var.get(u'node').get(u'key').get(u'name'),var.get(u'node').get(u'value').get(u'left').get(u'name'))):
                var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
                return var.get('undefined')
            var.get(u"this").callprop(u'print', var.get(u'node').get(u'key'), var.get(u'node'))
            if (((var.get(u'node').get(u'shorthand') and var.get(u't').callprop(u'isIdentifier', var.get(u'node').get(u'key'))) and var.get(u't').callprop(u'isIdentifier', var.get(u'node').get(u'value'))) and PyJsStrictEq(var.get(u'node').get(u'key').get(u'name'),var.get(u'node').get(u'value').get(u'name'))):
                return var.get('undefined')
        var.get(u"this").callprop(u'token', Js(u':'))
        var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'print', var.get(u'node').get(u'value'), var.get(u'node'))
    PyJsHoisted_ObjectProperty_.func_name = u'ObjectProperty'
    var.put(u'ObjectProperty', PyJsHoisted_ObjectProperty_)
    @Js
    def PyJsHoisted_StringLiteral_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'raw', u'parent', u'val'])
        var.put(u'raw', var.get(u"this").callprop(u'getPossibleRaw', var.get(u'node')))
        if (var.get(u'raw')!=var.get(u"null")):
            var.get(u"this").callprop(u'token', var.get(u'raw'))
            return var.get('undefined')
        PyJs_Object_500_ = Js({u'quotes':(Js(u'double') if var.get(u't').callprop(u'isJSX', var.get(u'parent')) else var.get(u"this").get(u'format').get(u'quotes')),u'wrap':var.get(u'true')})
        var.put(u'val', PyJsComma(Js(0.0),var.get(u'_jsesc2').get(u'default'))(var.get(u'node').get(u'value'), PyJs_Object_500_))
        return var.get(u"this").callprop(u'token', var.get(u'val'))
    PyJsHoisted_StringLiteral_.func_name = u'StringLiteral'
    var.put(u'StringLiteral', PyJsHoisted_StringLiteral_)
    @Js
    def PyJsHoisted_ArrayExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'i', u'node', u'elems', u'len', u'elem'])
        var.put(u'elems', var.get(u'node').get(u'elements'))
        var.put(u'len', var.get(u'elems').get(u'length'))
        var.get(u"this").callprop(u'token', Js(u'['))
        var.get(u"this").callprop(u'printInnerComments', var.get(u'node'))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'elems').get(u'length')):
            try:
                var.put(u'elem', var.get(u'elems').get(var.get(u'i')))
                if var.get(u'elem'):
                    if (var.get(u'i')>Js(0.0)):
                        var.get(u"this").callprop(u'space')
                    var.get(u"this").callprop(u'print', var.get(u'elem'), var.get(u'node'))
                    if (var.get(u'i')<(var.get(u'len')-Js(1.0))):
                        var.get(u"this").callprop(u'token', Js(u','))
                else:
                    var.get(u"this").callprop(u'token', Js(u','))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        var.get(u"this").callprop(u'token', Js(u']'))
    PyJsHoisted_ArrayExpression_.func_name = u'ArrayExpression'
    var.put(u'ArrayExpression', PyJsHoisted_ArrayExpression_)
    @Js
    def PyJsHoisted_BooleanLiteral_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', (Js(u'true') if var.get(u'node').get(u'value') else Js(u'false')))
    PyJsHoisted_BooleanLiteral_.func_name = u'BooleanLiteral'
    var.put(u'BooleanLiteral', PyJsHoisted_BooleanLiteral_)
    @Js
    def PyJsHoisted_NumericLiteral_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'raw'])
        var.put(u'raw', var.get(u"this").callprop(u'getPossibleRaw', var.get(u'node')))
        var.get(u"this").callprop(u'number', ((var.get(u'node').get(u'value')+Js(u'')) if (var.get(u'raw')==var.get(u"null")) else var.get(u'raw')))
    PyJsHoisted_NumericLiteral_.func_name = u'NumericLiteral'
    var.put(u'NumericLiteral', PyJsHoisted_NumericLiteral_)
    @Js
    def PyJsHoisted_ObjectExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'props'])
        var.put(u'props', var.get(u'node').get(u'properties'))
        var.get(u"this").callprop(u'token', Js(u'{'))
        var.get(u"this").callprop(u'printInnerComments', var.get(u'node'))
        if var.get(u'props').get(u'length'):
            var.get(u"this").callprop(u'space')
            PyJs_Object_499_ = Js({u'indent':var.get(u'true'),u'statement':var.get(u'true')})
            var.get(u"this").callprop(u'printList', var.get(u'props'), var.get(u'node'), PyJs_Object_499_)
            var.get(u"this").callprop(u'space')
        var.get(u"this").callprop(u'token', Js(u'}'))
    PyJsHoisted_ObjectExpression_.func_name = u'ObjectExpression'
    var.put(u'ObjectExpression', PyJsHoisted_ObjectExpression_)
    @Js
    def PyJsHoisted_RegExpLiteral_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        var.get(u"this").callprop(u'word', (((Js(u'/')+var.get(u'node').get(u'pattern'))+Js(u'/'))+var.get(u'node').get(u'flags')))
    PyJsHoisted_RegExpLiteral_.func_name = u'RegExpLiteral'
    var.put(u'RegExpLiteral', PyJsHoisted_RegExpLiteral_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_497_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_497_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_Identifier_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u'node').get(u'variance'):
            if PyJsStrictEq(var.get(u'node').get(u'variance'),Js(u'plus')):
                var.get(u"this").callprop(u'token', Js(u'+'))
            else:
                if PyJsStrictEq(var.get(u'node').get(u'variance'),Js(u'minus')):
                    var.get(u"this").callprop(u'token', Js(u'-'))
        var.get(u"this").callprop(u'word', var.get(u'node').get(u'name'))
    PyJsHoisted_Identifier_.func_name = u'Identifier'
    var.put(u'Identifier', PyJsHoisted_Identifier_)
    @Js
    def PyJsHoisted_NullLiteral_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'word', Js(u'null'))
    PyJsHoisted_NullLiteral_.func_name = u'NullLiteral'
    var.put(u'NullLiteral', PyJsHoisted_NullLiteral_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'ArrayPattern', var.get(u'exports').put(u'ObjectPattern', var.get(u'exports').put(u'RestProperty', var.get(u'exports').put(u'SpreadProperty', var.get(u'exports').put(u'SpreadElement', var.get(u'undefined'))))))
    var.get(u'exports').put(u'Identifier', var.get(u'Identifier'))
    var.get(u'exports').put(u'RestElement', var.get(u'RestElement'))
    var.get(u'exports').put(u'ObjectExpression', var.get(u'ObjectExpression'))
    var.get(u'exports').put(u'ObjectMethod', var.get(u'ObjectMethod'))
    var.get(u'exports').put(u'ObjectProperty', var.get(u'ObjectProperty'))
    var.get(u'exports').put(u'ArrayExpression', var.get(u'ArrayExpression'))
    var.get(u'exports').put(u'RegExpLiteral', var.get(u'RegExpLiteral'))
    var.get(u'exports').put(u'BooleanLiteral', var.get(u'BooleanLiteral'))
    var.get(u'exports').put(u'NullLiteral', var.get(u'NullLiteral'))
    var.get(u'exports').put(u'NumericLiteral', var.get(u'NumericLiteral'))
    var.get(u'exports').put(u'StringLiteral', var.get(u'StringLiteral'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    var.put(u'_jsesc', var.get(u'require')(Js(u'jsesc')))
    var.put(u'_jsesc2', var.get(u'_interopRequireDefault')(var.get(u'_jsesc')))
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'SpreadElement', var.get(u'RestElement'))
    var.get(u'exports').put(u'SpreadProperty', var.get(u'RestElement'))
    var.get(u'exports').put(u'RestProperty', var.get(u'RestElement'))
    pass
    var.get(u'exports').put(u'ObjectPattern', var.get(u'ObjectExpression'))
    pass
    pass
    pass
    var.get(u'exports').put(u'ArrayPattern', var.get(u'ArrayExpression'))
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_496_._set_name(u'anonymous')
PyJs_Object_501_ = Js({u'babel-types':Js(258.0),u'jsesc':Js(283.0)})
@Js
def PyJs_anonymous_502_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'Generator', u'_sourceMap', u'_detectIndent2', u'module', u'_interopRequireDefault', u'_printer2', u'normalizeOptions', u'findCommonStringDelimiter', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'_classCallCheck3', u'_classCallCheck2', u'_detectIndent', u'_babelMessages', u'exports', u'_printer', u'_interopRequireWildcard', u'_inherits3', u'_inherits2', u'require', u'CodeGenerator', u'messages', u'_sourceMap2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_505_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_505_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_findCommonStringDelimiter_(code, tokens, this, arguments, var=var):
        var = Scope({u'tokens':tokens, u'this':this, u'code':code, u'arguments':arguments}, var)
        var.registers([u'code', u'checked', u'i', u'tokens', u'raw', u'token', u'DEFAULT_STRING_DELIMITER', u'occurences'])
        var.put(u'DEFAULT_STRING_DELIMITER', Js(u'double'))
        if var.get(u'code').neg():
            return var.get(u'DEFAULT_STRING_DELIMITER')
        PyJs_Object_513_ = Js({u'single':Js(0.0),u'double':Js(0.0)})
        var.put(u'occurences', PyJs_Object_513_)
        var.put(u'checked', Js(0.0))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'tokens').get(u'length')):
            try:
                var.put(u'token', var.get(u'tokens').get(var.get(u'i')))
                if PyJsStrictNeq(var.get(u'token').get(u'type').get(u'label'),Js(u'string')):
                    continue
                var.put(u'raw', var.get(u'code').callprop(u'slice', var.get(u'token').get(u'start'), var.get(u'token').get(u'end')))
                if PyJsStrictEq(var.get(u'raw').get(u'0'),Js(u"'")):
                    (var.get(u'occurences').put(u'single',Js(var.get(u'occurences').get(u'single').to_number())+Js(1))-Js(1))
                else:
                    (var.get(u'occurences').put(u'double',Js(var.get(u'occurences').get(u'double').to_number())+Js(1))-Js(1))
                (var.put(u'checked',Js(var.get(u'checked').to_number())+Js(1))-Js(1))
                if (var.get(u'checked')>=Js(3.0)):
                    break
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        if (var.get(u'occurences').get(u'single')>var.get(u'occurences').get(u'double')):
            return Js(u'single')
        else:
            return Js(u'double')
    PyJsHoisted_findCommonStringDelimiter_.func_name = u'findCommonStringDelimiter'
    var.put(u'findCommonStringDelimiter', PyJsHoisted_findCommonStringDelimiter_)
    @Js
    def PyJsHoisted_normalizeOptions_(code, opts, tokens, this, arguments, var=var):
        var = Scope({u'tokens':tokens, u'this':this, u'code':code, u'arguments':arguments, u'opts':opts}, var)
        var.registers([u'style', u'code', u'indent', u'format', u'tokens', u'opts'])
        var.put(u'style', Js(u'  '))
        if (var.get(u'code') and PyJsStrictEq(var.get(u'code',throw=False).typeof(),Js(u'string'))):
            var.put(u'indent', PyJsComma(Js(0.0),var.get(u'_detectIndent2').get(u'default'))(var.get(u'code')).get(u'indent'))
            if (var.get(u'indent') and PyJsStrictNeq(var.get(u'indent'),Js(u' '))):
                var.put(u'style', var.get(u'indent'))
        PyJs_Object_510_ = Js({u'adjustMultilineComment':var.get(u'true'),u'style':var.get(u'style'),u'base':Js(0.0)})
        PyJs_Object_509_ = Js({u'auxiliaryCommentBefore':var.get(u'opts').get(u'auxiliaryCommentBefore'),u'auxiliaryCommentAfter':var.get(u'opts').get(u'auxiliaryCommentAfter'),u'shouldPrintComment':var.get(u'opts').get(u'shouldPrintComment'),u'retainLines':var.get(u'opts').get(u'retainLines'),u'retainFunctionParens':var.get(u'opts').get(u'retainFunctionParens'),u'comments':((var.get(u'opts').get(u'comments')==var.get(u"null")) or var.get(u'opts').get(u'comments')),u'compact':var.get(u'opts').get(u'compact'),u'minified':var.get(u'opts').get(u'minified'),u'concise':var.get(u'opts').get(u'concise'),u'quotes':(var.get(u'opts').get(u'quotes') or var.get(u'findCommonStringDelimiter')(var.get(u'code'), var.get(u'tokens'))),u'indent':PyJs_Object_510_})
        var.put(u'format', PyJs_Object_509_)
        if var.get(u'format').get(u'minified'):
            var.get(u'format').put(u'compact', var.get(u'true'))
            @Js
            def PyJs_anonymous_511_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                return var.get(u'format').get(u'comments')
            PyJs_anonymous_511_._set_name(u'anonymous')
            var.get(u'format').put(u'shouldPrintComment', (var.get(u'format').get(u'shouldPrintComment') or PyJs_anonymous_511_))
        else:
            @Js
            def PyJs_anonymous_512_(value, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'value':value}, var)
                var.registers([u'value'])
                return ((var.get(u'format').get(u'comments') or (var.get(u'value').callprop(u'indexOf', Js(u'@license'))>=Js(0.0))) or (var.get(u'value').callprop(u'indexOf', Js(u'@preserve'))>=Js(0.0)))
            PyJs_anonymous_512_._set_name(u'anonymous')
            var.get(u'format').put(u'shouldPrintComment', (var.get(u'format').get(u'shouldPrintComment') or PyJs_anonymous_512_))
        if PyJsStrictEq(var.get(u'format').get(u'compact'),Js(u'auto')):
            var.get(u'format').put(u'compact', (var.get(u'code').get(u'length')>Js(100000.0)))
            if var.get(u'format').get(u'compact'):
                var.get(u'console').callprop(u'error', (Js(u'[BABEL] ')+var.get(u'messages').callprop(u'get', Js(u'codeGeneratorDeopt'), var.get(u'opts').get(u'filename'), Js(u'100KB'))))
        if var.get(u'format').get(u'compact'):
            var.get(u'format').get(u'indent').put(u'adjustMultilineComment', Js(False))
        return var.get(u'format')
    PyJsHoisted_normalizeOptions_.func_name = u'normalizeOptions'
    var.put(u'normalizeOptions', PyJsHoisted_normalizeOptions_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_504_ = Js({})
            var.put(u'newObj', PyJs_Object_504_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'CodeGenerator', var.get(u'undefined'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
    var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
    var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
    var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
    @Js
    def PyJs_anonymous_503_(ast, opts, code, this, arguments, var=var):
        var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'opts':opts, u'ast':ast}, var)
        var.registers([u'code', u'gen', u'opts', u'ast'])
        var.put(u'gen', var.get(u'Generator').create(var.get(u'ast'), var.get(u'opts'), var.get(u'code')))
        return var.get(u'gen').callprop(u'generate')
    PyJs_anonymous_503_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_503_)
    var.put(u'_detectIndent', var.get(u'require')(Js(u'detect-indent')))
    var.put(u'_detectIndent2', var.get(u'_interopRequireDefault')(var.get(u'_detectIndent')))
    var.put(u'_sourceMap', var.get(u'require')(Js(u'./source-map')))
    var.put(u'_sourceMap2', var.get(u'_interopRequireDefault')(var.get(u'_sourceMap')))
    var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
    var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
    var.put(u'_printer', var.get(u'require')(Js(u'./printer')))
    var.put(u'_printer2', var.get(u'_interopRequireDefault')(var.get(u'_printer')))
    pass
    pass
    @Js
    def PyJs_anonymous_506_(_Printer, this, arguments, var=var):
        var = Scope({u'this':this, u'_Printer':_Printer, u'arguments':arguments}, var)
        var.registers([u'_Printer', u'Generator'])
        @Js
        def PyJsHoisted_Generator_(ast, opts, code, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'opts':opts, u'ast':ast}, var)
            var.registers([u'map', u'code', u'_this', u'ast', u'format', u'tokens', u'opts'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Generator'))
            PyJs_Object_507_ = Js({})
            var.put(u'opts', (var.get(u'opts') or PyJs_Object_507_))
            var.put(u'tokens', (var.get(u'ast').get(u'tokens') or Js([])))
            var.put(u'format', var.get(u'normalizeOptions')(var.get(u'code'), var.get(u'opts'), var.get(u'tokens')))
            var.put(u'map', (var.get(u'_sourceMap2').get(u'default').create(var.get(u'opts'), var.get(u'code')) if var.get(u'opts').get(u'sourceMaps') else var.get(u"null")))
            var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_Printer').callprop(u'call', var.get(u"this"), var.get(u'format'), var.get(u'map'), var.get(u'tokens'))))
            var.get(u'_this').put(u'ast', var.get(u'ast'))
            return var.get(u'_this')
        PyJsHoisted_Generator_.func_name = u'Generator'
        var.put(u'Generator', PyJsHoisted_Generator_)
        PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'Generator'), var.get(u'_Printer'))
        pass
        @Js
        def PyJs_generate_508_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'generate':PyJs_generate_508_}, var)
            var.registers([])
            return var.get(u'_Printer').get(u'prototype').get(u'generate').callprop(u'call', var.get(u"this"), var.get(u"this").get(u'ast'))
        PyJs_generate_508_._set_name(u'generate')
        var.get(u'Generator').get(u'prototype').put(u'generate', PyJs_generate_508_)
        return var.get(u'Generator')
    PyJs_anonymous_506_._set_name(u'anonymous')
    var.put(u'Generator', PyJs_anonymous_506_(var.get(u'_printer2').get(u'default')))
    pass
    pass
    @Js
    def PyJs_anonymous_514_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'CodeGenerator'])
        @Js
        def PyJsHoisted_CodeGenerator_(ast, opts, code, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'opts':opts, u'ast':ast}, var)
            var.registers([u'code', u'opts', u'ast'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'CodeGenerator'))
            var.get(u"this").put(u'_generator', var.get(u'Generator').create(var.get(u'ast'), var.get(u'opts'), var.get(u'code')))
        PyJsHoisted_CodeGenerator_.func_name = u'CodeGenerator'
        var.put(u'CodeGenerator', PyJsHoisted_CodeGenerator_)
        pass
        @Js
        def PyJs_generate_515_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'generate':PyJs_generate_515_}, var)
            var.registers([])
            return var.get(u"this").get(u'_generator').callprop(u'generate')
        PyJs_generate_515_._set_name(u'generate')
        var.get(u'CodeGenerator').get(u'prototype').put(u'generate', PyJs_generate_515_)
        return var.get(u'CodeGenerator')
    PyJs_anonymous_514_._set_name(u'anonymous')
    var.put(u'CodeGenerator', var.get(u'exports').put(u'CodeGenerator', PyJs_anonymous_514_()))
PyJs_anonymous_502_._set_name(u'anonymous')
PyJs_Object_516_ = Js({u'./printer':Js(44.0),u'./source-map':Js(45.0),u'babel-messages':Js(57.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0),u'detect-indent':Js(271.0)})
@Js
def PyJs_anonymous_517_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'needsParens', u'module', u'_parentheses', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'find', u'needsWhitespaceBefore', u'_keys', u'parens', u'exports', u'expandedWhitespaceNodes', u'_interopRequireWildcard', u'_babelTypes', u'expandAliases', u'needsWhitespace', u'_keys2', u'_whitespace2', u'expandedParens', u'expandedWhitespaceList', u'require', u'isOrHasCallExpression', u'_whitespace', u't', u'needsWhitespaceAfter'])
    @Js
    def PyJsHoisted_needsParens_(node, parent, printStack, this, arguments, var=var):
        var = Scope({u'node':node, u'printStack':printStack, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'printStack', u'parent'])
        if var.get(u'parent').neg():
            return Js(False)
        if (var.get(u't').callprop(u'isNewExpression', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'callee'),var.get(u'node'))):
            if var.get(u'isOrHasCallExpression')(var.get(u'node')):
                return var.get(u'true')
        return var.get(u'find')(var.get(u'expandedParens'), var.get(u'node'), var.get(u'parent'), var.get(u'printStack'))
    PyJsHoisted_needsParens_.func_name = u'needsParens'
    var.put(u'needsParens', PyJsHoisted_needsParens_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_518_ = Js({})
            var.put(u'newObj', PyJs_Object_518_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_needsWhitespaceBefore_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        return var.get(u'needsWhitespace')(var.get(u'node'), var.get(u'parent'), Js(u'before'))
    PyJsHoisted_needsWhitespaceBefore_.func_name = u'needsWhitespaceBefore'
    var.put(u'needsWhitespaceBefore', PyJsHoisted_needsWhitespaceBefore_)
    @Js
    def PyJsHoisted_expandAliases_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'_isArray', u'_iterator', u'_isArray2', u'_ref2', u'_i2', u'newObj', u'alias', u'add', u'_i', u'obj', u'_ref', u'_iterator2', u'type', u'aliases'])
        @Js
        def PyJsHoisted_add_(type, func, this, arguments, var=var):
            var = Scope({u'this':this, u'type':type, u'arguments':arguments, u'func':func}, var)
            var.registers([u'type', u'func', u'fn'])
            var.put(u'fn', var.get(u'newObj').get(var.get(u'type')))
            @Js
            def PyJs_anonymous_521_(node, parent, stack, this, arguments, var=var):
                var = Scope({u'node':node, u'this':this, u'stack':stack, u'parent':parent, u'arguments':arguments}, var)
                var.registers([u'node', u'result', u'parent', u'stack'])
                var.put(u'result', var.get(u'fn')(var.get(u'node'), var.get(u'parent'), var.get(u'stack')))
                return (var.get(u'func')(var.get(u'node'), var.get(u'parent'), var.get(u'stack')) if (var.get(u'result')==var.get(u"null")) else var.get(u'result'))
            PyJs_anonymous_521_._set_name(u'anonymous')
            var.get(u'newObj').put(var.get(u'type'), (PyJs_anonymous_521_ if var.get(u'fn') else var.get(u'func')))
        PyJsHoisted_add_.func_name = u'add'
        var.put(u'add', PyJsHoisted_add_)
        PyJs_Object_520_ = Js({})
        var.put(u'newObj', PyJs_Object_520_)
        pass
        #for JS loop
        var.put(u'_iterator', PyJsComma(Js(0.0),var.get(u'_keys2').get(u'default'))(var.get(u'obj')))
        var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
        var.put(u'_i', Js(0.0))
        var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
        while 1:
            pass
            if var.get(u'_isArray'):
                if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                    break
                var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
            else:
                var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                if var.get(u'_i').get(u'done'):
                    break
                var.put(u'_ref', var.get(u'_i').get(u'value'))
            var.put(u'type', var.get(u'_ref'))
            var.put(u'aliases', var.get(u't').get(u'FLIPPED_ALIAS_KEYS').get(var.get(u'type')))
            if var.get(u'aliases'):
                #for JS loop
                var.put(u'_iterator2', var.get(u'aliases'))
                var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
                var.put(u'_i2', Js(0.0))
                var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
                while 1:
                    pass
                    if var.get(u'_isArray2'):
                        if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                            break
                        var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                        if var.get(u'_i2').get(u'done'):
                            break
                        var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                    var.put(u'alias', var.get(u'_ref2'))
                    var.get(u'add')(var.get(u'alias'), var.get(u'obj').get(var.get(u'type')))
                
            else:
                var.get(u'add')(var.get(u'type'), var.get(u'obj').get(var.get(u'type')))
        
        return var.get(u'newObj')
    PyJsHoisted_expandAliases_.func_name = u'expandAliases'
    var.put(u'expandAliases', PyJsHoisted_expandAliases_)
    @Js
    def PyJsHoisted_needsWhitespace_(node, parent, type, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'type':type, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent', u'i', u'items', u'linesInfo', u'type'])
        if var.get(u'node').neg():
            return Js(0.0)
        if var.get(u't').callprop(u'isExpressionStatement', var.get(u'node')):
            var.put(u'node', var.get(u'node').get(u'expression'))
        var.put(u'linesInfo', var.get(u'find')(var.get(u'expandedWhitespaceNodes'), var.get(u'node'), var.get(u'parent')))
        if var.get(u'linesInfo').neg():
            var.put(u'items', var.get(u'find')(var.get(u'expandedWhitespaceList'), var.get(u'node'), var.get(u'parent')))
            if var.get(u'items'):
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'items').get(u'length')):
                    try:
                        var.put(u'linesInfo', var.get(u'needsWhitespace')(var.get(u'items').get(var.get(u'i')), var.get(u'node'), var.get(u'type')))
                        if var.get(u'linesInfo'):
                            break
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        return ((var.get(u'linesInfo') and var.get(u'linesInfo').get(var.get(u'type'))) or Js(0.0))
    PyJsHoisted_needsWhitespace_.func_name = u'needsWhitespace'
    var.put(u'needsWhitespace', PyJsHoisted_needsWhitespace_)
    @Js
    def PyJsHoisted_isOrHasCallExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isCallExpression', var.get(u'node')):
            return var.get(u'true')
        if var.get(u't').callprop(u'isMemberExpression', var.get(u'node')):
            return (var.get(u'isOrHasCallExpression')(var.get(u'node').get(u'object')) or (var.get(u'node').get(u'computed').neg() and var.get(u'isOrHasCallExpression')(var.get(u'node').get(u'property'))))
        else:
            return Js(False)
    PyJsHoisted_isOrHasCallExpression_.func_name = u'isOrHasCallExpression'
    var.put(u'isOrHasCallExpression', PyJsHoisted_isOrHasCallExpression_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_519_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_519_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_needsWhitespaceAfter_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        return var.get(u'needsWhitespace')(var.get(u'node'), var.get(u'parent'), Js(u'after'))
    PyJsHoisted_needsWhitespaceAfter_.func_name = u'needsWhitespaceAfter'
    var.put(u'needsWhitespaceAfter', PyJsHoisted_needsWhitespaceAfter_)
    @Js
    def PyJsHoisted_find_(obj, node, parent, printStack, this, arguments, var=var):
        var = Scope({u'node':node, u'obj':obj, u'arguments':arguments, u'parent':parent, u'this':this, u'printStack':printStack}, var)
        var.registers([u'node', u'printStack', u'obj', u'parent', u'fn'])
        var.put(u'fn', var.get(u'obj').get(var.get(u'node').get(u'type')))
        return (var.get(u'fn')(var.get(u'node'), var.get(u'parent'), var.get(u'printStack')) if var.get(u'fn') else var.get(u"null"))
    PyJsHoisted_find_.func_name = u'find'
    var.put(u'find', PyJsHoisted_find_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_keys', var.get(u'require')(Js(u'babel-runtime/core-js/object/keys')))
    var.put(u'_keys2', var.get(u'_interopRequireDefault')(var.get(u'_keys')))
    var.get(u'exports').put(u'needsWhitespace', var.get(u'needsWhitespace'))
    var.get(u'exports').put(u'needsWhitespaceBefore', var.get(u'needsWhitespaceBefore'))
    var.get(u'exports').put(u'needsWhitespaceAfter', var.get(u'needsWhitespaceAfter'))
    var.get(u'exports').put(u'needsParens', var.get(u'needsParens'))
    var.put(u'_whitespace', var.get(u'require')(Js(u'./whitespace')))
    var.put(u'_whitespace2', var.get(u'_interopRequireDefault')(var.get(u'_whitespace')))
    var.put(u'_parentheses', var.get(u'require')(Js(u'./parentheses')))
    var.put(u'parens', var.get(u'_interopRequireWildcard')(var.get(u'_parentheses')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    var.put(u'expandedParens', var.get(u'expandAliases')(var.get(u'parens')))
    var.put(u'expandedWhitespaceNodes', var.get(u'expandAliases')(var.get(u'_whitespace2').get(u'default').get(u'nodes')))
    var.put(u'expandedWhitespaceList', var.get(u'expandAliases')(var.get(u'_whitespace2').get(u'default').get(u'list')))
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_517_._set_name(u'anonymous')
PyJs_Object_522_ = Js({u'./parentheses':Js(42.0),u'./whitespace':Js(43.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/object/keys':Js(103.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_523_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'ArrowFunctionExpression', u'Binary', u'exports', u'SequenceExpression', u'ConditionalExpression', u'_interopRequireWildcard', u'PRECEDENCE', u'ClassExpression', u'require', u'_babelTypes', u'FunctionExpression', u'UpdateExpression', u'module', u'YieldExpression', u'ObjectExpression', u't', u'BinaryExpression', u'AssignmentExpression', u'isFirstInStatement', u'UnaryLike', u'NullableTypeAnnotation'])
    @Js
    def PyJsHoisted_Binary_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'nodePos', u'parent', u'parentPos', u'parentOp', u'nodeOp'])
        if ((var.get(u't').callprop(u'isCallExpression', var.get(u'parent')) or var.get(u't').callprop(u'isNewExpression', var.get(u'parent'))) and PyJsStrictEq(var.get(u'parent').get(u'callee'),var.get(u'node'))):
            return var.get(u'true')
        if var.get(u't').callprop(u'isUnaryLike', var.get(u'parent')):
            return var.get(u'true')
        if (var.get(u't').callprop(u'isMemberExpression', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'object'),var.get(u'node'))):
            return var.get(u'true')
        if var.get(u't').callprop(u'isBinary', var.get(u'parent')):
            var.put(u'parentOp', var.get(u'parent').get(u'operator'))
            var.put(u'parentPos', var.get(u'PRECEDENCE').get(var.get(u'parentOp')))
            var.put(u'nodeOp', var.get(u'node').get(u'operator'))
            var.put(u'nodePos', var.get(u'PRECEDENCE').get(var.get(u'nodeOp')))
            if (var.get(u'parentPos')>var.get(u'nodePos')):
                return var.get(u'true')
            if ((PyJsStrictEq(var.get(u'parentPos'),var.get(u'nodePos')) and PyJsStrictEq(var.get(u'parent').get(u'right'),var.get(u'node'))) and var.get(u't').callprop(u'isLogicalExpression', var.get(u'parent')).neg()):
                return var.get(u'true')
        return Js(False)
    PyJsHoisted_Binary_.func_name = u'Binary'
    var.put(u'Binary', PyJsHoisted_Binary_)
    @Js
    def PyJsHoisted_SequenceExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if var.get(u't').callprop(u'isForStatement', var.get(u'parent')):
            return Js(False)
        if (var.get(u't').callprop(u'isExpressionStatement', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'expression'),var.get(u'node'))):
            return Js(False)
        if var.get(u't').callprop(u'isReturnStatement', var.get(u'parent')):
            return Js(False)
        if var.get(u't').callprop(u'isThrowStatement', var.get(u'parent')):
            return Js(False)
        if (var.get(u't').callprop(u'isSwitchStatement', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'discriminant'),var.get(u'node'))):
            return Js(False)
        if (var.get(u't').callprop(u'isWhileStatement', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'test'),var.get(u'node'))):
            return Js(False)
        if (var.get(u't').callprop(u'isIfStatement', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'test'),var.get(u'node'))):
            return Js(False)
        if (var.get(u't').callprop(u'isForInStatement', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'right'),var.get(u'node'))):
            return Js(False)
        return var.get(u'true')
    PyJsHoisted_SequenceExpression_.func_name = u'SequenceExpression'
    var.put(u'SequenceExpression', PyJsHoisted_SequenceExpression_)
    @Js
    def PyJsHoisted_ArrowFunctionExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if var.get(u't').callprop(u'isExportDeclaration', var.get(u'parent')):
            return var.get(u'true')
        if (var.get(u't').callprop(u'isBinaryExpression', var.get(u'parent')) or var.get(u't').callprop(u'isLogicalExpression', var.get(u'parent'))):
            return var.get(u'true')
        if var.get(u't').callprop(u'isUnaryExpression', var.get(u'parent')):
            return var.get(u'true')
        return var.get(u'UnaryLike')(var.get(u'node'), var.get(u'parent'))
    PyJsHoisted_ArrowFunctionExpression_.func_name = u'ArrowFunctionExpression'
    var.put(u'ArrowFunctionExpression', PyJsHoisted_ArrowFunctionExpression_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_524_ = Js({})
            var.put(u'newObj', PyJs_Object_524_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ClassExpression_(node, parent, printStack, this, arguments, var=var):
        var = Scope({u'node':node, u'printStack':printStack, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'printStack', u'parent'])
        PyJs_Object_528_ = Js({u'considerDefaultExports':var.get(u'true')})
        return var.get(u'isFirstInStatement')(var.get(u'printStack'), PyJs_Object_528_)
    PyJsHoisted_ClassExpression_.func_name = u'ClassExpression'
    var.put(u'ClassExpression', PyJsHoisted_ClassExpression_)
    @Js
    def PyJsHoisted_ConditionalExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if var.get(u't').callprop(u'isUnaryLike', var.get(u'parent')):
            return var.get(u'true')
        if var.get(u't').callprop(u'isBinary', var.get(u'parent')):
            return var.get(u'true')
        PyJs_Object_533_ = Js({u'test':var.get(u'node')})
        if var.get(u't').callprop(u'isConditionalExpression', var.get(u'parent'), PyJs_Object_533_):
            return var.get(u'true')
        return var.get(u'UnaryLike')(var.get(u'node'), var.get(u'parent'))
    PyJsHoisted_ConditionalExpression_.func_name = u'ConditionalExpression'
    var.put(u'ConditionalExpression', PyJsHoisted_ConditionalExpression_)
    @Js
    def PyJsHoisted_FunctionExpression_(node, parent, printStack, this, arguments, var=var):
        var = Scope({u'node':node, u'printStack':printStack, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'printStack', u'parent'])
        PyJs_Object_532_ = Js({u'considerDefaultExports':var.get(u'true')})
        return var.get(u'isFirstInStatement')(var.get(u'printStack'), PyJs_Object_532_)
    PyJsHoisted_FunctionExpression_.func_name = u'FunctionExpression'
    var.put(u'FunctionExpression', PyJsHoisted_FunctionExpression_)
    @Js
    def PyJsHoisted_UpdateExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if (var.get(u't').callprop(u'isMemberExpression', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'object'),var.get(u'node'))):
            return var.get(u'true')
        return Js(False)
    PyJsHoisted_UpdateExpression_.func_name = u'UpdateExpression'
    var.put(u'UpdateExpression', PyJsHoisted_UpdateExpression_)
    @Js
    def PyJsHoisted_YieldExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        def PyJs_LONG_527_(var=var):
            return (((((var.get(u't').callprop(u'isBinary', var.get(u'parent')) or var.get(u't').callprop(u'isUnaryLike', var.get(u'parent'))) or var.get(u't').callprop(u'isCallExpression', var.get(u'parent'))) or var.get(u't').callprop(u'isMemberExpression', var.get(u'parent'))) or var.get(u't').callprop(u'isNewExpression', var.get(u'parent'))) or (var.get(u't').callprop(u'isConditionalExpression', var.get(u'parent')) and PyJsStrictEq(var.get(u'node'),var.get(u'parent').get(u'test'))))
        return PyJs_LONG_527_()
    PyJsHoisted_YieldExpression_.func_name = u'YieldExpression'
    var.put(u'YieldExpression', PyJsHoisted_YieldExpression_)
    @Js
    def PyJsHoisted_ObjectExpression_(node, parent, printStack, this, arguments, var=var):
        var = Scope({u'node':node, u'printStack':printStack, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'printStack', u'parent'])
        PyJs_Object_526_ = Js({u'considerArrow':var.get(u'true')})
        return var.get(u'isFirstInStatement')(var.get(u'printStack'), PyJs_Object_526_)
    PyJsHoisted_ObjectExpression_.func_name = u'ObjectExpression'
    var.put(u'ObjectExpression', PyJsHoisted_ObjectExpression_)
    @Js
    def PyJsHoisted_BinaryExpression_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'in')):
            if var.get(u't').callprop(u'isVariableDeclarator', var.get(u'parent')):
                return var.get(u'true')
            if var.get(u't').callprop(u'isFor', var.get(u'parent')):
                return var.get(u'true')
        return Js(False)
    PyJsHoisted_BinaryExpression_.func_name = u'BinaryExpression'
    var.put(u'BinaryExpression', PyJsHoisted_BinaryExpression_)
    @Js
    def PyJsHoisted_AssignmentExpression_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isObjectPattern', var.get(u'node').get(u'left')):
            return var.get(u'true')
        else:
            return var.get(u'ConditionalExpression').callprop(u'apply', var.get(u'undefined'), var.get(u'arguments'))
    PyJsHoisted_AssignmentExpression_.func_name = u'AssignmentExpression'
    var.put(u'AssignmentExpression', PyJsHoisted_AssignmentExpression_)
    @Js
    def PyJsHoisted_isFirstInStatement_(printStack, this, arguments, var=var):
        var = Scope({u'this':this, u'printStack':printStack, u'arguments':arguments}, var)
        var.registers([u'_ref$considerArrow', u'node', u'considerDefaultExports', u'parent', u'i', u'printStack', u'_ref$considerDefaultE', u'considerArrow', u'_ref'])
        PyJs_Object_534_ = Js({})
        var.put(u'_ref', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else PyJs_Object_534_))
        var.put(u'_ref$considerArrow', var.get(u'_ref').get(u'considerArrow'))
        var.put(u'considerArrow', (Js(False) if PyJsStrictEq(var.get(u'_ref$considerArrow'),var.get(u'undefined')) else var.get(u'_ref$considerArrow')))
        var.put(u'_ref$considerDefaultE', var.get(u'_ref').get(u'considerDefaultExports'))
        var.put(u'considerDefaultExports', (Js(False) if PyJsStrictEq(var.get(u'_ref$considerDefaultE'),var.get(u'undefined')) else var.get(u'_ref$considerDefaultE')))
        var.put(u'i', (var.get(u'printStack').get(u'length')-Js(1.0)))
        var.put(u'node', var.get(u'printStack').get(var.get(u'i')))
        (var.put(u'i',Js(var.get(u'i').to_number())-Js(1))+Js(1))
        var.put(u'parent', var.get(u'printStack').get(var.get(u'i')))
        while (var.get(u'i')>Js(0.0)):
            PyJs_Object_535_ = Js({u'expression':var.get(u'node')})
            if var.get(u't').callprop(u'isExpressionStatement', var.get(u'parent'), PyJs_Object_535_):
                return var.get(u'true')
            PyJs_Object_536_ = Js({u'declaration':var.get(u'node')})
            if (var.get(u'considerDefaultExports') and var.get(u't').callprop(u'isExportDefaultDeclaration', var.get(u'parent'), PyJs_Object_536_)):
                return var.get(u'true')
            PyJs_Object_537_ = Js({u'body':var.get(u'node')})
            if (var.get(u'considerArrow') and var.get(u't').callprop(u'isArrowFunctionExpression', var.get(u'parent'), PyJs_Object_537_)):
                return var.get(u'true')
            def PyJs_LONG_541_(var=var):
                PyJs_Object_538_ = Js({u'callee':var.get(u'node')})
                PyJs_Object_539_ = Js({u'object':var.get(u'node')})
                PyJs_Object_540_ = Js({u'test':var.get(u'node')})
                return (((var.get(u't').callprop(u'isCallExpression', var.get(u'parent'), PyJs_Object_538_) or (var.get(u't').callprop(u'isSequenceExpression', var.get(u'parent')) and PyJsStrictEq(var.get(u'parent').get(u'expressions').get(u'0'),var.get(u'node')))) or var.get(u't').callprop(u'isMemberExpression', var.get(u'parent'), PyJs_Object_539_)) or var.get(u't').callprop(u'isConditional', var.get(u'parent'), PyJs_Object_540_))
            PyJs_Object_542_ = Js({u'left':var.get(u'node')})
            PyJs_Object_543_ = Js({u'left':var.get(u'node')})
            if ((PyJs_LONG_541_() or var.get(u't').callprop(u'isBinary', var.get(u'parent'), PyJs_Object_542_)) or var.get(u't').callprop(u'isAssignmentExpression', var.get(u'parent'), PyJs_Object_543_)):
                var.put(u'node', var.get(u'parent'))
                (var.put(u'i',Js(var.get(u'i').to_number())-Js(1))+Js(1))
                var.put(u'parent', var.get(u'printStack').get(var.get(u'i')))
            else:
                return Js(False)
        return Js(False)
    PyJsHoisted_isFirstInStatement_.func_name = u'isFirstInStatement'
    var.put(u'isFirstInStatement', PyJsHoisted_isFirstInStatement_)
    @Js
    def PyJsHoisted_UnaryLike_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        PyJs_Object_529_ = Js({u'object':var.get(u'node')})
        if var.get(u't').callprop(u'isMemberExpression', var.get(u'parent'), PyJs_Object_529_):
            return var.get(u'true')
        PyJs_Object_530_ = Js({u'callee':var.get(u'node')})
        PyJs_Object_531_ = Js({u'callee':var.get(u'node')})
        if (var.get(u't').callprop(u'isCallExpression', var.get(u'parent'), PyJs_Object_530_) or var.get(u't').callprop(u'isNewExpression', var.get(u'parent'), PyJs_Object_531_)):
            return var.get(u'true')
        return Js(False)
    PyJsHoisted_UnaryLike_.func_name = u'UnaryLike'
    var.put(u'UnaryLike', PyJsHoisted_UnaryLike_)
    @Js
    def PyJsHoisted_NullableTypeAnnotation_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        return var.get(u't').callprop(u'isArrayTypeAnnotation', var.get(u'parent'))
    PyJsHoisted_NullableTypeAnnotation_.func_name = u'NullableTypeAnnotation'
    var.put(u'NullableTypeAnnotation', PyJsHoisted_NullableTypeAnnotation_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'AwaitExpression', var.get(u'exports').put(u'FunctionTypeAnnotation', var.get(u'undefined')))
    var.get(u'exports').put(u'NullableTypeAnnotation', var.get(u'NullableTypeAnnotation'))
    var.get(u'exports').put(u'UpdateExpression', var.get(u'UpdateExpression'))
    var.get(u'exports').put(u'ObjectExpression', var.get(u'ObjectExpression'))
    var.get(u'exports').put(u'Binary', var.get(u'Binary'))
    var.get(u'exports').put(u'BinaryExpression', var.get(u'BinaryExpression'))
    var.get(u'exports').put(u'SequenceExpression', var.get(u'SequenceExpression'))
    var.get(u'exports').put(u'YieldExpression', var.get(u'YieldExpression'))
    var.get(u'exports').put(u'ClassExpression', var.get(u'ClassExpression'))
    var.get(u'exports').put(u'UnaryLike', var.get(u'UnaryLike'))
    var.get(u'exports').put(u'FunctionExpression', var.get(u'FunctionExpression'))
    var.get(u'exports').put(u'ArrowFunctionExpression', var.get(u'ArrowFunctionExpression'))
    var.get(u'exports').put(u'ConditionalExpression', var.get(u'ConditionalExpression'))
    var.get(u'exports').put(u'AssignmentExpression', var.get(u'AssignmentExpression'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    PyJs_Object_525_ = Js({u'||':Js(0.0),u'&&':Js(1.0),u'|':Js(2.0),u'^':Js(3.0),u'&':Js(4.0),u'==':Js(5.0),u'===':Js(5.0),u'!=':Js(5.0),u'!==':Js(5.0),u'<':Js(6.0),u'>':Js(6.0),u'<=':Js(6.0),u'>=':Js(6.0),u'in':Js(6.0),u'instanceof':Js(6.0),u'>>':Js(7.0),u'<<':Js(7.0),u'>>>':Js(7.0),u'+':Js(8.0),u'-':Js(8.0),u'*':Js(9.0),u'/':Js(9.0),u'%':Js(9.0),u'**':Js(10.0)})
    var.put(u'PRECEDENCE', PyJs_Object_525_)
    pass
    var.get(u'exports').put(u'FunctionTypeAnnotation', var.get(u'NullableTypeAnnotation'))
    pass
    pass
    pass
    pass
    pass
    pass
    var.get(u'exports').put(u'AwaitExpression', var.get(u'YieldExpression'))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_523_._set_name(u'anonymous')
PyJs_Object_544_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_545_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'isHelper', u'exports', u'_babelTypes', u'_each', u'_interopRequireWildcard', u'_map', u'require', u'_isBoolean', u'module', u'_each2', u'_isBoolean2', u'isType', u'_interopRequireDefault', u'crawl', u'_map2', u't'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_547_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_547_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_isHelper_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isMemberExpression', var.get(u'node')):
            return (var.get(u'isHelper')(var.get(u'node').get(u'object')) or var.get(u'isHelper')(var.get(u'node').get(u'property')))
        else:
            if var.get(u't').callprop(u'isIdentifier', var.get(u'node')):
                return (PyJsStrictEq(var.get(u'node').get(u'name'),Js(u'require')) or PyJsStrictEq(var.get(u'node').get(u'name').get(u'0'),Js(u'_')))
            else:
                if var.get(u't').callprop(u'isCallExpression', var.get(u'node')):
                    return var.get(u'isHelper')(var.get(u'node').get(u'callee'))
                else:
                    if (var.get(u't').callprop(u'isBinary', var.get(u'node')) or var.get(u't').callprop(u'isAssignmentExpression', var.get(u'node'))):
                        return ((var.get(u't').callprop(u'isIdentifier', var.get(u'node').get(u'left')) and var.get(u'isHelper')(var.get(u'node').get(u'left'))) or var.get(u'isHelper')(var.get(u'node').get(u'right')))
                    else:
                        return Js(False)
    PyJsHoisted_isHelper_.func_name = u'isHelper'
    var.put(u'isHelper', PyJsHoisted_isHelper_)
    @Js
    def PyJsHoisted_crawl_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'state'])
        PyJs_Object_548_ = Js({})
        var.put(u'state', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else PyJs_Object_548_))
        if var.get(u't').callprop(u'isMemberExpression', var.get(u'node')):
            var.get(u'crawl')(var.get(u'node').get(u'object'), var.get(u'state'))
            if var.get(u'node').get(u'computed'):
                var.get(u'crawl')(var.get(u'node').get(u'property'), var.get(u'state'))
        else:
            if (var.get(u't').callprop(u'isBinary', var.get(u'node')) or var.get(u't').callprop(u'isAssignmentExpression', var.get(u'node'))):
                var.get(u'crawl')(var.get(u'node').get(u'left'), var.get(u'state'))
                var.get(u'crawl')(var.get(u'node').get(u'right'), var.get(u'state'))
            else:
                if var.get(u't').callprop(u'isCallExpression', var.get(u'node')):
                    var.get(u'state').put(u'hasCall', var.get(u'true'))
                    var.get(u'crawl')(var.get(u'node').get(u'callee'), var.get(u'state'))
                else:
                    if var.get(u't').callprop(u'isFunction', var.get(u'node')):
                        var.get(u'state').put(u'hasFunction', var.get(u'true'))
                    else:
                        if var.get(u't').callprop(u'isIdentifier', var.get(u'node')):
                            var.get(u'state').put(u'hasHelper', (var.get(u'state').get(u'hasHelper') or var.get(u'isHelper')(var.get(u'node').get(u'callee'))))
        return var.get(u'state')
    PyJsHoisted_crawl_.func_name = u'crawl'
    var.put(u'crawl', PyJsHoisted_crawl_)
    @Js
    def PyJsHoisted_isType_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        return ((((var.get(u't').callprop(u'isLiteral', var.get(u'node')) or var.get(u't').callprop(u'isObjectExpression', var.get(u'node'))) or var.get(u't').callprop(u'isArrayExpression', var.get(u'node'))) or var.get(u't').callprop(u'isIdentifier', var.get(u'node'))) or var.get(u't').callprop(u'isMemberExpression', var.get(u'node')))
    PyJsHoisted_isType_.func_name = u'isType'
    var.put(u'isType', PyJsHoisted_isType_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_546_ = Js({})
            var.put(u'newObj', PyJs_Object_546_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.put(u'_isBoolean', var.get(u'require')(Js(u'lodash/isBoolean')))
    var.put(u'_isBoolean2', var.get(u'_interopRequireDefault')(var.get(u'_isBoolean')))
    var.put(u'_each', var.get(u'require')(Js(u'lodash/each')))
    var.put(u'_each2', var.get(u'_interopRequireDefault')(var.get(u'_each')))
    var.put(u'_map', var.get(u'require')(Js(u'lodash/map')))
    var.put(u'_map2', var.get(u'_interopRequireDefault')(var.get(u'_map')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    pass
    @Js
    def PyJs_AssignmentExpression_550_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'AssignmentExpression':PyJs_AssignmentExpression_550_}, var)
        var.registers([u'node', u'state'])
        var.put(u'state', var.get(u'crawl')(var.get(u'node').get(u'right')))
        if ((var.get(u'state').get(u'hasCall') and var.get(u'state').get(u'hasHelper')) or var.get(u'state').get(u'hasFunction')):
            PyJs_Object_551_ = Js({u'before':var.get(u'state').get(u'hasFunction'),u'after':var.get(u'true')})
            return PyJs_Object_551_
    PyJs_AssignmentExpression_550_._set_name(u'AssignmentExpression')
    @Js
    def PyJs_SwitchCase_552_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'SwitchCase':PyJs_SwitchCase_552_, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        PyJs_Object_553_ = Js({u'before':(var.get(u'node').get(u'consequent').get(u'length') or PyJsStrictEq(var.get(u'parent').get(u'cases').get(u'0'),var.get(u'node')))})
        return PyJs_Object_553_
    PyJs_SwitchCase_552_._set_name(u'SwitchCase')
    @Js
    def PyJs_LogicalExpression_554_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'LogicalExpression':PyJs_LogicalExpression_554_}, var)
        var.registers([u'node'])
        if (var.get(u't').callprop(u'isFunction', var.get(u'node').get(u'left')) or var.get(u't').callprop(u'isFunction', var.get(u'node').get(u'right'))):
            PyJs_Object_555_ = Js({u'after':var.get(u'true')})
            return PyJs_Object_555_
    PyJs_LogicalExpression_554_._set_name(u'LogicalExpression')
    @Js
    def PyJs_Literal_556_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'Literal':PyJs_Literal_556_, u'arguments':arguments}, var)
        var.registers([u'node'])
        if PyJsStrictEq(var.get(u'node').get(u'value'),Js(u'use strict')):
            PyJs_Object_557_ = Js({u'after':var.get(u'true')})
            return PyJs_Object_557_
    PyJs_Literal_556_._set_name(u'Literal')
    @Js
    def PyJs_CallExpression_558_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'CallExpression':PyJs_CallExpression_558_}, var)
        var.registers([u'node'])
        if (var.get(u't').callprop(u'isFunction', var.get(u'node').get(u'callee')) or var.get(u'isHelper')(var.get(u'node'))):
            PyJs_Object_559_ = Js({u'before':var.get(u'true'),u'after':var.get(u'true')})
            return PyJs_Object_559_
    PyJs_CallExpression_558_._set_name(u'CallExpression')
    @Js
    def PyJs_VariableDeclaration_560_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'VariableDeclaration':PyJs_VariableDeclaration_560_}, var)
        var.registers([u'i', u'node', u'state', u'declar', u'enabled'])
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'node').get(u'declarations').get(u'length')):
            try:
                var.put(u'declar', var.get(u'node').get(u'declarations').get(var.get(u'i')))
                var.put(u'enabled', (var.get(u'isHelper')(var.get(u'declar').get(u'id')) and var.get(u'isType')(var.get(u'declar').get(u'init')).neg()))
                if var.get(u'enabled').neg():
                    var.put(u'state', var.get(u'crawl')(var.get(u'declar').get(u'init')))
                    var.put(u'enabled', ((var.get(u'isHelper')(var.get(u'declar').get(u'init')) and var.get(u'state').get(u'hasCall')) or var.get(u'state').get(u'hasFunction')))
                if var.get(u'enabled'):
                    PyJs_Object_561_ = Js({u'before':var.get(u'true'),u'after':var.get(u'true')})
                    return PyJs_Object_561_
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
    PyJs_VariableDeclaration_560_._set_name(u'VariableDeclaration')
    @Js
    def PyJs_IfStatement_562_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'IfStatement':PyJs_IfStatement_562_}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isBlockStatement', var.get(u'node').get(u'consequent')):
            PyJs_Object_563_ = Js({u'before':var.get(u'true'),u'after':var.get(u'true')})
            return PyJs_Object_563_
    PyJs_IfStatement_562_._set_name(u'IfStatement')
    PyJs_Object_549_ = Js({u'AssignmentExpression':PyJs_AssignmentExpression_550_,u'SwitchCase':PyJs_SwitchCase_552_,u'LogicalExpression':PyJs_LogicalExpression_554_,u'Literal':PyJs_Literal_556_,u'CallExpression':PyJs_CallExpression_558_,u'VariableDeclaration':PyJs_VariableDeclaration_560_,u'IfStatement':PyJs_IfStatement_562_})
    var.get(u'exports').put(u'nodes', PyJs_Object_549_)
    @Js
    def PyJs_anonymous_564_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if PyJsStrictEq(var.get(u'parent').get(u'properties').get(u'0'),var.get(u'node')):
            PyJs_Object_565_ = Js({u'before':var.get(u'true')})
            return PyJs_Object_565_
    PyJs_anonymous_564_._set_name(u'anonymous')
    var.get(u'exports').get(u'nodes').put(u'ObjectProperty', var.get(u'exports').get(u'nodes').put(u'ObjectTypeProperty', var.get(u'exports').get(u'nodes').put(u'ObjectMethod', var.get(u'exports').get(u'nodes').put(u'SpreadProperty', PyJs_anonymous_564_))))
    @Js
    def PyJs_VariableDeclaration_567_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'VariableDeclaration':PyJs_VariableDeclaration_567_}, var)
        var.registers([u'node'])
        return PyJsComma(Js(0.0),var.get(u'_map2').get(u'default'))(var.get(u'node').get(u'declarations'), Js(u'init'))
    PyJs_VariableDeclaration_567_._set_name(u'VariableDeclaration')
    @Js
    def PyJs_ArrayExpression_568_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'ArrayExpression':PyJs_ArrayExpression_568_}, var)
        var.registers([u'node'])
        return var.get(u'node').get(u'elements')
    PyJs_ArrayExpression_568_._set_name(u'ArrayExpression')
    @Js
    def PyJs_ObjectExpression_569_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'ObjectExpression':PyJs_ObjectExpression_569_, u'arguments':arguments}, var)
        var.registers([u'node'])
        return var.get(u'node').get(u'properties')
    PyJs_ObjectExpression_569_._set_name(u'ObjectExpression')
    PyJs_Object_566_ = Js({u'VariableDeclaration':PyJs_VariableDeclaration_567_,u'ArrayExpression':PyJs_ArrayExpression_568_,u'ObjectExpression':PyJs_ObjectExpression_569_})
    var.get(u'exports').put(u'list', PyJs_Object_566_)
    PyJs_Object_570_ = Js({u'Function':var.get(u'true'),u'Class':var.get(u'true'),u'Loop':var.get(u'true'),u'LabeledStatement':var.get(u'true'),u'SwitchStatement':var.get(u'true'),u'TryStatement':var.get(u'true')})
    @Js
    def PyJs_anonymous_571_(amounts, type, this, arguments, var=var):
        var = Scope({u'amounts':amounts, u'this':this, u'type':type, u'arguments':arguments}, var)
        var.registers([u'amounts', u'type'])
        if PyJsComma(Js(0.0),var.get(u'_isBoolean2').get(u'default'))(var.get(u'amounts')):
            PyJs_Object_572_ = Js({u'after':var.get(u'amounts'),u'before':var.get(u'amounts')})
            var.put(u'amounts', PyJs_Object_572_)
        @Js
        def PyJs_anonymous_573_(type, this, arguments, var=var):
            var = Scope({u'this':this, u'type':type, u'arguments':arguments}, var)
            var.registers([u'type'])
            @Js
            def PyJs_anonymous_574_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                return var.get(u'amounts')
            PyJs_anonymous_574_._set_name(u'anonymous')
            var.get(u'exports').get(u'nodes').put(var.get(u'type'), PyJs_anonymous_574_)
        PyJs_anonymous_573_._set_name(u'anonymous')
        PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(Js([var.get(u'type')]).callprop(u'concat', (var.get(u't').get(u'FLIPPED_ALIAS_KEYS').get(var.get(u'type')) or Js([]))), PyJs_anonymous_573_)
    PyJs_anonymous_571_._set_name(u'anonymous')
    PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(PyJs_Object_570_, PyJs_anonymous_571_)
PyJs_anonymous_545_._set_name(u'anonymous')
PyJs_Object_575_ = Js({u'babel-types':Js(258.0),u'lodash/each':Js(443.0),u'lodash/isBoolean':Js(461.0),u'lodash/map':Js(476.0)})
@Js
def PyJs_anonymous_576_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_findLast', u'exports', u'module', u'_find', u'_isInteger2', u'_interopRequireDefault', u'_buffer2', u'_getIterator2', u'_getIterator3', u'Printer', u'_arr', u'_buffer', u'_i2', u'_node', u'_weakSet', u'SCIENTIFIC_NOTATION', u'_classCallCheck3', u'_classCallCheck2', u'_findLast2', u'_babelTypes', u'_stringify2', u'_isInteger', u'_interopRequireWildcard', u'_assign', u'_weakSet2', u'_whitespace2', u'_repeat2', u'_assign2', u'commaSeparator', u'generator', u'require', u'n', u'_repeat', u'_whitespace', u'_stringify', u't', u'_find2', u'NON_DECIMAL_LITERAL', u'ZERO_DECIMAL_INTEGER'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_578_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_578_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_commaSeparator_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        var.get(u"this").callprop(u'token', Js(u','))
        var.get(u"this").callprop(u'space')
    PyJsHoisted_commaSeparator_.func_name = u'commaSeparator'
    var.put(u'commaSeparator', PyJsHoisted_commaSeparator_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_577_ = Js({})
            var.put(u'newObj', PyJs_Object_577_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_assign', var.get(u'require')(Js(u'babel-runtime/core-js/object/assign')))
    var.put(u'_assign2', var.get(u'_interopRequireDefault')(var.get(u'_assign')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_stringify', var.get(u'require')(Js(u'babel-runtime/core-js/json/stringify')))
    var.put(u'_stringify2', var.get(u'_interopRequireDefault')(var.get(u'_stringify')))
    var.put(u'_weakSet', var.get(u'require')(Js(u'babel-runtime/core-js/weak-set')))
    var.put(u'_weakSet2', var.get(u'_interopRequireDefault')(var.get(u'_weakSet')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_find', var.get(u'require')(Js(u'lodash/find')))
    var.put(u'_find2', var.get(u'_interopRequireDefault')(var.get(u'_find')))
    var.put(u'_findLast', var.get(u'require')(Js(u'lodash/findLast')))
    var.put(u'_findLast2', var.get(u'_interopRequireDefault')(var.get(u'_findLast')))
    var.put(u'_isInteger', var.get(u'require')(Js(u'lodash/isInteger')))
    var.put(u'_isInteger2', var.get(u'_interopRequireDefault')(var.get(u'_isInteger')))
    var.put(u'_repeat', var.get(u'require')(Js(u'lodash/repeat')))
    var.put(u'_repeat2', var.get(u'_interopRequireDefault')(var.get(u'_repeat')))
    var.put(u'_buffer', var.get(u'require')(Js(u'./buffer')))
    var.put(u'_buffer2', var.get(u'_interopRequireDefault')(var.get(u'_buffer')))
    var.put(u'_node', var.get(u'require')(Js(u'./node')))
    var.put(u'n', var.get(u'_interopRequireWildcard')(var.get(u'_node')))
    var.put(u'_whitespace', var.get(u'require')(Js(u'./whitespace')))
    var.put(u'_whitespace2', var.get(u'_interopRequireDefault')(var.get(u'_whitespace')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'SCIENTIFIC_NOTATION', JsRegExp(u'/e/i'))
    var.put(u'ZERO_DECIMAL_INTEGER', JsRegExp(u'/\\.0+$/'))
    var.put(u'NON_DECIMAL_LITERAL', JsRegExp(u'/^0[box]/'))
    @Js
    def PyJs_anonymous_579_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'Printer'])
        @Js
        def PyJsHoisted_Printer_(format, map, tokens, this, arguments, var=var):
            var = Scope({u'tokens':tokens, u'map':map, u'this':this, u'arguments':arguments, u'format':format}, var)
            var.registers([u'tokens', u'map', u'format'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Printer'))
            var.get(u"this").put(u'inForStatementInitCounter', Js(0.0))
            var.get(u"this").put(u'_printStack', Js([]))
            var.get(u"this").put(u'_indent', Js(0.0))
            var.get(u"this").put(u'_insideAux', Js(False))
            PyJs_Object_580_ = Js({})
            var.get(u"this").put(u'_printedCommentStarts', PyJs_Object_580_)
            var.get(u"this").put(u'_parenPushNewlineState', var.get(u"null"))
            var.get(u"this").put(u'_printAuxAfterOnNextUserNode', Js(False))
            var.get(u"this").put(u'_printedComments', var.get(u'_weakSet2').get(u'default').create())
            var.get(u"this").put(u'_endsWithInteger', Js(False))
            var.get(u"this").put(u'_endsWithWord', Js(False))
            PyJs_Object_581_ = Js({})
            var.get(u"this").put(u'format', (var.get(u'format') or PyJs_Object_581_))
            var.get(u"this").put(u'_buf', var.get(u'_buffer2').get(u'default').create(var.get(u'map')))
            var.get(u"this").put(u'_whitespace', (var.get(u'_whitespace2').get(u'default').create(var.get(u'tokens')) if (var.get(u'tokens').get(u'length')>Js(0.0)) else var.get(u"null")))
        PyJsHoisted_Printer_.func_name = u'Printer'
        var.put(u'Printer', PyJsHoisted_Printer_)
        pass
        @Js
        def PyJs_generate_582_(ast, this, arguments, var=var):
            var = Scope({u'this':this, u'generate':PyJs_generate_582_, u'arguments':arguments, u'ast':ast}, var)
            var.registers([u'ast'])
            var.get(u"this").callprop(u'print', var.get(u'ast'))
            var.get(u"this").callprop(u'_maybeAddAuxComment')
            return var.get(u"this").get(u'_buf').callprop(u'get')
        PyJs_generate_582_._set_name(u'generate')
        var.get(u'Printer').get(u'prototype').put(u'generate', PyJs_generate_582_)
        @Js
        def PyJs_indent_583_(this, arguments, var=var):
            var = Scope({u'this':this, u'indent':PyJs_indent_583_, u'arguments':arguments}, var)
            var.registers([])
            if (var.get(u"this").get(u'format').get(u'compact') or var.get(u"this").get(u'format').get(u'concise')):
                return var.get('undefined')
            (var.get(u"this").put(u'_indent',Js(var.get(u"this").get(u'_indent').to_number())+Js(1))-Js(1))
        PyJs_indent_583_._set_name(u'indent')
        var.get(u'Printer').get(u'prototype').put(u'indent', PyJs_indent_583_)
        @Js
        def PyJs_dedent_584_(this, arguments, var=var):
            var = Scope({u'this':this, u'dedent':PyJs_dedent_584_, u'arguments':arguments}, var)
            var.registers([])
            if (var.get(u"this").get(u'format').get(u'compact') or var.get(u"this").get(u'format').get(u'concise')):
                return var.get('undefined')
            (var.get(u"this").put(u'_indent',Js(var.get(u"this").get(u'_indent').to_number())-Js(1))+Js(1))
        PyJs_dedent_584_._set_name(u'dedent')
        var.get(u'Printer').get(u'prototype').put(u'dedent', PyJs_dedent_584_)
        @Js
        def PyJs_semicolon_585_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'semicolon':PyJs_semicolon_585_}, var)
            var.registers([u'force'])
            var.put(u'force', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else Js(False)))
            var.get(u"this").callprop(u'_maybeAddAuxComment')
            var.get(u"this").callprop(u'_append', Js(u';'), var.get(u'force').neg())
        PyJs_semicolon_585_._set_name(u'semicolon')
        var.get(u'Printer').get(u'prototype').put(u'semicolon', PyJs_semicolon_585_)
        @Js
        def PyJs_rightBrace_586_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'rightBrace':PyJs_rightBrace_586_}, var)
            var.registers([])
            if var.get(u"this").get(u'format').get(u'minified'):
                var.get(u"this").get(u'_buf').callprop(u'removeLastSemicolon')
            var.get(u"this").callprop(u'token', Js(u'}'))
        PyJs_rightBrace_586_._set_name(u'rightBrace')
        var.get(u'Printer').get(u'prototype').put(u'rightBrace', PyJs_rightBrace_586_)
        @Js
        def PyJs_space_587_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'space':PyJs_space_587_}, var)
            var.registers([u'force'])
            var.put(u'force', (var.get(u'arguments').get(u'0') if ((var.get(u'arguments').get(u'length')>Js(0.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'0'),var.get(u'undefined'))) else Js(False)))
            if var.get(u"this").get(u'format').get(u'compact'):
                return var.get('undefined')
            if (((var.get(u"this").get(u'_buf').callprop(u'hasContent') and var.get(u"this").callprop(u'endsWith', Js(u' ')).neg()) and var.get(u"this").callprop(u'endsWith', Js(u'\n')).neg()) or var.get(u'force')):
                var.get(u"this").callprop(u'_space')
        PyJs_space_587_._set_name(u'space')
        var.get(u'Printer').get(u'prototype').put(u'space', PyJs_space_587_)
        @Js
        def PyJs_word_588_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'word':PyJs_word_588_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'str'])
            if var.get(u"this").get(u'_endsWithWord'):
                var.get(u"this").callprop(u'_space')
            var.get(u"this").callprop(u'_maybeAddAuxComment')
            var.get(u"this").callprop(u'_append', var.get(u'str'))
            var.get(u"this").put(u'_endsWithWord', var.get(u'true'))
        PyJs_word_588_._set_name(u'word')
        var.get(u'Printer').get(u'prototype').put(u'word', PyJs_word_588_)
        @Js
        def PyJs_number_589_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'str':str, u'number':PyJs_number_589_}, var)
            var.registers([u'str'])
            var.get(u"this").callprop(u'word', var.get(u'str'))
            def PyJs_LONG_590_(var=var):
                return ((((PyJsComma(Js(0.0),var.get(u'_isInteger2').get(u'default'))((+var.get(u'str'))) and var.get(u'NON_DECIMAL_LITERAL').callprop(u'test', var.get(u'str')).neg()) and var.get(u'SCIENTIFIC_NOTATION').callprop(u'test', var.get(u'str')).neg()) and var.get(u'ZERO_DECIMAL_INTEGER').callprop(u'test', var.get(u'str')).neg()) and PyJsStrictNeq(var.get(u'str').get((var.get(u'str').get(u'length')-Js(1.0))),Js(u'.')))
            var.get(u"this").put(u'_endsWithInteger', PyJs_LONG_590_())
        PyJs_number_589_._set_name(u'number')
        var.get(u'Printer').get(u'prototype').put(u'number', PyJs_number_589_)
        @Js
        def PyJs_token_591_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'token':PyJs_token_591_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'str'])
            def PyJs_LONG_592_(var=var):
                return ((((PyJsStrictEq(var.get(u'str'),Js(u'--')) and var.get(u"this").callprop(u'endsWith', Js(u'!'))) or (PyJsStrictEq(var.get(u'str').get(u'0'),Js(u'+')) and var.get(u"this").callprop(u'endsWith', Js(u'+')))) or (PyJsStrictEq(var.get(u'str').get(u'0'),Js(u'-')) and var.get(u"this").callprop(u'endsWith', Js(u'-')))) or (PyJsStrictEq(var.get(u'str').get(u'0'),Js(u'.')) and var.get(u"this").get(u'_endsWithInteger')))
            if PyJs_LONG_592_():
                var.get(u"this").callprop(u'_space')
            var.get(u"this").callprop(u'_maybeAddAuxComment')
            var.get(u"this").callprop(u'_append', var.get(u'str'))
        PyJs_token_591_._set_name(u'token')
        var.get(u'Printer').get(u'prototype').put(u'token', PyJs_token_591_)
        @Js
        def PyJs_newline_593_(i, this, arguments, var=var):
            var = Scope({u'i':i, u'this':this, u'newline':PyJs_newline_593_, u'arguments':arguments}, var)
            var.registers([u'i', u'j'])
            if (var.get(u"this").get(u'format').get(u'retainLines') or var.get(u"this").get(u'format').get(u'compact')):
                return var.get('undefined')
            if var.get(u"this").get(u'format').get(u'concise'):
                var.get(u"this").callprop(u'space')
                return var.get('undefined')
            if var.get(u"this").callprop(u'endsWith', Js(u'\n\n')):
                return var.get('undefined')
            if PyJsStrictNeq(var.get(u'i',throw=False).typeof(),Js(u'number')):
                var.put(u'i', Js(1.0))
            var.put(u'i', var.get(u'Math').callprop(u'min', Js(2.0), var.get(u'i')))
            if (var.get(u"this").callprop(u'endsWith', Js(u'{\n')) or var.get(u"this").callprop(u'endsWith', Js(u':\n'))):
                (var.put(u'i',Js(var.get(u'i').to_number())-Js(1))+Js(1))
            if (var.get(u'i')<=Js(0.0)):
                return var.get('undefined')
            #for JS loop
            var.put(u'j', Js(0.0))
            while (var.get(u'j')<var.get(u'i')):
                try:
                    var.get(u"this").callprop(u'_newline')
                finally:
                        (var.put(u'j',Js(var.get(u'j').to_number())+Js(1))-Js(1))
        PyJs_newline_593_._set_name(u'newline')
        var.get(u'Printer').get(u'prototype').put(u'newline', PyJs_newline_593_)
        @Js
        def PyJs_endsWith_594_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'endsWith':PyJs_endsWith_594_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'str'])
            return var.get(u"this").get(u'_buf').callprop(u'endsWith', var.get(u'str'))
        PyJs_endsWith_594_._set_name(u'endsWith')
        var.get(u'Printer').get(u'prototype').put(u'endsWith', PyJs_endsWith_594_)
        @Js
        def PyJs_removeTrailingNewline_595_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'removeTrailingNewline':PyJs_removeTrailingNewline_595_}, var)
            var.registers([])
            var.get(u"this").get(u'_buf').callprop(u'removeTrailingNewline')
        PyJs_removeTrailingNewline_595_._set_name(u'removeTrailingNewline')
        var.get(u'Printer').get(u'prototype').put(u'removeTrailingNewline', PyJs_removeTrailingNewline_595_)
        @Js
        def PyJs_source_596_(prop, loc, this, arguments, var=var):
            var = Scope({u'this':this, u'loc':loc, u'source':PyJs_source_596_, u'arguments':arguments, u'prop':prop}, var)
            var.registers([u'loc', u'prop'])
            var.get(u"this").callprop(u'_catchUp', var.get(u'prop'), var.get(u'loc'))
            var.get(u"this").get(u'_buf').callprop(u'source', var.get(u'prop'), var.get(u'loc'))
        PyJs_source_596_._set_name(u'source')
        var.get(u'Printer').get(u'prototype').put(u'source', PyJs_source_596_)
        @Js
        def PyJs_withSource_597_(prop, loc, cb, this, arguments, var=var):
            var = Scope({u'loc':loc, u'this':this, u'cb':cb, u'prop':prop, u'withSource':PyJs_withSource_597_, u'arguments':arguments}, var)
            var.registers([u'loc', u'cb', u'prop'])
            var.get(u"this").callprop(u'_catchUp', var.get(u'prop'), var.get(u'loc'))
            var.get(u"this").get(u'_buf').callprop(u'withSource', var.get(u'prop'), var.get(u'loc'), var.get(u'cb'))
        PyJs_withSource_597_._set_name(u'withSource')
        var.get(u'Printer').get(u'prototype').put(u'withSource', PyJs_withSource_597_)
        @Js
        def PyJs__space_598_(this, arguments, var=var):
            var = Scope({u'this':this, u'_space':PyJs__space_598_, u'arguments':arguments}, var)
            var.registers([])
            var.get(u"this").callprop(u'_append', Js(u' '), var.get(u'true'))
        PyJs__space_598_._set_name(u'_space')
        var.get(u'Printer').get(u'prototype').put(u'_space', PyJs__space_598_)
        @Js
        def PyJs__newline_599_(this, arguments, var=var):
            var = Scope({u'this':this, u'_newline':PyJs__newline_599_, u'arguments':arguments}, var)
            var.registers([])
            var.get(u"this").callprop(u'_append', Js(u'\n'), var.get(u'true'))
        PyJs__newline_599_._set_name(u'_newline')
        var.get(u'Printer').get(u'prototype').put(u'_newline', PyJs__newline_599_)
        @Js
        def PyJs__append_600_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'_append':PyJs__append_600_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'queue', u'str'])
            var.put(u'queue', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else Js(False)))
            var.get(u"this").callprop(u'_maybeAddParen', var.get(u'str'))
            var.get(u"this").callprop(u'_maybeIndent', var.get(u'str'))
            if var.get(u'queue'):
                var.get(u"this").get(u'_buf').callprop(u'queue', var.get(u'str'))
            else:
                var.get(u"this").get(u'_buf').callprop(u'append', var.get(u'str'))
            var.get(u"this").put(u'_endsWithWord', Js(False))
            var.get(u"this").put(u'_endsWithInteger', Js(False))
        PyJs__append_600_._set_name(u'_append')
        var.get(u'Printer').get(u'prototype').put(u'_append', PyJs__append_600_)
        @Js
        def PyJs__maybeIndent_601_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'str':str, u'_maybeIndent':PyJs__maybeIndent_601_}, var)
            var.registers([u'str'])
            if ((var.get(u"this").get(u'_indent') and var.get(u"this").callprop(u'endsWith', Js(u'\n'))) and PyJsStrictNeq(var.get(u'str').get(u'0'),Js(u'\n'))):
                var.get(u"this").get(u'_buf').callprop(u'queue', var.get(u"this").callprop(u'_getIndent'))
        PyJs__maybeIndent_601_._set_name(u'_maybeIndent')
        var.get(u'Printer').get(u'prototype').put(u'_maybeIndent', PyJs__maybeIndent_601_)
        @Js
        def PyJs__maybeAddParen_602_(str, this, arguments, var=var):
            var = Scope({u'this':this, u'_maybeAddParen':PyJs__maybeAddParen_602_, u'arguments':arguments, u'str':str}, var)
            var.registers([u'i', u'cha', u'str', u'parenPushNewlineState'])
            var.put(u'parenPushNewlineState', var.get(u"this").get(u'_parenPushNewlineState'))
            if var.get(u'parenPushNewlineState').neg():
                return var.get('undefined')
            var.get(u"this").put(u'_parenPushNewlineState', var.get(u"null"))
            var.put(u'i', PyJsComma(Js(0.0), Js(None)))
            #for JS loop
            var.put(u'i', Js(0.0))
            while ((var.get(u'i')<var.get(u'str').get(u'length')) and PyJsStrictEq(var.get(u'str').get(var.get(u'i')),Js(u' '))):
                try:
                    continue
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            if PyJsStrictEq(var.get(u'i'),var.get(u'str').get(u'length')):
                return var.get('undefined')
            var.put(u'cha', var.get(u'str').get(var.get(u'i')))
            if (PyJsStrictEq(var.get(u'cha'),Js(u'\n')) or PyJsStrictEq(var.get(u'cha'),Js(u'/'))):
                var.get(u"this").callprop(u'token', Js(u'('))
                var.get(u"this").callprop(u'indent')
                var.get(u'parenPushNewlineState').put(u'printed', var.get(u'true'))
        PyJs__maybeAddParen_602_._set_name(u'_maybeAddParen')
        var.get(u'Printer').get(u'prototype').put(u'_maybeAddParen', PyJs__maybeAddParen_602_)
        @Js
        def PyJs__catchUp_603_(prop, loc, this, arguments, var=var):
            var = Scope({u'this':this, u'loc':loc, u'_catchUp':PyJs__catchUp_603_, u'arguments':arguments, u'prop':prop}, var)
            var.registers([u'count', u'i', u'loc', u'pos', u'prop'])
            if var.get(u"this").get(u'format').get(u'retainLines').neg():
                return var.get('undefined')
            var.put(u'pos', (var.get(u'loc').get(var.get(u'prop')) if var.get(u'loc') else var.get(u"null")))
            if (var.get(u'pos') and PyJsStrictNeq(var.get(u'pos').get(u'line'),var.get(u"null"))):
                var.put(u'count', (var.get(u'pos').get(u'line')-var.get(u"this").get(u'_buf').callprop(u'getCurrentLine')))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'count')):
                    try:
                        var.get(u"this").callprop(u'_newline')
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        PyJs__catchUp_603_._set_name(u'_catchUp')
        var.get(u'Printer').get(u'prototype').put(u'_catchUp', PyJs__catchUp_603_)
        @Js
        def PyJs__getIndent_604_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'_getIndent':PyJs__getIndent_604_}, var)
            var.registers([])
            return PyJsComma(Js(0.0),var.get(u'_repeat2').get(u'default'))(var.get(u"this").get(u'format').get(u'indent').get(u'style'), var.get(u"this").get(u'_indent'))
        PyJs__getIndent_604_._set_name(u'_getIndent')
        var.get(u'Printer').get(u'prototype').put(u'_getIndent', PyJs__getIndent_604_)
        @Js
        def PyJs_startTerminatorless_605_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'startTerminatorless':PyJs_startTerminatorless_605_}, var)
            var.registers([])
            PyJs_Object_606_ = Js({u'printed':Js(False)})
            return var.get(u"this").put(u'_parenPushNewlineState', PyJs_Object_606_)
        PyJs_startTerminatorless_605_._set_name(u'startTerminatorless')
        var.get(u'Printer').get(u'prototype').put(u'startTerminatorless', PyJs_startTerminatorless_605_)
        @Js
        def PyJs_endTerminatorless_607_(state, this, arguments, var=var):
            var = Scope({u'this':this, u'state':state, u'endTerminatorless':PyJs_endTerminatorless_607_, u'arguments':arguments}, var)
            var.registers([u'state'])
            if var.get(u'state').get(u'printed'):
                var.get(u"this").callprop(u'dedent')
                var.get(u"this").callprop(u'newline')
                var.get(u"this").callprop(u'token', Js(u')'))
        PyJs_endTerminatorless_607_._set_name(u'endTerminatorless')
        var.get(u'Printer').get(u'prototype').put(u'endTerminatorless', PyJs_endTerminatorless_607_)
        @Js
        def PyJs_InlineNonPyName_608_(node, parent, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'print':PyJs_InlineNonPyName_608_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'node', u'loc', u'needsParens', u'parent', u'_this', u'printMethod', u'oldInAux', u'oldConcise'])
            var.put(u'_this', var.get(u"this"))
            if var.get(u'node').neg():
                return var.get('undefined')
            var.put(u'oldConcise', var.get(u"this").get(u'format').get(u'concise'))
            if var.get(u'node').get(u'_compact'):
                var.get(u"this").get(u'format').put(u'concise', var.get(u'true'))
            var.put(u'printMethod', var.get(u"this").get(var.get(u'node').get(u'type')))
            if var.get(u'printMethod').neg():
                PyJsTempException = JsToPyException(var.get(u'ReferenceError').create((((Js(u'unknown node of type ')+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'node').get(u'type')))+Js(u' with constructor '))+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))((var.get(u'node') and var.get(u'node').get(u'constructor').get(u'name'))))))
                raise PyJsTempException
            var.get(u"this").get(u'_printStack').callprop(u'push', var.get(u'node'))
            var.put(u'oldInAux', var.get(u"this").get(u'_insideAux'))
            var.get(u"this").put(u'_insideAux', var.get(u'node').get(u'loc').neg())
            var.get(u"this").callprop(u'_maybeAddAuxComment', (var.get(u"this").get(u'_insideAux') and var.get(u'oldInAux').neg()))
            var.put(u'needsParens', var.get(u'n').callprop(u'needsParens', var.get(u'node'), var.get(u'parent'), var.get(u"this").get(u'_printStack')))
            if (((var.get(u"this").get(u'format').get(u'retainFunctionParens') and PyJsStrictEq(var.get(u'node').get(u'type'),Js(u'FunctionExpression'))) and var.get(u'node').get(u'extra')) and var.get(u'node').get(u'extra').get(u'parenthesized')):
                var.put(u'needsParens', var.get(u'true'))
            if var.get(u'needsParens'):
                var.get(u"this").callprop(u'token', Js(u'('))
            var.get(u"this").callprop(u'_printLeadingComments', var.get(u'node'), var.get(u'parent'))
            var.put(u'loc', (var.get(u"null") if (var.get(u't').callprop(u'isProgram', var.get(u'node')) or var.get(u't').callprop(u'isFile', var.get(u'node'))) else var.get(u'node').get(u'loc')))
            @Js
            def PyJs_anonymous_609_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                var.get(u'_this').callprop(var.get(u'node').get(u'type'), var.get(u'node'), var.get(u'parent'))
            PyJs_anonymous_609_._set_name(u'anonymous')
            var.get(u"this").callprop(u'withSource', Js(u'start'), var.get(u'loc'), PyJs_anonymous_609_)
            var.get(u"this").callprop(u'_printTrailingComments', var.get(u'node'), var.get(u'parent'))
            if var.get(u'needsParens'):
                var.get(u"this").callprop(u'token', Js(u')'))
            var.get(u"this").get(u'_printStack').callprop(u'pop')
            var.get(u"this").get(u'format').put(u'concise', var.get(u'oldConcise'))
            var.get(u"this").put(u'_insideAux', var.get(u'oldInAux'))
        PyJs_InlineNonPyName_608_._set_name(u'print')
        var.get(u'Printer').get(u'prototype').put(u'print', PyJs_InlineNonPyName_608_)
        @Js
        def PyJs__maybeAddAuxComment_610_(enteredPositionlessNode, this, arguments, var=var):
            var = Scope({u'enteredPositionlessNode':enteredPositionlessNode, u'this':this, u'_maybeAddAuxComment':PyJs__maybeAddAuxComment_610_, u'arguments':arguments}, var)
            var.registers([u'enteredPositionlessNode'])
            if var.get(u'enteredPositionlessNode'):
                var.get(u"this").callprop(u'_printAuxBeforeComment')
            if var.get(u"this").get(u'_insideAux').neg():
                var.get(u"this").callprop(u'_printAuxAfterComment')
        PyJs__maybeAddAuxComment_610_._set_name(u'_maybeAddAuxComment')
        var.get(u'Printer').get(u'prototype').put(u'_maybeAddAuxComment', PyJs__maybeAddAuxComment_610_)
        @Js
        def PyJs__printAuxBeforeComment_611_(this, arguments, var=var):
            var = Scope({u'this':this, u'_printAuxBeforeComment':PyJs__printAuxBeforeComment_611_, u'arguments':arguments}, var)
            var.registers([u'comment'])
            if var.get(u"this").get(u'_printAuxAfterOnNextUserNode'):
                return var.get('undefined')
            var.get(u"this").put(u'_printAuxAfterOnNextUserNode', var.get(u'true'))
            var.put(u'comment', var.get(u"this").get(u'format').get(u'auxiliaryCommentBefore'))
            if var.get(u'comment'):
                PyJs_Object_612_ = Js({u'type':Js(u'CommentBlock'),u'value':var.get(u'comment')})
                var.get(u"this").callprop(u'_printComment', PyJs_Object_612_)
        PyJs__printAuxBeforeComment_611_._set_name(u'_printAuxBeforeComment')
        var.get(u'Printer').get(u'prototype').put(u'_printAuxBeforeComment', PyJs__printAuxBeforeComment_611_)
        @Js
        def PyJs__printAuxAfterComment_613_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'_printAuxAfterComment':PyJs__printAuxAfterComment_613_}, var)
            var.registers([u'comment'])
            if var.get(u"this").get(u'_printAuxAfterOnNextUserNode').neg():
                return var.get('undefined')
            var.get(u"this").put(u'_printAuxAfterOnNextUserNode', Js(False))
            var.put(u'comment', var.get(u"this").get(u'format').get(u'auxiliaryCommentAfter'))
            if var.get(u'comment'):
                PyJs_Object_614_ = Js({u'type':Js(u'CommentBlock'),u'value':var.get(u'comment')})
                var.get(u"this").callprop(u'_printComment', PyJs_Object_614_)
        PyJs__printAuxAfterComment_613_._set_name(u'_printAuxAfterComment')
        var.get(u'Printer').get(u'prototype').put(u'_printAuxAfterComment', PyJs__printAuxAfterComment_613_)
        @Js
        def PyJs_getPossibleRaw_615_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'getPossibleRaw':PyJs_getPossibleRaw_615_}, var)
            var.registers([u'node', u'extra'])
            if var.get(u"this").get(u'format').get(u'minified'):
                return var.get('undefined')
            var.put(u'extra', var.get(u'node').get(u'extra'))
            if (((var.get(u'extra') and (var.get(u'extra').get(u'raw')!=var.get(u"null"))) and (var.get(u'extra').get(u'rawValue')!=var.get(u"null"))) and PyJsStrictEq(var.get(u'node').get(u'value'),var.get(u'extra').get(u'rawValue'))):
                return var.get(u'extra').get(u'raw')
        PyJs_getPossibleRaw_615_._set_name(u'getPossibleRaw')
        var.get(u'Printer').get(u'prototype').put(u'getPossibleRaw', PyJs_getPossibleRaw_615_)
        @Js
        def PyJs_printJoin_616_(nodes, parent, this, arguments, var=var):
            var = Scope({u'this':this, u'nodes':nodes, u'printJoin':PyJs_printJoin_616_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'node', u'parent', u'i', u'newlineOpts', u'nodes', u'opts'])
            PyJs_Object_617_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else PyJs_Object_617_))
            if (var.get(u'nodes').neg() or var.get(u'nodes').get(u'length').neg()):
                return var.get('undefined')
            if var.get(u'opts').get(u'indent'):
                var.get(u"this").callprop(u'indent')
            PyJs_Object_618_ = Js({u'addNewlines':var.get(u'opts').get(u'addNewlines')})
            var.put(u'newlineOpts', PyJs_Object_618_)
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'nodes').get(u'length')):
                try:
                    var.put(u'node', var.get(u'nodes').get(var.get(u'i')))
                    if var.get(u'node').neg():
                        continue
                    if var.get(u'opts').get(u'statement'):
                        var.get(u"this").callprop(u'_printNewline', var.get(u'true'), var.get(u'node'), var.get(u'parent'), var.get(u'newlineOpts'))
                    var.get(u"this").callprop(u'print', var.get(u'node'), var.get(u'parent'))
                    if var.get(u'opts').get(u'iterator'):
                        var.get(u'opts').callprop(u'iterator', var.get(u'node'), var.get(u'i'))
                    if (var.get(u'opts').get(u'separator') and (var.get(u'i')<(var.get(u'nodes').get(u'length')-Js(1.0)))):
                        var.get(u'opts').get(u'separator').callprop(u'call', var.get(u"this"))
                    if var.get(u'opts').get(u'statement'):
                        var.get(u"this").callprop(u'_printNewline', Js(False), var.get(u'node'), var.get(u'parent'), var.get(u'newlineOpts'))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            if var.get(u'opts').get(u'indent'):
                var.get(u"this").callprop(u'dedent')
        PyJs_printJoin_616_._set_name(u'printJoin')
        var.get(u'Printer').get(u'prototype').put(u'printJoin', PyJs_printJoin_616_)
        @Js
        def PyJs_printAndIndentOnComments_619_(node, parent, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'printAndIndentOnComments':PyJs_printAndIndentOnComments_619_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'node', u'indent', u'parent'])
            var.put(u'indent', var.get(u'node').get(u'leadingComments').neg().neg())
            if var.get(u'indent'):
                var.get(u"this").callprop(u'indent')
            var.get(u"this").callprop(u'print', var.get(u'node'), var.get(u'parent'))
            if var.get(u'indent'):
                var.get(u"this").callprop(u'dedent')
        PyJs_printAndIndentOnComments_619_._set_name(u'printAndIndentOnComments')
        var.get(u'Printer').get(u'prototype').put(u'printAndIndentOnComments', PyJs_printAndIndentOnComments_619_)
        @Js
        def PyJs_printBlock_620_(parent, this, arguments, var=var):
            var = Scope({u'this':this, u'printBlock':PyJs_printBlock_620_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'node', u'parent'])
            var.put(u'node', var.get(u'parent').get(u'body'))
            if var.get(u't').callprop(u'isEmptyStatement', var.get(u'node')).neg():
                var.get(u"this").callprop(u'space')
            var.get(u"this").callprop(u'print', var.get(u'node'), var.get(u'parent'))
        PyJs_printBlock_620_._set_name(u'printBlock')
        var.get(u'Printer').get(u'prototype').put(u'printBlock', PyJs_printBlock_620_)
        @Js
        def PyJs__printTrailingComments_621_(node, parent, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'_printTrailingComments':PyJs__printTrailingComments_621_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'node', u'parent'])
            var.get(u"this").callprop(u'_printComments', var.get(u"this").callprop(u'_getComments', Js(False), var.get(u'node'), var.get(u'parent')))
        PyJs__printTrailingComments_621_._set_name(u'_printTrailingComments')
        var.get(u'Printer').get(u'prototype').put(u'_printTrailingComments', PyJs__printTrailingComments_621_)
        @Js
        def PyJs__printLeadingComments_622_(node, parent, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent, u'_printLeadingComments':PyJs__printLeadingComments_622_}, var)
            var.registers([u'node', u'parent'])
            var.get(u"this").callprop(u'_printComments', var.get(u"this").callprop(u'_getComments', var.get(u'true'), var.get(u'node'), var.get(u'parent')))
        PyJs__printLeadingComments_622_._set_name(u'_printLeadingComments')
        var.get(u'Printer').get(u'prototype').put(u'_printLeadingComments', PyJs__printLeadingComments_622_)
        @Js
        def PyJs_printInnerComments_623_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'printInnerComments':PyJs_printInnerComments_623_, u'arguments':arguments}, var)
            var.registers([u'node', u'indent'])
            var.put(u'indent', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else var.get(u'true')))
            if var.get(u'node').get(u'innerComments').neg():
                return var.get('undefined')
            if var.get(u'indent'):
                var.get(u"this").callprop(u'indent')
            var.get(u"this").callprop(u'_printComments', var.get(u'node').get(u'innerComments'))
            if var.get(u'indent'):
                var.get(u"this").callprop(u'dedent')
        PyJs_printInnerComments_623_._set_name(u'printInnerComments')
        var.get(u'Printer').get(u'prototype').put(u'printInnerComments', PyJs_printInnerComments_623_)
        @Js
        def PyJs_printSequence_624_(nodes, parent, this, arguments, var=var):
            var = Scope({u'this':this, u'nodes':nodes, u'arguments':arguments, u'parent':parent, u'printSequence':PyJs_printSequence_624_}, var)
            var.registers([u'nodes', u'parent', u'opts'])
            PyJs_Object_625_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else PyJs_Object_625_))
            var.get(u'opts').put(u'statement', var.get(u'true'))
            return var.get(u"this").callprop(u'printJoin', var.get(u'nodes'), var.get(u'parent'), var.get(u'opts'))
        PyJs_printSequence_624_._set_name(u'printSequence')
        var.get(u'Printer').get(u'prototype').put(u'printSequence', PyJs_printSequence_624_)
        @Js
        def PyJs_printList_626_(items, parent, this, arguments, var=var):
            var = Scope({u'this':this, u'items':items, u'printList':PyJs_printList_626_, u'arguments':arguments, u'parent':parent}, var)
            var.registers([u'items', u'parent', u'opts'])
            PyJs_Object_627_ = Js({})
            var.put(u'opts', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else PyJs_Object_627_))
            if (var.get(u'opts').get(u'separator')==var.get(u"null")):
                var.get(u'opts').put(u'separator', var.get(u'commaSeparator'))
            return var.get(u"this").callprop(u'printJoin', var.get(u'items'), var.get(u'parent'), var.get(u'opts'))
        PyJs_printList_626_._set_name(u'printList')
        var.get(u'Printer').get(u'prototype').put(u'printList', PyJs_printList_626_)
        @Js
        def PyJs__printNewline_628_(leading, node, parent, opts, this, arguments, var=var):
            var = Scope({u'node':node, u'_printNewline':PyJs__printNewline_628_, u'arguments':arguments, u'parent':parent, u'this':this, u'leading':leading, u'opts':opts}, var)
            var.registers([u'node', u'needs', u'parent', u'_comments2', u'leading', u'_comment', u'lines', u'_this2', u'_comments', u'_comment2', u'opts'])
            var.put(u'_this2', var.get(u"this"))
            if (var.get(u"this").get(u'format').get(u'retainLines') or var.get(u"this").get(u'format').get(u'compact')):
                return var.get('undefined')
            if var.get(u"this").get(u'format').get(u'concise'):
                var.get(u"this").callprop(u'space')
                return var.get('undefined')
            var.put(u'lines', Js(0.0))
            if (((var.get(u'node').get(u'start')!=var.get(u"null")) and var.get(u'node').get(u'_ignoreUserWhitespace').neg()) and var.get(u"this").get(u'_whitespace')):
                if var.get(u'leading'):
                    var.put(u'_comments', var.get(u'node').get(u'leadingComments'))
                    @Js
                    def PyJs_anonymous_629_(comment, this, arguments, var=var):
                        var = Scope({u'comment':comment, u'this':this, u'arguments':arguments}, var)
                        var.registers([u'comment'])
                        return (var.get(u'comment').get(u'loc').neg().neg() and var.get(u'_this2').get(u'format').callprop(u'shouldPrintComment', var.get(u'comment').get(u'value')))
                    PyJs_anonymous_629_._set_name(u'anonymous')
                    var.put(u'_comment', (var.get(u'_comments') and PyJsComma(Js(0.0),var.get(u'_find2').get(u'default'))(var.get(u'_comments'), PyJs_anonymous_629_)))
                    var.put(u'lines', var.get(u"this").get(u'_whitespace').callprop(u'getNewlinesBefore', (var.get(u'_comment') or var.get(u'node'))))
                else:
                    var.put(u'_comments2', var.get(u'node').get(u'trailingComments'))
                    @Js
                    def PyJs_anonymous_630_(comment, this, arguments, var=var):
                        var = Scope({u'comment':comment, u'this':this, u'arguments':arguments}, var)
                        var.registers([u'comment'])
                        return (var.get(u'comment').get(u'loc').neg().neg() and var.get(u'_this2').get(u'format').callprop(u'shouldPrintComment', var.get(u'comment').get(u'value')))
                    PyJs_anonymous_630_._set_name(u'anonymous')
                    var.put(u'_comment2', (var.get(u'_comments2') and PyJsComma(Js(0.0),var.get(u'_findLast2').get(u'default'))(var.get(u'_comments2'), PyJs_anonymous_630_)))
                    var.put(u'lines', var.get(u"this").get(u'_whitespace').callprop(u'getNewlinesAfter', (var.get(u'_comment2') or var.get(u'node'))))
            else:
                if var.get(u'leading').neg():
                    (var.put(u'lines',Js(var.get(u'lines').to_number())+Js(1))-Js(1))
                if var.get(u'opts').get(u'addNewlines'):
                    var.put(u'lines', (var.get(u'opts').callprop(u'addNewlines', var.get(u'leading'), var.get(u'node')) or Js(0.0)), u'+')
                var.put(u'needs', var.get(u'n').get(u'needsWhitespaceAfter'))
                if var.get(u'leading'):
                    var.put(u'needs', var.get(u'n').get(u'needsWhitespaceBefore'))
                if var.get(u'needs')(var.get(u'node'), var.get(u'parent')):
                    (var.put(u'lines',Js(var.get(u'lines').to_number())+Js(1))-Js(1))
                if var.get(u"this").get(u'_buf').callprop(u'hasContent').neg():
                    var.put(u'lines', Js(0.0))
            var.get(u"this").callprop(u'newline', var.get(u'lines'))
        PyJs__printNewline_628_._set_name(u'_printNewline')
        var.get(u'Printer').get(u'prototype').put(u'_printNewline', PyJs__printNewline_628_)
        @Js
        def PyJs__getComments_631_(leading, node, this, arguments, var=var):
            var = Scope({u'node':node, u'leading':leading, u'this':this, u'arguments':arguments, u'_getComments':PyJs__getComments_631_}, var)
            var.registers([u'node', u'leading'])
            return ((var.get(u'node') and (var.get(u'node').get(u'leadingComments') if var.get(u'leading') else var.get(u'node').get(u'trailingComments'))) or Js([]))
        PyJs__getComments_631_._set_name(u'_getComments')
        var.get(u'Printer').get(u'prototype').put(u'_getComments', PyJs__getComments_631_)
        @Js
        def PyJs__printComment_632_(comment, this, arguments, var=var):
            var = Scope({u'comment':comment, u'this':this, u'_printComment':PyJs__printComment_632_, u'arguments':arguments}, var)
            var.registers([u'comment', u'val', u'indentSize', u'newlineRegex', u'offset', u'_this3'])
            var.put(u'_this3', var.get(u"this"))
            if var.get(u"this").get(u'format').callprop(u'shouldPrintComment', var.get(u'comment').get(u'value')).neg():
                return var.get('undefined')
            if var.get(u'comment').get(u'ignore'):
                return var.get('undefined')
            if var.get(u"this").get(u'_printedComments').callprop(u'has', var.get(u'comment')):
                return var.get('undefined')
            var.get(u"this").get(u'_printedComments').callprop(u'add', var.get(u'comment'))
            if (var.get(u'comment').get(u'start')!=var.get(u"null")):
                if var.get(u"this").get(u'_printedCommentStarts').get(var.get(u'comment').get(u'start')):
                    return var.get('undefined')
                var.get(u"this").get(u'_printedCommentStarts').put(var.get(u'comment').get(u'start'), var.get(u'true'))
            var.get(u"this").callprop(u'newline', (var.get(u"this").get(u'_whitespace').callprop(u'getNewlinesBefore', var.get(u'comment')) if var.get(u"this").get(u'_whitespace') else Js(0.0)))
            if (var.get(u"this").callprop(u'endsWith', Js(u'[')).neg() and var.get(u"this").callprop(u'endsWith', Js(u'{')).neg()):
                var.get(u"this").callprop(u'space')
            var.put(u'val', (((Js(u'//')+var.get(u'comment').get(u'value'))+Js(u'\n')) if PyJsStrictEq(var.get(u'comment').get(u'type'),Js(u'CommentLine')) else ((Js(u'/*')+var.get(u'comment').get(u'value'))+Js(u'*/'))))
            if (PyJsStrictEq(var.get(u'comment').get(u'type'),Js(u'CommentBlock')) and var.get(u"this").get(u'format').get(u'indent').get(u'adjustMultilineComment')):
                var.put(u'offset', (var.get(u'comment').get(u'loc') and var.get(u'comment').get(u'loc').get(u'start').get(u'column')))
                if var.get(u'offset'):
                    var.put(u'newlineRegex', var.get(u'RegExp').create(((Js(u'\\n\\s{1,')+var.get(u'offset'))+Js(u'}')), Js(u'g')))
                    var.put(u'val', var.get(u'val').callprop(u'replace', var.get(u'newlineRegex'), Js(u'\n')))
                var.put(u'indentSize', var.get(u'Math').callprop(u'max', var.get(u"this").callprop(u'_getIndent').get(u'length'), var.get(u"this").get(u'_buf').callprop(u'getCurrentColumn')))
                var.put(u'val', var.get(u'val').callprop(u'replace', JsRegExp(u'/\\n(?!$)/g'), (Js(u'\n')+PyJsComma(Js(0.0),var.get(u'_repeat2').get(u'default'))(Js(u' '), var.get(u'indentSize')))))
            @Js
            def PyJs_anonymous_633_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments}, var)
                var.registers([])
                var.get(u'_this3').callprop(u'_append', var.get(u'val'))
            PyJs_anonymous_633_._set_name(u'anonymous')
            var.get(u"this").callprop(u'withSource', Js(u'start'), var.get(u'comment').get(u'loc'), PyJs_anonymous_633_)
            var.get(u"this").callprop(u'newline', ((var.get(u"this").get(u'_whitespace').callprop(u'getNewlinesAfter', var.get(u'comment')) if var.get(u"this").get(u'_whitespace') else Js(0.0))+((-Js(1.0)) if PyJsStrictEq(var.get(u'comment').get(u'type'),Js(u'CommentLine')) else Js(0.0))))
        PyJs__printComment_632_._set_name(u'_printComment')
        var.get(u'Printer').get(u'prototype').put(u'_printComment', PyJs__printComment_632_)
        @Js
        def PyJs__printComments_634_(comments, this, arguments, var=var):
            var = Scope({u'this':this, u'_printComments':PyJs__printComments_634_, u'arguments':arguments, u'comments':comments}, var)
            var.registers([u'_isArray', u'_iterator', u'comments', u'_i', u'_ref', u'_comment3'])
            if (var.get(u'comments').neg() or var.get(u'comments').get(u'length').neg()):
                return var.get('undefined')
            #for JS loop
            var.put(u'_iterator', var.get(u'comments'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'_comment3', var.get(u'_ref'))
                var.get(u"this").callprop(u'_printComment', var.get(u'_comment3'))
            
        PyJs__printComments_634_._set_name(u'_printComments')
        var.get(u'Printer').get(u'prototype').put(u'_printComments', PyJs__printComments_634_)
        return var.get(u'Printer')
    PyJs_anonymous_579_._set_name(u'anonymous')
    var.put(u'Printer', PyJs_anonymous_579_())
    var.get(u'exports').put(u'default', var.get(u'Printer'))
    pass
    var.put(u'_arr', Js([var.get(u'require')(Js(u'./generators/template-literals')), var.get(u'require')(Js(u'./generators/expressions')), var.get(u'require')(Js(u'./generators/statements')), var.get(u'require')(Js(u'./generators/classes')), var.get(u'require')(Js(u'./generators/methods')), var.get(u'require')(Js(u'./generators/modules')), var.get(u'require')(Js(u'./generators/types')), var.get(u'require')(Js(u'./generators/flow')), var.get(u'require')(Js(u'./generators/base')), var.get(u'require')(Js(u'./generators/jsx'))]))
    #for JS loop
    var.put(u'_i2', Js(0.0))
    while (var.get(u'_i2')<var.get(u'_arr').get(u'length')):
        try:
            var.put(u'generator', var.get(u'_arr').get(var.get(u'_i2')))
            PyJsComma(Js(0.0),var.get(u'_assign2').get(u'default'))(var.get(u'Printer').get(u'prototype'), var.get(u'generator'))
        finally:
                (var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_576_._set_name(u'anonymous')
PyJs_Object_635_ = Js({u'./buffer':Js(29.0),u'./generators/base':Js(30.0),u'./generators/classes':Js(31.0),u'./generators/expressions':Js(32.0),u'./generators/flow':Js(33.0),u'./generators/jsx':Js(34.0),u'./generators/methods':Js(35.0),u'./generators/modules':Js(36.0),u'./generators/statements':Js(37.0),u'./generators/template-literals':Js(38.0),u'./generators/types':Js(39.0),u'./node':Js(41.0),u'./whitespace':Js(46.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/json/stringify':Js(97.0),u'babel-runtime/core-js/object/assign':Js(100.0),u'babel-runtime/core-js/weak-set':Js(109.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-types':Js(258.0),u'lodash/find':Js(447.0),u'lodash/findLast':Js(449.0),u'lodash/isInteger':Js(464.0),u'lodash/repeat':Js(483.0)})
@Js
def PyJs_anonymous_636_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_typeof2', u'_typeof3', u'exports', u'_sourceMap', u'require', u'SourceMap', u'module', u'_keys2', u'_keys', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2', u'_sourceMap2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_637_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_637_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_keys', var.get(u'require')(Js(u'babel-runtime/core-js/object/keys')))
    var.put(u'_keys2', var.get(u'_interopRequireDefault')(var.get(u'_keys')))
    var.put(u'_typeof2', var.get(u'require')(Js(u'babel-runtime/helpers/typeof')))
    var.put(u'_typeof3', var.get(u'_interopRequireDefault')(var.get(u'_typeof2')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_sourceMap', var.get(u'require')(Js(u'source-map')))
    var.put(u'_sourceMap2', var.get(u'_interopRequireDefault')(var.get(u'_sourceMap')))
    pass
    @Js
    def PyJs_anonymous_638_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'SourceMap'])
        @Js
        def PyJsHoisted_SourceMap_(opts, code, this, arguments, var=var):
            var = Scope({u'this':this, u'code':code, u'arguments':arguments, u'opts':opts}, var)
            var.registers([u'code', u'opts', u'_this'])
            var.put(u'_this', var.get(u"this"))
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'SourceMap'))
            var.get(u"this").put(u'_opts', var.get(u'opts'))
            PyJs_Object_639_ = Js({u'file':var.get(u'opts').get(u'sourceMapTarget'),u'sourceRoot':var.get(u'opts').get(u'sourceRoot')})
            var.get(u"this").put(u'_map', var.get(u'_sourceMap2').get(u'default').get(u'SourceMapGenerator').create(PyJs_Object_639_))
            if PyJsStrictEq(var.get(u'code',throw=False).typeof(),Js(u'string')):
                var.get(u"this").get(u'_map').callprop(u'setSourceContent', var.get(u'opts').get(u'sourceFileName'), var.get(u'code'))
            else:
                if PyJsStrictEq((Js(u'undefined') if PyJsStrictEq(var.get(u'code',throw=False).typeof(),Js(u'undefined')) else PyJsComma(Js(0.0),var.get(u'_typeof3').get(u'default'))(var.get(u'code'))),Js(u'object')):
                    @Js
                    def PyJs_anonymous_640_(sourceFileName, this, arguments, var=var):
                        var = Scope({u'this':this, u'arguments':arguments, u'sourceFileName':sourceFileName}, var)
                        var.registers([u'sourceFileName'])
                        var.get(u'_this').get(u'_map').callprop(u'setSourceContent', var.get(u'sourceFileName'), var.get(u'code').get(var.get(u'sourceFileName')))
                    PyJs_anonymous_640_._set_name(u'anonymous')
                    PyJsComma(Js(0.0),var.get(u'_keys2').get(u'default'))(var.get(u'code')).callprop(u'forEach', PyJs_anonymous_640_)
        PyJsHoisted_SourceMap_.func_name = u'SourceMap'
        var.put(u'SourceMap', PyJsHoisted_SourceMap_)
        pass
        @Js
        def PyJs_get_641_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'get':PyJs_get_641_}, var)
            var.registers([])
            return var.get(u"this").get(u'_map').callprop(u'toJSON')
        PyJs_get_641_._set_name(u'get')
        var.get(u'SourceMap').get(u'prototype').put(u'get', PyJs_get_641_)
        @Js
        def PyJs_mark_642_(generatedLine, generatedColumn, line, column, identifierName, filename, this, arguments, var=var):
            var = Scope({u'generatedColumn':generatedColumn, u'identifierName':identifierName, u'column':column, u'filename':filename, u'this':this, u'generatedLine':generatedLine, u'arguments':arguments, u'line':line, u'mark':PyJs_mark_642_}, var)
            var.registers([u'generatedColumn', u'identifierName', u'column', u'filename', u'generatedLine', u'line'])
            if (PyJsStrictNeq(var.get(u"this").get(u'_lastGenLine'),var.get(u'generatedLine')) and PyJsStrictEq(var.get(u'line'),var.get(u"null"))):
                return var.get('undefined')
            if ((PyJsStrictEq(var.get(u"this").get(u'_lastGenLine'),var.get(u'generatedLine')) and PyJsStrictEq(var.get(u"this").get(u'_lastSourceLine'),var.get(u'line'))) and PyJsStrictEq(var.get(u"this").get(u'_lastSourceColumn'),var.get(u'column'))):
                return var.get('undefined')
            var.get(u"this").put(u'_lastGenLine', var.get(u'generatedLine'))
            var.get(u"this").put(u'_lastSourceLine', var.get(u'line'))
            var.get(u"this").put(u'_lastSourceColumn', var.get(u'column'))
            PyJs_Object_644_ = Js({u'line':var.get(u'generatedLine'),u'column':var.get(u'generatedColumn')})
            PyJs_Object_645_ = Js({u'line':var.get(u'line'),u'column':var.get(u'column')})
            PyJs_Object_643_ = Js({u'name':var.get(u'identifierName'),u'generated':PyJs_Object_644_,u'source':(var.get(u"null") if (var.get(u'line')==var.get(u"null")) else (var.get(u'filename') or var.get(u"this").get(u'_opts').get(u'sourceFileName'))),u'original':(var.get(u"null") if (var.get(u'line')==var.get(u"null")) else PyJs_Object_645_)})
            var.get(u"this").get(u'_map').callprop(u'addMapping', PyJs_Object_643_)
        PyJs_mark_642_._set_name(u'mark')
        var.get(u'SourceMap').get(u'prototype').put(u'mark', PyJs_mark_642_)
        return var.get(u'SourceMap')
    PyJs_anonymous_638_._set_name(u'anonymous')
    var.put(u'SourceMap', PyJs_anonymous_638_())
    var.get(u'exports').put(u'default', var.get(u'SourceMap'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_636_._set_name(u'anonymous')
PyJs_Object_646_ = Js({u'babel-runtime/core-js/object/keys':Js(103.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/typeof':Js(114.0),u'source-map':Js(519.0)})
@Js
def PyJs_anonymous_647_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'Whitespace', u'require', u'module', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_648_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_648_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    pass
    @Js
    def PyJs_anonymous_649_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'Whitespace'])
        @Js
        def PyJsHoisted_Whitespace_(tokens, this, arguments, var=var):
            var = Scope({u'tokens':tokens, u'this':this, u'arguments':arguments}, var)
            var.registers([u'tokens'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'Whitespace'))
            var.get(u"this").put(u'tokens', var.get(u'tokens'))
            PyJs_Object_650_ = Js({})
            var.get(u"this").put(u'used', PyJs_Object_650_)
        PyJsHoisted_Whitespace_.func_name = u'Whitespace'
        var.put(u'Whitespace', PyJsHoisted_Whitespace_)
        pass
        @Js
        def PyJs_getNewlinesBefore_651_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'getNewlinesBefore':PyJs_getNewlinesBefore_651_}, var)
            var.registers([u'tokens', u'startToken', u'node', u'endToken', u'index'])
            var.put(u'startToken', PyJsComma(Js(0.0), Js(None)))
            var.put(u'endToken', PyJsComma(Js(0.0), Js(None)))
            var.put(u'tokens', var.get(u"this").get(u'tokens'))
            @Js
            def PyJs_anonymous_652_(token, this, arguments, var=var):
                var = Scope({u'this':this, u'token':token, u'arguments':arguments}, var)
                var.registers([u'token'])
                return (var.get(u'token').get(u'start')-var.get(u'node').get(u'start'))
            PyJs_anonymous_652_._set_name(u'anonymous')
            var.put(u'index', var.get(u"this").callprop(u'_findToken', PyJs_anonymous_652_, Js(0.0), var.get(u'tokens').get(u'length')))
            if (var.get(u'index')>=Js(0.0)):
                while (var.get(u'index') and PyJsStrictEq(var.get(u'node').get(u'start'),var.get(u'tokens').get((var.get(u'index')-Js(1.0))).get(u'start'))):
                    var.put(u'index',Js(var.get(u'index').to_number())-Js(1))
                var.put(u'startToken', var.get(u'tokens').get((var.get(u'index')-Js(1.0))))
                var.put(u'endToken', var.get(u'tokens').get(var.get(u'index')))
            return var.get(u"this").callprop(u'_getNewlinesBetween', var.get(u'startToken'), var.get(u'endToken'))
        PyJs_getNewlinesBefore_651_._set_name(u'getNewlinesBefore')
        var.get(u'Whitespace').get(u'prototype').put(u'getNewlinesBefore', PyJs_getNewlinesBefore_651_)
        @Js
        def PyJs_getNewlinesAfter_653_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'getNewlinesAfter':PyJs_getNewlinesAfter_653_}, var)
            var.registers([u'tokens', u'startToken', u'node', u'endToken', u'index'])
            var.put(u'startToken', PyJsComma(Js(0.0), Js(None)))
            var.put(u'endToken', PyJsComma(Js(0.0), Js(None)))
            var.put(u'tokens', var.get(u"this").get(u'tokens'))
            @Js
            def PyJs_anonymous_654_(token, this, arguments, var=var):
                var = Scope({u'this':this, u'token':token, u'arguments':arguments}, var)
                var.registers([u'token'])
                return (var.get(u'token').get(u'end')-var.get(u'node').get(u'end'))
            PyJs_anonymous_654_._set_name(u'anonymous')
            var.put(u'index', var.get(u"this").callprop(u'_findToken', PyJs_anonymous_654_, Js(0.0), var.get(u'tokens').get(u'length')))
            if (var.get(u'index')>=Js(0.0)):
                while (var.get(u'index') and PyJsStrictEq(var.get(u'node').get(u'end'),var.get(u'tokens').get((var.get(u'index')-Js(1.0))).get(u'end'))):
                    var.put(u'index',Js(var.get(u'index').to_number())-Js(1))
                var.put(u'startToken', var.get(u'tokens').get(var.get(u'index')))
                var.put(u'endToken', var.get(u'tokens').get((var.get(u'index')+Js(1.0))))
                if PyJsStrictEq(var.get(u'endToken').get(u'type').get(u'label'),Js(u',')):
                    var.put(u'endToken', var.get(u'tokens').get((var.get(u'index')+Js(2.0))))
            if (var.get(u'endToken') and PyJsStrictEq(var.get(u'endToken').get(u'type').get(u'label'),Js(u'eof'))):
                return Js(1.0)
            else:
                return var.get(u"this").callprop(u'_getNewlinesBetween', var.get(u'startToken'), var.get(u'endToken'))
        PyJs_getNewlinesAfter_653_._set_name(u'getNewlinesAfter')
        var.get(u'Whitespace').get(u'prototype').put(u'getNewlinesAfter', PyJs_getNewlinesAfter_653_)
        @Js
        def PyJs__getNewlinesBetween_655_(startToken, endToken, this, arguments, var=var):
            var = Scope({u'this':this, u'startToken':startToken, u'arguments':arguments, u'endToken':endToken, u'_getNewlinesBetween':PyJs__getNewlinesBetween_655_}, var)
            var.registers([u'end', u'startToken', u'lines', u'start', u'line', u'endToken'])
            if (var.get(u'endToken').neg() or var.get(u'endToken').get(u'loc').neg()):
                return Js(0.0)
            var.put(u'start', (var.get(u'startToken').get(u'loc').get(u'end').get(u'line') if var.get(u'startToken') else Js(1.0)))
            var.put(u'end', var.get(u'endToken').get(u'loc').get(u'start').get(u'line'))
            var.put(u'lines', Js(0.0))
            #for JS loop
            var.put(u'line', var.get(u'start'))
            while (var.get(u'line')<var.get(u'end')):
                try:
                    if PyJsStrictEq(var.get(u"this").get(u'used').get(var.get(u'line')).typeof(),Js(u'undefined')):
                        var.get(u"this").get(u'used').put(var.get(u'line'), var.get(u'true'))
                        (var.put(u'lines',Js(var.get(u'lines').to_number())+Js(1))-Js(1))
                finally:
                        (var.put(u'line',Js(var.get(u'line').to_number())+Js(1))-Js(1))
            return var.get(u'lines')
        PyJs__getNewlinesBetween_655_._set_name(u'_getNewlinesBetween')
        var.get(u'Whitespace').get(u'prototype').put(u'_getNewlinesBetween', PyJs__getNewlinesBetween_655_)
        @Js
        def PyJs__findToken_656_(test, start, end, this, arguments, var=var):
            var = Scope({u'end':end, u'_findToken':PyJs__findToken_656_, u'this':this, u'start':start, u'arguments':arguments, u'test':test}, var)
            var.registers([u'test', u'middle', u'end', u'match', u'start'])
            if (var.get(u'start')>=var.get(u'end')):
                return (-Js(1.0))
            var.put(u'middle', PyJsBshift((var.get(u'start')+var.get(u'end')),Js(1.0)))
            var.put(u'match', var.get(u'test')(var.get(u"this").get(u'tokens').get(var.get(u'middle'))))
            if (var.get(u'match')<Js(0.0)):
                return var.get(u"this").callprop(u'_findToken', var.get(u'test'), (var.get(u'middle')+Js(1.0)), var.get(u'end'))
            else:
                if (var.get(u'match')>Js(0.0)):
                    return var.get(u"this").callprop(u'_findToken', var.get(u'test'), var.get(u'start'), var.get(u'middle'))
                else:
                    if PyJsStrictEq(var.get(u'match'),Js(0.0)):
                        return var.get(u'middle')
            return (-Js(1.0))
        PyJs__findToken_656_._set_name(u'_findToken')
        var.get(u'Whitespace').get(u'prototype').put(u'_findToken', PyJs__findToken_656_)
        return var.get(u'Whitespace')
    PyJs_anonymous_649_._set_name(u'anonymous')
    var.put(u'Whitespace', PyJs_anonymous_649_())
    var.get(u'exports').put(u'default', var.get(u'Whitespace'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_647_._set_name(u'anonymous')
PyJs_Object_657_ = Js({u'babel-runtime/helpers/classCallCheck':Js(110.0)})
@Js
def PyJs_anonymous_658_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'module', u'_babelHelperHoistVariables', u't', u'_babelHelperHoistVariables2', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_664_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_664_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_663_ = Js({})
            var.put(u'newObj', PyJs_Object_663_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_659_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
        var.registers([u'node', u'container', u'args', u'state', u'call', u'path', u'scope', u'callee'])
        var.put(u'scope', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else var.get(u'path').get(u'scope')))
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'container', var.get(u't').callprop(u'functionExpression', var.get(u"null"), Js([]), var.get(u'node').get(u'body'), var.get(u'node').get(u'generator'), var.get(u'node').get(u'async')))
        var.put(u'callee', var.get(u'container'))
        var.put(u'args', Js([]))
        @Js
        def PyJs_anonymous_660_(id, this, arguments, var=var):
            var = Scope({u'this':this, u'id':id, u'arguments':arguments}, var)
            var.registers([u'id'])
            PyJs_Object_661_ = Js({u'id':var.get(u'id')})
            return var.get(u'scope').callprop(u'push', PyJs_Object_661_)
        PyJs_anonymous_660_._set_name(u'anonymous')
        PyJsComma(Js(0.0),var.get(u'_babelHelperHoistVariables2').get(u'default'))(var.get(u'path'), PyJs_anonymous_660_)
        PyJs_Object_662_ = Js({u'foundThis':Js(False),u'foundArguments':Js(False)})
        var.put(u'state', PyJs_Object_662_)
        var.get(u'path').callprop(u'traverse', var.get(u'visitor'), var.get(u'state'))
        if var.get(u'state').get(u'foundArguments'):
            var.put(u'callee', var.get(u't').callprop(u'memberExpression', var.get(u'container'), var.get(u't').callprop(u'identifier', Js(u'apply'))))
            var.put(u'args', Js([]))
            if var.get(u'state').get(u'foundThis'):
                var.get(u'args').callprop(u'push', var.get(u't').callprop(u'thisExpression'))
            if var.get(u'state').get(u'foundArguments'):
                if var.get(u'state').get(u'foundThis').neg():
                    var.get(u'args').callprop(u'push', var.get(u't').callprop(u'nullLiteral'))
                var.get(u'args').callprop(u'push', var.get(u't').callprop(u'identifier', Js(u'arguments')))
        var.put(u'call', var.get(u't').callprop(u'callExpression', var.get(u'callee'), var.get(u'args')))
        if var.get(u'node').get(u'generator'):
            var.put(u'call', var.get(u't').callprop(u'yieldExpression', var.get(u'call'), var.get(u'true')))
        return var.get(u't').callprop(u'returnStatement', var.get(u'call'))
    PyJs_anonymous_659_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_659_)
    var.put(u'_babelHelperHoistVariables', var.get(u'require')(Js(u'babel-helper-hoist-variables')))
    var.put(u'_babelHelperHoistVariables2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperHoistVariables')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    @Js
    def PyJs_enter_666_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'enter':PyJs_enter_666_}, var)
        var.registers([u'path', u'state'])
        if var.get(u'path').callprop(u'isThisExpression'):
            var.get(u'state').put(u'foundThis', var.get(u'true'))
        PyJs_Object_667_ = Js({u'name':Js(u'arguments')})
        if var.get(u'path').callprop(u'isReferencedIdentifier', PyJs_Object_667_):
            var.get(u'state').put(u'foundArguments', var.get(u'true'))
    PyJs_enter_666_._set_name(u'enter')
    @Js
    def PyJs_Function_668_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_668_, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJs_Function_668_._set_name(u'Function')
    PyJs_Object_665_ = Js({u'enter':PyJs_enter_666_,u'Function':PyJs_Function_668_})
    var.put(u'visitor', PyJs_Object_665_)
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_658_._set_name(u'anonymous')
PyJs_Object_669_ = Js({u'babel-helper-hoist-variables':Js(51.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_670_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'toDefineObject', u'exports', u'toComputedObjectFromClass', u'_each', u'_interopRequireWildcard', u'_babelHelperFunctionName', u'require', u'_babelTypes', u'_has2', u'_has', u'hasComputed', u'push', u'module', u'_each2', u't', u'_babelHelperFunctionName2', u'_interopRequireDefault', u'toKind', u'toClassObject'])
    @Js
    def PyJsHoisted_toDefineObject_(mutatorMap, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'mutatorMap':mutatorMap}, var)
        var.registers([u'mutatorMap'])
        @Js
        def PyJs_anonymous_678_(map, this, arguments, var=var):
            var = Scope({u'this':this, u'map':map, u'arguments':arguments}, var)
            var.registers([u'map'])
            if var.get(u'map').get(u'value'):
                var.get(u'map').put(u'writable', var.get(u't').callprop(u'booleanLiteral', var.get(u'true')))
            var.get(u'map').put(u'configurable', var.get(u't').callprop(u'booleanLiteral', var.get(u'true')))
            var.get(u'map').put(u'enumerable', var.get(u't').callprop(u'booleanLiteral', var.get(u'true')))
        PyJs_anonymous_678_._set_name(u'anonymous')
        PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(var.get(u'mutatorMap'), PyJs_anonymous_678_)
        return var.get(u'toClassObject')(var.get(u'mutatorMap'))
    PyJsHoisted_toDefineObject_.func_name = u'toDefineObject'
    var.put(u'toDefineObject', PyJsHoisted_toDefineObject_)
    @Js
    def PyJsHoisted_toComputedObjectFromClass_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'i', u'obj', u'objExpr', u'val', u'prop'])
        var.put(u'objExpr', var.get(u't').callprop(u'arrayExpression', Js([])))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'obj').get(u'properties').get(u'length')):
            try:
                var.put(u'prop', var.get(u'obj').get(u'properties').get(var.get(u'i')))
                var.put(u'val', var.get(u'prop').get(u'value'))
                var.get(u'val').get(u'properties').callprop(u'unshift', var.get(u't').callprop(u'objectProperty', var.get(u't').callprop(u'identifier', Js(u'key')), var.get(u't').callprop(u'toComputedKey', var.get(u'prop'))))
                var.get(u'objExpr').get(u'elements').callprop(u'push', var.get(u'val'))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        return var.get(u'objExpr')
    PyJsHoisted_toComputedObjectFromClass_.func_name = u'toComputedObjectFromClass'
    var.put(u'toComputedObjectFromClass', PyJsHoisted_toComputedObjectFromClass_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_671_ = Js({})
            var.put(u'newObj', PyJs_Object_671_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_hasComputed_(mutatorMap, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'mutatorMap':mutatorMap}, var)
        var.registers([u'mutatorMap', u'key'])
        for PyJsTemp in var.get(u'mutatorMap'):
            var.put(u'key', PyJsTemp)
            if var.get(u'mutatorMap').get(var.get(u'key')).get(u'_computed'):
                return var.get(u'true')
        return Js(False)
    PyJsHoisted_hasComputed_.func_name = u'hasComputed'
    var.put(u'hasComputed', PyJsHoisted_hasComputed_)
    @Js
    def PyJsHoisted_push_(mutatorMap, node, kind, file, scope, this, arguments, var=var):
        var = Scope({u'node':node, u'kind':kind, u'arguments':arguments, u'file':file, u'this':this, u'scope':scope, u'mutatorMap':mutatorMap}, var)
        var.registers([u'node', u'map', u'kind', u'file', u'inheritedKind', u'value', u'alias', u'key', u'scope', u'decorators', u'mutatorMap'])
        var.put(u'alias', var.get(u't').callprop(u'toKeyAlias', var.get(u'node')))
        PyJs_Object_673_ = Js({})
        var.put(u'map', PyJs_Object_673_)
        if PyJsComma(Js(0.0),var.get(u'_has2').get(u'default'))(var.get(u'mutatorMap'), var.get(u'alias')):
            var.put(u'map', var.get(u'mutatorMap').get(var.get(u'alias')))
        var.get(u'mutatorMap').put(var.get(u'alias'), var.get(u'map'))
        var.get(u'map').put(u'_inherits', (var.get(u'map').get(u'_inherits') or Js([])))
        var.get(u'map').get(u'_inherits').callprop(u'push', var.get(u'node'))
        var.get(u'map').put(u'_key', var.get(u'node').get(u'key'))
        if var.get(u'node').get(u'computed'):
            var.get(u'map').put(u'_computed', var.get(u'true'))
        if var.get(u'node').get(u'decorators'):
            var.put(u'decorators', var.get(u'map').put(u'decorators', (var.get(u'map').get(u'decorators') or var.get(u't').callprop(u'arrayExpression', Js([])))))
            @Js
            def PyJs_anonymous_674_(dec, this, arguments, var=var):
                var = Scope({u'this':this, u'dec':dec, u'arguments':arguments}, var)
                var.registers([u'dec'])
                return var.get(u'dec').get(u'expression')
            PyJs_anonymous_674_._set_name(u'anonymous')
            var.get(u'decorators').put(u'elements', var.get(u'decorators').get(u'elements').callprop(u'concat', var.get(u'node').get(u'decorators').callprop(u'map', PyJs_anonymous_674_).callprop(u'reverse')))
        if (var.get(u'map').get(u'value') or var.get(u'map').get(u'initializer')):
            PyJsTempException = JsToPyException(var.get(u'file').callprop(u'buildCodeFrameError', var.get(u'node'), Js(u'Key conflict with sibling node')))
            raise PyJsTempException
        var.put(u'key', PyJsComma(Js(0.0), Js(None)))
        var.put(u'value', PyJsComma(Js(0.0), Js(None)))
        if ((var.get(u't').callprop(u'isObjectProperty', var.get(u'node')) or var.get(u't').callprop(u'isObjectMethod', var.get(u'node'))) or var.get(u't').callprop(u'isClassMethod', var.get(u'node'))):
            var.put(u'key', var.get(u't').callprop(u'toComputedKey', var.get(u'node'), var.get(u'node').get(u'key')))
        if (var.get(u't').callprop(u'isObjectProperty', var.get(u'node')) or var.get(u't').callprop(u'isClassProperty', var.get(u'node'))):
            var.put(u'value', var.get(u'node').get(u'value'))
        else:
            if (var.get(u't').callprop(u'isObjectMethod', var.get(u'node')) or var.get(u't').callprop(u'isClassMethod', var.get(u'node'))):
                var.put(u'value', var.get(u't').callprop(u'functionExpression', var.get(u"null"), var.get(u'node').get(u'params'), var.get(u'node').get(u'body'), var.get(u'node').get(u'generator'), var.get(u'node').get(u'async')))
                var.get(u'value').put(u'returnType', var.get(u'node').get(u'returnType'))
        var.put(u'inheritedKind', var.get(u'toKind')(var.get(u'node')))
        if (var.get(u'kind').neg() or PyJsStrictNeq(var.get(u'inheritedKind'),Js(u'value'))):
            var.put(u'kind', var.get(u'inheritedKind'))
        if (((var.get(u'scope') and var.get(u't').callprop(u'isStringLiteral', var.get(u'key'))) and (PyJsStrictEq(var.get(u'kind'),Js(u'value')) or PyJsStrictEq(var.get(u'kind'),Js(u'initializer')))) and var.get(u't').callprop(u'isFunctionExpression', var.get(u'value'))):
            PyJs_Object_675_ = Js({u'id':var.get(u'key'),u'node':var.get(u'value'),u'scope':var.get(u'scope')})
            var.put(u'value', PyJsComma(Js(0.0),var.get(u'_babelHelperFunctionName2').get(u'default'))(PyJs_Object_675_))
        if var.get(u'value'):
            var.get(u't').callprop(u'inheritsComments', var.get(u'value'), var.get(u'node'))
            var.get(u'map').put(var.get(u'kind'), var.get(u'value'))
        return var.get(u'map')
    PyJsHoisted_push_.func_name = u'push'
    var.put(u'push', PyJsHoisted_push_)
    @Js
    def PyJsHoisted_toClassObject_(mutatorMap, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'mutatorMap':mutatorMap}, var)
        var.registers([u'objExpr', u'mutatorMap'])
        var.put(u'objExpr', var.get(u't').callprop(u'objectExpression', Js([])))
        @Js
        def PyJs_anonymous_676_(map, this, arguments, var=var):
            var = Scope({u'this':this, u'map':map, u'arguments':arguments}, var)
            var.registers([u'mapNode', u'propNode', u'map'])
            var.put(u'mapNode', var.get(u't').callprop(u'objectExpression', Js([])))
            var.put(u'propNode', var.get(u't').callprop(u'objectProperty', var.get(u'map').get(u'_key'), var.get(u'mapNode'), var.get(u'map').get(u'_computed')))
            @Js
            def PyJs_anonymous_677_(node, key, this, arguments, var=var):
                var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'key':key}, var)
                var.registers([u'node', u'inheritNode', u'key', u'prop'])
                if PyJsStrictEq(var.get(u'key').get(u'0'),Js(u'_')):
                    return var.get('undefined')
                var.put(u'inheritNode', var.get(u'node'))
                if (var.get(u't').callprop(u'isClassMethod', var.get(u'node')) or var.get(u't').callprop(u'isClassProperty', var.get(u'node'))):
                    var.put(u'node', var.get(u'node').get(u'value'))
                var.put(u'prop', var.get(u't').callprop(u'objectProperty', var.get(u't').callprop(u'identifier', var.get(u'key')), var.get(u'node')))
                var.get(u't').callprop(u'inheritsComments', var.get(u'prop'), var.get(u'inheritNode'))
                var.get(u't').callprop(u'removeComments', var.get(u'inheritNode'))
                var.get(u'mapNode').get(u'properties').callprop(u'push', var.get(u'prop'))
            PyJs_anonymous_677_._set_name(u'anonymous')
            PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(var.get(u'map'), PyJs_anonymous_677_)
            var.get(u'objExpr').get(u'properties').callprop(u'push', var.get(u'propNode'))
        PyJs_anonymous_676_._set_name(u'anonymous')
        PyJsComma(Js(0.0),var.get(u'_each2').get(u'default'))(var.get(u'mutatorMap'), PyJs_anonymous_676_)
        return var.get(u'objExpr')
    PyJsHoisted_toClassObject_.func_name = u'toClassObject'
    var.put(u'toClassObject', PyJsHoisted_toClassObject_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_672_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_672_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_toKind_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if (var.get(u't').callprop(u'isClassMethod', var.get(u'node')) or var.get(u't').callprop(u'isObjectMethod', var.get(u'node'))):
            if (PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'get')) or PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'set'))):
                return var.get(u'node').get(u'kind')
        return Js(u'value')
    PyJsHoisted_toKind_.func_name = u'toKind'
    var.put(u'toKind', PyJsHoisted_toKind_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'push', var.get(u'push'))
    var.get(u'exports').put(u'hasComputed', var.get(u'hasComputed'))
    var.get(u'exports').put(u'toComputedObjectFromClass', var.get(u'toComputedObjectFromClass'))
    var.get(u'exports').put(u'toClassObject', var.get(u'toClassObject'))
    var.get(u'exports').put(u'toDefineObject', var.get(u'toDefineObject'))
    var.put(u'_babelHelperFunctionName', var.get(u'require')(Js(u'babel-helper-function-name')))
    var.put(u'_babelHelperFunctionName2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperFunctionName')))
    var.put(u'_each', var.get(u'require')(Js(u'lodash/each')))
    var.put(u'_each2', var.get(u'_interopRequireDefault')(var.get(u'_each')))
    var.put(u'_has', var.get(u'require')(Js(u'lodash/has')))
    var.put(u'_has2', var.get(u'_interopRequireDefault')(var.get(u'_has')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
PyJs_anonymous_670_._set_name(u'anonymous')
PyJs_Object_679_ = Js({u'babel-helper-function-name':Js(49.0),u'babel-types':Js(258.0),u'lodash/each':Js(443.0),u'lodash/has':Js(453.0)})
@Js
def PyJs_anonymous_680_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'module', u'exports', u'_interopRequireWildcard', u'visitor', u'_babelHelperGetFunctionArity', u'_babelTypes', u'visit', u'_babelHelperGetFunctionArity2', u'wrap', u'_babelTemplate', u'buildPropertyMethodAssignmentWrapper', u'_babelTemplate2', u't', u'_interopRequireDefault', u'require', u'buildGeneratorPropertyMethodAssignmentWrapper'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_684_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_684_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_wrap_(state, method, id, scope, this, arguments, var=var):
        var = Scope({u'state':state, u'arguments':arguments, u'this':this, u'scope':scope, u'method':method, u'id':id}, var)
        var.registers([u'i', u'len', u'id', u'state', u'params', u'build', u'_template', u'scope', u'method'])
        if var.get(u'state').get(u'selfReference'):
            if (var.get(u'scope').callprop(u'hasBinding', var.get(u'id').get(u'name')) and var.get(u'scope').callprop(u'hasGlobal', var.get(u'id').get(u'name')).neg()):
                var.get(u'scope').callprop(u'rename', var.get(u'id').get(u'name'))
            else:
                if var.get(u't').callprop(u'isFunction', var.get(u'method')).neg():
                    return var.get('undefined')
                var.put(u'build', var.get(u'buildPropertyMethodAssignmentWrapper'))
                if var.get(u'method').get(u'generator'):
                    var.put(u'build', var.get(u'buildGeneratorPropertyMethodAssignmentWrapper'))
                PyJs_Object_687_ = Js({u'FUNCTION':var.get(u'method'),u'FUNCTION_ID':var.get(u'id'),u'FUNCTION_KEY':var.get(u'scope').callprop(u'generateUidIdentifier', var.get(u'id').get(u'name'))})
                var.put(u'_template', var.get(u'build')(PyJs_Object_687_).get(u'expression'))
                var.get(u'_template').get(u'callee').put(u'_skipModulesRemap', var.get(u'true'))
                var.put(u'params', var.get(u'_template').get(u'callee').get(u'body').get(u'body').get(u'0').get(u'params'))
                #for JS loop
                var.put(u'i', Js(0.0))
                var.put(u'len', PyJsComma(Js(0.0),var.get(u'_babelHelperGetFunctionArity2').get(u'default'))(var.get(u'method')))
                while (var.get(u'i')<var.get(u'len')):
                    try:
                        var.get(u'params').callprop(u'push', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'x')))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                return var.get(u'_template')
        var.get(u'method').put(u'id', var.get(u'id'))
        var.get(u'scope').callprop(u'getProgramParent').get(u'references').put(var.get(u'id').get(u'name'), var.get(u'true'))
    PyJsHoisted_wrap_.func_name = u'wrap'
    var.put(u'wrap', PyJsHoisted_wrap_)
    @Js
    def PyJsHoisted_visit_(node, name, scope, this, arguments, var=var):
        var = Scope({u'node':node, u'scope':scope, u'this':this, u'name':name, u'arguments':arguments}, var)
        var.registers([u'node', u'scope', u'state', u'binding', u'name'])
        PyJs_Object_688_ = Js({u'selfAssignment':Js(False),u'selfReference':Js(False),u'outerDeclar':var.get(u'scope').callprop(u'getBindingIdentifier', var.get(u'name')),u'references':Js([]),u'name':var.get(u'name')})
        var.put(u'state', PyJs_Object_688_)
        var.put(u'binding', var.get(u'scope').callprop(u'getOwnBinding', var.get(u'name')))
        if var.get(u'binding'):
            if PyJsStrictEq(var.get(u'binding').get(u'kind'),Js(u'param')):
                var.get(u'state').put(u'selfReference', var.get(u'true'))
            else:
                pass
        else:
            if (var.get(u'state').get(u'outerDeclar') or var.get(u'scope').callprop(u'hasGlobal', var.get(u'name'))):
                var.get(u'scope').callprop(u'traverse', var.get(u'node'), var.get(u'visitor'), var.get(u'state'))
        return var.get(u'state')
    PyJsHoisted_visit_.func_name = u'visit'
    var.put(u'visit', PyJsHoisted_visit_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_683_ = Js({})
            var.put(u'newObj', PyJs_Object_683_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_681_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'node', u'name', u'parent', u'binding', u'state', u'scope', u'_ref', u'id'])
        var.put(u'node', var.get(u'_ref').get(u'node'))
        var.put(u'parent', var.get(u'_ref').get(u'parent'))
        var.put(u'scope', var.get(u'_ref').get(u'scope'))
        var.put(u'id', var.get(u'_ref').get(u'id'))
        if var.get(u'node').get(u'id'):
            return var.get('undefined')
        PyJs_Object_682_ = Js({u'kind':Js(u'method')})
        if ((var.get(u't').callprop(u'isObjectProperty', var.get(u'parent')) or var.get(u't').callprop(u'isObjectMethod', var.get(u'parent'), PyJs_Object_682_)) and (var.get(u'parent').get(u'computed').neg() or var.get(u't').callprop(u'isLiteral', var.get(u'parent').get(u'key')))):
            var.put(u'id', var.get(u'parent').get(u'key'))
        else:
            if var.get(u't').callprop(u'isVariableDeclarator', var.get(u'parent')):
                var.put(u'id', var.get(u'parent').get(u'id'))
                if var.get(u't').callprop(u'isIdentifier', var.get(u'id')):
                    var.put(u'binding', var.get(u'scope').get(u'parent').callprop(u'getBinding', var.get(u'id').get(u'name')))
                    if ((var.get(u'binding') and var.get(u'binding').get(u'constant')) and PyJsStrictEq(var.get(u'scope').callprop(u'getBinding', var.get(u'id').get(u'name')),var.get(u'binding'))):
                        var.get(u'node').put(u'id', var.get(u'id'))
                        var.get(u'node').get(u'id').put(var.get(u't').get(u'NOT_LOCAL_BINDING'), var.get(u'true'))
                        return var.get('undefined')
            else:
                if var.get(u't').callprop(u'isAssignmentExpression', var.get(u'parent')):
                    var.put(u'id', var.get(u'parent').get(u'left'))
                else:
                    if var.get(u'id').neg():
                        return var.get('undefined')
        var.put(u'name', PyJsComma(Js(0.0), Js(None)))
        if (var.get(u'id') and var.get(u't').callprop(u'isLiteral', var.get(u'id'))):
            var.put(u'name', var.get(u'id').get(u'value'))
        else:
            if (var.get(u'id') and var.get(u't').callprop(u'isIdentifier', var.get(u'id'))):
                var.put(u'name', var.get(u'id').get(u'name'))
            else:
                return var.get('undefined')
        var.put(u'name', var.get(u't').callprop(u'toBindingIdentifierName', var.get(u'name')))
        var.put(u'id', var.get(u't').callprop(u'identifier', var.get(u'name')))
        var.get(u'id').put(var.get(u't').get(u'NOT_LOCAL_BINDING'), var.get(u'true'))
        var.put(u'state', var.get(u'visit')(var.get(u'node'), var.get(u'name'), var.get(u'scope')))
        return (var.get(u'wrap')(var.get(u'state'), var.get(u'node'), var.get(u'id'), var.get(u'scope')) or var.get(u'node'))
    PyJs_anonymous_681_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_681_)
    var.put(u'_babelHelperGetFunctionArity', var.get(u'require')(Js(u'babel-helper-get-function-arity')))
    var.put(u'_babelHelperGetFunctionArity2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperGetFunctionArity')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'buildPropertyMethodAssignmentWrapper', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n')))
    var.put(u'buildGeneratorPropertyMethodAssignmentWrapper', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n')))
    @Js
    def PyJs_ReferencedIdentifierBindingIdentifier_686_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifierBindingIdentifier':PyJs_ReferencedIdentifierBindingIdentifier_686_, u'arguments':arguments}, var)
        var.registers([u'path', u'state', u'localDeclar'])
        if PyJsStrictNeq(var.get(u'path').get(u'node').get(u'name'),var.get(u'state').get(u'name')):
            return var.get('undefined')
        var.put(u'localDeclar', var.get(u'path').get(u'scope').callprop(u'getBindingIdentifier', var.get(u'state').get(u'name')))
        if PyJsStrictNeq(var.get(u'localDeclar'),var.get(u'state').get(u'outerDeclar')):
            return var.get('undefined')
        var.get(u'state').put(u'selfReference', var.get(u'true'))
        var.get(u'path').callprop(u'stop')
    PyJs_ReferencedIdentifierBindingIdentifier_686_._set_name(u'ReferencedIdentifierBindingIdentifier')
    PyJs_Object_685_ = Js({u'ReferencedIdentifier|BindingIdentifier':PyJs_ReferencedIdentifierBindingIdentifier_686_})
    var.put(u'visitor', PyJs_Object_685_)
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_680_._set_name(u'anonymous')
PyJs_Object_689_ = Js({u'babel-helper-get-function-arity':Js(50.0),u'babel-template':Js(221.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_690_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'require', u'_babelTypes', u'module', u't'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_692_ = Js({})
            var.put(u'newObj', PyJs_Object_692_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_691_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'i', u'node', u'params', u'param'])
        var.put(u'params', var.get(u'node').get(u'params'))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'params').get(u'length')):
            try:
                var.put(u'param', var.get(u'params').get(var.get(u'i')))
                if (var.get(u't').callprop(u'isAssignmentPattern', var.get(u'param')) or var.get(u't').callprop(u'isRestElement', var.get(u'param'))):
                    return var.get(u'i')
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        return var.get(u'params').get(u'length')
    PyJs_anonymous_691_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_691_)
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_690_._set_name(u'anonymous')
PyJs_Object_693_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_694_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'module', u't', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_698_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_698_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_697_ = Js({})
            var.put(u'newObj', PyJs_Object_697_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_695_(path, emit, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'emit':emit, u'arguments':arguments}, var)
        var.registers([u'path', u'kind', u'emit'])
        var.put(u'kind', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else Js(u'var')))
        PyJs_Object_696_ = Js({u'kind':var.get(u'kind'),u'emit':var.get(u'emit')})
        var.get(u'path').callprop(u'traverse', var.get(u'visitor'), PyJs_Object_696_)
    PyJs_anonymous_695_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_695_)
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    @Js
    def PyJs_Scope_700_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'Scope':PyJs_Scope_700_}, var)
        var.registers([u'path', u'state'])
        if PyJsStrictEq(var.get(u'state').get(u'kind'),Js(u'let')):
            var.get(u'path').callprop(u'skip')
    PyJs_Scope_700_._set_name(u'Scope')
    @Js
    def PyJs_Function_701_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_701_, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJs_Function_701_._set_name(u'Function')
    @Js
    def PyJs_VariableDeclaration_702_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'VariableDeclaration':PyJs_VariableDeclaration_702_}, var)
        var.registers([u'_isArray', u'_iterator', u'firstId', u'declarations', u'state', u'declar', u'_i', u'path', u'nodes', u'_ref', u'name'])
        if (var.get(u'state').get(u'kind') and PyJsStrictNeq(var.get(u'path').get(u'node').get(u'kind'),var.get(u'state').get(u'kind'))):
            return var.get('undefined')
        var.put(u'nodes', Js([]))
        var.put(u'declarations', var.get(u'path').callprop(u'get', Js(u'declarations')))
        var.put(u'firstId', PyJsComma(Js(0.0), Js(None)))
        #for JS loop
        var.put(u'_iterator', var.get(u'declarations'))
        var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
        var.put(u'_i', Js(0.0))
        var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
        while 1:
            pass
            if var.get(u'_isArray'):
                if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                    break
                var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
            else:
                var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                if var.get(u'_i').get(u'done'):
                    break
                var.put(u'_ref', var.get(u'_i').get(u'value'))
            var.put(u'declar', var.get(u'_ref'))
            var.put(u'firstId', var.get(u'declar').get(u'node').get(u'id'))
            if var.get(u'declar').get(u'node').get(u'init'):
                var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'declar').get(u'node').get(u'id'), var.get(u'declar').get(u'node').get(u'init'))))
            for PyJsTemp in var.get(u'declar').callprop(u'getBindingIdentifiers'):
                var.put(u'name', PyJsTemp)
                var.get(u'state').callprop(u'emit', var.get(u't').callprop(u'identifier', var.get(u'name')), var.get(u'name'))
        
        PyJs_Object_703_ = Js({u'left':var.get(u'path').get(u'node')})
        if var.get(u'path').get(u'parentPath').callprop(u'isFor', PyJs_Object_703_):
            var.get(u'path').callprop(u'replaceWith', var.get(u'firstId'))
        else:
            var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'nodes'))
    PyJs_VariableDeclaration_702_._set_name(u'VariableDeclaration')
    PyJs_Object_699_ = Js({u'Scope':PyJs_Scope_700_,u'Function':PyJs_Function_701_,u'VariableDeclaration':PyJs_VariableDeclaration_702_})
    var.put(u'visitor', PyJs_Object_699_)
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_694_._set_name(u'anonymous')
PyJs_Object_704_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_705_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'require', u'_babelTypes', u'module', u't'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_708_ = Js({})
            var.put(u'newObj', PyJs_Object_708_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_706_(callee, thisNode, args, this, arguments, var=var):
        var = Scope({u'thisNode':thisNode, u'this':this, u'args':args, u'callee':callee, u'arguments':arguments}, var)
        var.registers([u'thisNode', u'args', u'callee'])
        PyJs_Object_707_ = Js({u'name':Js(u'arguments')})
        if ((PyJsStrictEq(var.get(u'args').get(u'length'),Js(1.0)) and var.get(u't').callprop(u'isSpreadElement', var.get(u'args').get(u'0'))) and var.get(u't').callprop(u'isIdentifier', var.get(u'args').get(u'0').get(u'argument'), PyJs_Object_707_)):
            return var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u'callee'), var.get(u't').callprop(u'identifier', Js(u'apply'))), Js([var.get(u'thisNode'), var.get(u'args').get(u'0').get(u'argument')]))
        else:
            return var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u'callee'), var.get(u't').callprop(u'identifier', Js(u'call'))), Js([var.get(u'thisNode')]).callprop(u'concat', var.get(u'args')))
    PyJs_anonymous_706_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_706_)
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_705_._set_name(u'anonymous')
PyJs_Object_709_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_710_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'pullFlag', u'_interopRequireWildcard', u'_pull', u'is', u'_babelTypes', u'module', u'_pull2', u't', u'_interopRequireDefault', u'require'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_712_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_712_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_is_(node, flag, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'flag':flag, u'arguments':arguments}, var)
        var.registers([u'node', u'flag'])
        return (var.get(u't').callprop(u'isRegExpLiteral', var.get(u'node')) and (var.get(u'node').get(u'flags').callprop(u'indexOf', var.get(u'flag'))>=Js(0.0)))
    PyJsHoisted_is_.func_name = u'is'
    var.put(u'is', PyJsHoisted_is_)
    @Js
    def PyJsHoisted_pullFlag_(node, flag, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'flag':flag, u'arguments':arguments}, var)
        var.registers([u'node', u'flag', u'flags'])
        var.put(u'flags', var.get(u'node').get(u'flags').callprop(u'split', Js(u'')))
        if (var.get(u'node').get(u'flags').callprop(u'indexOf', var.get(u'flag'))<Js(0.0)):
            return var.get('undefined')
        PyJsComma(Js(0.0),var.get(u'_pull2').get(u'default'))(var.get(u'flags'), var.get(u'flag'))
        var.get(u'node').put(u'flags', var.get(u'flags').callprop(u'join', Js(u'')))
    PyJsHoisted_pullFlag_.func_name = u'pullFlag'
    var.put(u'pullFlag', PyJsHoisted_pullFlag_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_711_ = Js({})
            var.put(u'newObj', PyJs_Object_711_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'is', var.get(u'is'))
    var.get(u'exports').put(u'pullFlag', var.get(u'pullFlag'))
    var.put(u'_pull', var.get(u'require')(Js(u'lodash/pull')))
    var.put(u'_pull2', var.get(u'_interopRequireDefault')(var.get(u'_pull')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
PyJs_anonymous_710_._set_name(u'anonymous')
PyJs_Object_713_ = Js({u'babel-types':Js(258.0),u'lodash/pull':Js(481.0)})
@Js
def PyJs_anonymous_714_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'getPrototypeOfExpression', u'exports', u'_symbol2', u'isMemberExpressionSuper', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'messages', u'ReplaceSupers', u'module', u'_babelHelperOptimiseCallExpression', u'HARDCORE_THIS_REF', u'_symbol', u't', u'_babelHelperOptimiseCallExpression2', u'_interopRequireDefault', u'isIllegalBareSuper', u'_classCallCheck3', u'_classCallCheck2', u'_babelMessages'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_716_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_716_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_isIllegalBareSuper_(node, parent, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'parent':parent}, var)
        var.registers([u'node', u'parent'])
        if var.get(u't').callprop(u'isSuper', var.get(u'node')).neg():
            return Js(False)
        PyJs_Object_717_ = Js({u'computed':Js(False)})
        if var.get(u't').callprop(u'isMemberExpression', var.get(u'parent'), PyJs_Object_717_):
            return Js(False)
        PyJs_Object_718_ = Js({u'callee':var.get(u'node')})
        if var.get(u't').callprop(u'isCallExpression', var.get(u'parent'), PyJs_Object_718_):
            return Js(False)
        return var.get(u'true')
    PyJsHoisted_isIllegalBareSuper_.func_name = u'isIllegalBareSuper'
    var.put(u'isIllegalBareSuper', PyJsHoisted_isIllegalBareSuper_)
    @Js
    def PyJsHoisted_isMemberExpressionSuper_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        return (var.get(u't').callprop(u'isMemberExpression', var.get(u'node')) and var.get(u't').callprop(u'isSuper', var.get(u'node').get(u'object')))
    PyJsHoisted_isMemberExpressionSuper_.func_name = u'isMemberExpressionSuper'
    var.put(u'isMemberExpressionSuper', PyJsHoisted_isMemberExpressionSuper_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_715_ = Js({})
            var.put(u'newObj', PyJs_Object_715_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_getPrototypeOfExpression_(objectRef, isStatic, this, arguments, var=var):
        var = Scope({u'this':this, u'objectRef':objectRef, u'isStatic':isStatic, u'arguments':arguments}, var)
        var.registers([u'objectRef', u'isStatic', u'targetRef'])
        var.put(u'targetRef', (var.get(u'objectRef') if var.get(u'isStatic') else var.get(u't').callprop(u'memberExpression', var.get(u'objectRef'), var.get(u't').callprop(u'identifier', Js(u'prototype')))))
        def PyJs_LONG_719_(var=var):
            return var.get(u't').callprop(u'logicalExpression', Js(u'||'), var.get(u't').callprop(u'memberExpression', var.get(u'targetRef'), var.get(u't').callprop(u'identifier', Js(u'__proto__'))), var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'Object')), var.get(u't').callprop(u'identifier', Js(u'getPrototypeOf'))), Js([var.get(u'targetRef')])))
        return PyJs_LONG_719_()
    PyJsHoisted_getPrototypeOfExpression_.func_name = u'getPrototypeOfExpression'
    var.put(u'getPrototypeOfExpression', PyJsHoisted_getPrototypeOfExpression_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    var.put(u'_babelHelperOptimiseCallExpression', var.get(u'require')(Js(u'babel-helper-optimise-call-expression')))
    var.put(u'_babelHelperOptimiseCallExpression2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperOptimiseCallExpression')))
    var.put(u'_babelMessages', var.get(u'require')(Js(u'babel-messages')))
    var.put(u'messages', var.get(u'_interopRequireWildcard')(var.get(u'_babelMessages')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'HARDCORE_THIS_REF', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))())
    pass
    pass
    pass
    @Js
    def PyJs_Function_721_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_721_, u'arguments':arguments}, var)
        var.registers([u'path'])
        if var.get(u'path').callprop(u'inShadow', Js(u'this')).neg():
            var.get(u'path').callprop(u'skip')
    PyJs_Function_721_._set_name(u'Function')
    @Js
    def PyJs_ReturnStatement_722_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ReturnStatement':PyJs_ReturnStatement_722_, u'arguments':arguments}, var)
        var.registers([u'path', u'state'])
        if var.get(u'path').callprop(u'inShadow', Js(u'this')).neg():
            var.get(u'state').get(u'returns').callprop(u'push', var.get(u'path'))
    PyJs_ReturnStatement_722_._set_name(u'ReturnStatement')
    @Js
    def PyJs_ThisExpression_723_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ThisExpression':PyJs_ThisExpression_723_, u'arguments':arguments}, var)
        var.registers([u'path', u'state'])
        if var.get(u'path').get(u'node').get(var.get(u'HARDCORE_THIS_REF')).neg():
            var.get(u'state').get(u'thises').callprop(u'push', var.get(u'path'))
    PyJs_ThisExpression_723_._set_name(u'ThisExpression')
    @Js
    def PyJs_enter_724_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'enter':PyJs_enter_724_}, var)
        var.registers([u'callback', u'isBareSuper', u'state', u'result', u'path'])
        var.put(u'callback', var.get(u'state').get(u'specHandle'))
        if var.get(u'state').get(u'isLoose'):
            var.put(u'callback', var.get(u'state').get(u'looseHandle'))
        var.put(u'isBareSuper', (var.get(u'path').callprop(u'isCallExpression') and var.get(u'path').callprop(u'get', Js(u'callee')).callprop(u'isSuper')))
        var.put(u'result', var.get(u'callback').callprop(u'call', var.get(u'state'), var.get(u'path')))
        if var.get(u'result'):
            var.get(u'state').put(u'hasSuper', var.get(u'true'))
        if var.get(u'isBareSuper'):
            var.get(u'state').get(u'bareSupers').callprop(u'push', var.get(u'path'))
        if PyJsStrictEq(var.get(u'result'),var.get(u'true')):
            var.get(u'path').callprop(u'requeue')
        if (PyJsStrictNeq(var.get(u'result'),var.get(u'true')) and var.get(u'result')):
            if var.get(u'Array').callprop(u'isArray', var.get(u'result')):
                var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'result'))
            else:
                var.get(u'path').callprop(u'replaceWith', var.get(u'result'))
    PyJs_enter_724_._set_name(u'enter')
    PyJs_Object_720_ = Js({u'Function':PyJs_Function_721_,u'ReturnStatement':PyJs_ReturnStatement_722_,u'ThisExpression':PyJs_ThisExpression_723_,u'enter':PyJs_enter_724_})
    var.put(u'visitor', PyJs_Object_720_)
    @Js
    def PyJs_anonymous_725_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'ReplaceSupers'])
        @Js
        def PyJsHoisted_ReplaceSupers_(opts, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'opts':opts}, var)
            var.registers([u'inClass', u'opts'])
            var.put(u'inClass', (var.get(u'arguments').get(u'1') if ((var.get(u'arguments').get(u'length')>Js(1.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'1'),var.get(u'undefined'))) else Js(False)))
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'ReplaceSupers'))
            var.get(u"this").put(u'forceSuperMemoisation', var.get(u'opts').get(u'forceSuperMemoisation'))
            var.get(u"this").put(u'methodPath', var.get(u'opts').get(u'methodPath'))
            var.get(u"this").put(u'methodNode', var.get(u'opts').get(u'methodNode'))
            var.get(u"this").put(u'superRef', var.get(u'opts').get(u'superRef'))
            var.get(u"this").put(u'isStatic', var.get(u'opts').get(u'isStatic'))
            var.get(u"this").put(u'hasSuper', Js(False))
            var.get(u"this").put(u'inClass', var.get(u'inClass'))
            var.get(u"this").put(u'isLoose', var.get(u'opts').get(u'isLoose'))
            var.get(u"this").put(u'scope', var.get(u"this").get(u'methodPath').get(u'scope'))
            var.get(u"this").put(u'file', var.get(u'opts').get(u'file'))
            var.get(u"this").put(u'opts', var.get(u'opts'))
            var.get(u"this").put(u'bareSupers', Js([]))
            var.get(u"this").put(u'returns', Js([]))
            var.get(u"this").put(u'thises', Js([]))
        PyJsHoisted_ReplaceSupers_.func_name = u'ReplaceSupers'
        var.put(u'ReplaceSupers', PyJsHoisted_ReplaceSupers_)
        pass
        @Js
        def PyJs_getObjectRef_726_(this, arguments, var=var):
            var = Scope({u'this':this, u'getObjectRef':PyJs_getObjectRef_726_, u'arguments':arguments}, var)
            var.registers([])
            return (var.get(u"this").get(u'opts').get(u'objectRef') or var.get(u"this").get(u'opts').callprop(u'getObjectRef'))
        PyJs_getObjectRef_726_._set_name(u'getObjectRef')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'getObjectRef', PyJs_getObjectRef_726_)
        @Js
        def PyJs_setSuperProperty_727_(property, value, isComputed, this, arguments, var=var):
            var = Scope({u'setSuperProperty':PyJs_setSuperProperty_727_, u'this':this, u'value':value, u'arguments':arguments, u'property':property, u'isComputed':isComputed}, var)
            var.registers([u'property', u'value', u'isComputed'])
            def PyJs_LONG_728_(var=var):
                return var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'set')), Js([var.get(u'getPrototypeOfExpression')(var.get(u"this").callprop(u'getObjectRef'), var.get(u"this").get(u'isStatic')), (var.get(u'property') if var.get(u'isComputed') else var.get(u't').callprop(u'stringLiteral', var.get(u'property').get(u'name'))), var.get(u'value'), var.get(u't').callprop(u'thisExpression')]))
            return PyJs_LONG_728_()
        PyJs_setSuperProperty_727_._set_name(u'setSuperProperty')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'setSuperProperty', PyJs_setSuperProperty_727_)
        @Js
        def PyJs_getSuperProperty_729_(property, isComputed, this, arguments, var=var):
            var = Scope({u'this':this, u'getSuperProperty':PyJs_getSuperProperty_729_, u'property':property, u'arguments':arguments, u'isComputed':isComputed}, var)
            var.registers([u'property', u'isComputed'])
            def PyJs_LONG_730_(var=var):
                return var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'get')), Js([var.get(u'getPrototypeOfExpression')(var.get(u"this").callprop(u'getObjectRef'), var.get(u"this").get(u'isStatic')), (var.get(u'property') if var.get(u'isComputed') else var.get(u't').callprop(u'stringLiteral', var.get(u'property').get(u'name'))), var.get(u't').callprop(u'thisExpression')]))
            return PyJs_LONG_730_()
        PyJs_getSuperProperty_729_._set_name(u'getSuperProperty')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'getSuperProperty', PyJs_getSuperProperty_729_)
        @Js
        def PyJs_replace_731_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'replace':PyJs_replace_731_}, var)
            var.registers([])
            var.get(u"this").get(u'methodPath').callprop(u'traverse', var.get(u'visitor'), var.get(u"this"))
        PyJs_replace_731_._set_name(u'replace')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'replace', PyJs_replace_731_)
        @Js
        def PyJs_getLooseSuperProperty_732_(id, parent, this, arguments, var=var):
            var = Scope({u'this':this, u'getLooseSuperProperty':PyJs_getLooseSuperProperty_732_, u'id':id, u'parent':parent, u'arguments':arguments}, var)
            var.registers([u'methodNode', u'superRef', u'id', u'parent'])
            var.put(u'methodNode', var.get(u"this").get(u'methodNode'))
            var.put(u'superRef', (var.get(u"this").get(u'superRef') or var.get(u't').callprop(u'identifier', Js(u'Function'))))
            if PyJsStrictEq(var.get(u'parent').get(u'property'),var.get(u'id')):
                return var.get('undefined')
            else:
                PyJs_Object_733_ = Js({u'callee':var.get(u'id')})
                if var.get(u't').callprop(u'isCallExpression', var.get(u'parent'), PyJs_Object_733_):
                    return var.get('undefined')
                else:
                    if (var.get(u't').callprop(u'isMemberExpression', var.get(u'parent')) and var.get(u'methodNode').get(u'static').neg()):
                        return var.get(u't').callprop(u'memberExpression', var.get(u'superRef'), var.get(u't').callprop(u'identifier', Js(u'prototype')))
                    else:
                        return var.get(u'superRef')
        PyJs_getLooseSuperProperty_732_._set_name(u'getLooseSuperProperty')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'getLooseSuperProperty', PyJs_getLooseSuperProperty_732_)
        @Js
        def PyJs_looseHandle_734_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'looseHandle':PyJs_looseHandle_734_}, var)
            var.registers([u'node', u'path', u'callee'])
            var.put(u'node', var.get(u'path').get(u'node'))
            if var.get(u'path').callprop(u'isSuper'):
                return var.get(u"this").callprop(u'getLooseSuperProperty', var.get(u'node'), var.get(u'path').get(u'parent'))
            else:
                if var.get(u'path').callprop(u'isCallExpression'):
                    var.put(u'callee', var.get(u'node').get(u'callee'))
                    if var.get(u't').callprop(u'isMemberExpression', var.get(u'callee')).neg():
                        return var.get('undefined')
                    if var.get(u't').callprop(u'isSuper', var.get(u'callee').get(u'object')).neg():
                        return var.get('undefined')
                    var.get(u't').callprop(u'appendToMemberExpression', var.get(u'callee'), var.get(u't').callprop(u'identifier', Js(u'call')))
                    var.get(u'node').get(u'arguments').callprop(u'unshift', var.get(u't').callprop(u'thisExpression'))
                    return var.get(u'true')
        PyJs_looseHandle_734_._set_name(u'looseHandle')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'looseHandle', PyJs_looseHandle_734_)
        @Js
        def PyJs_specHandleAssignmentExpression_735_(ref, path, node, this, arguments, var=var):
            var = Scope({u'node':node, u'specHandleAssignmentExpression':PyJs_specHandleAssignmentExpression_735_, u'this':this, u'arguments':arguments, u'path':path, u'ref':ref}, var)
            var.registers([u'node', u'path', u'ref'])
            if PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'=')):
                return var.get(u"this").callprop(u'setSuperProperty', var.get(u'node').get(u'left').get(u'property'), var.get(u'node').get(u'right'), var.get(u'node').get(u'left').get(u'computed'))
            else:
                var.put(u'ref', (var.get(u'ref') or var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref'))))
                return Js([var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ref'), var.get(u'node').get(u'left'))])), var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'node').get(u'left'), var.get(u't').callprop(u'binaryExpression', var.get(u'node').get(u'operator').get(u'0'), var.get(u'ref'), var.get(u'node').get(u'right'))))])
        PyJs_specHandleAssignmentExpression_735_._set_name(u'specHandleAssignmentExpression')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'specHandleAssignmentExpression', PyJs_specHandleAssignmentExpression_735_)
        @Js
        def PyJs_specHandle_736_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'specHandle':PyJs_specHandle_736_}, var)
            var.registers([u'node', u'binary', u'superProperty', u'computed', u'parent', u'ref', u'args', u'path', u'property', u'callee'])
            var.put(u'property', PyJsComma(Js(0.0), Js(None)))
            var.put(u'computed', PyJsComma(Js(0.0), Js(None)))
            var.put(u'args', PyJsComma(Js(0.0), Js(None)))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'node', var.get(u'path').get(u'node'))
            if var.get(u'isIllegalBareSuper')(var.get(u'node'), var.get(u'parent')):
                PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', var.get(u'messages').callprop(u'get', Js(u'classesIllegalBareSuper'))))
                raise PyJsTempException
            if var.get(u't').callprop(u'isCallExpression', var.get(u'node')):
                var.put(u'callee', var.get(u'node').get(u'callee'))
                if var.get(u't').callprop(u'isSuper', var.get(u'callee')):
                    return var.get('undefined')
                else:
                    if var.get(u'isMemberExpressionSuper')(var.get(u'callee')):
                        var.put(u'property', var.get(u'callee').get(u'property'))
                        var.put(u'computed', var.get(u'callee').get(u'computed'))
                        var.put(u'args', var.get(u'node').get(u'arguments'))
            else:
                if (var.get(u't').callprop(u'isMemberExpression', var.get(u'node')) and var.get(u't').callprop(u'isSuper', var.get(u'node').get(u'object'))):
                    var.put(u'property', var.get(u'node').get(u'property'))
                    var.put(u'computed', var.get(u'node').get(u'computed'))
                else:
                    if (var.get(u't').callprop(u'isUpdateExpression', var.get(u'node')) and var.get(u'isMemberExpressionSuper')(var.get(u'node').get(u'argument'))):
                        var.put(u'binary', var.get(u't').callprop(u'binaryExpression', var.get(u'node').get(u'operator').get(u'0'), var.get(u'node').get(u'argument'), var.get(u't').callprop(u'numericLiteral', Js(1.0))))
                        if var.get(u'node').get(u'prefix'):
                            return var.get(u"this").callprop(u'specHandleAssignmentExpression', var.get(u"null"), var.get(u'path'), var.get(u'binary'))
                        else:
                            var.put(u'ref', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
                            return var.get(u"this").callprop(u'specHandleAssignmentExpression', var.get(u'ref'), var.get(u'path'), var.get(u'binary')).callprop(u'concat', var.get(u't').callprop(u'expressionStatement', var.get(u'ref')))
                    else:
                        if (var.get(u't').callprop(u'isAssignmentExpression', var.get(u'node')) and var.get(u'isMemberExpressionSuper')(var.get(u'node').get(u'left'))):
                            return var.get(u"this").callprop(u'specHandleAssignmentExpression', var.get(u"null"), var.get(u'path'), var.get(u'node'))
            if var.get(u'property').neg():
                return var.get('undefined')
            var.put(u'superProperty', var.get(u"this").callprop(u'getSuperProperty', var.get(u'property'), var.get(u'computed')))
            if var.get(u'args'):
                return var.get(u"this").callprop(u'optimiseCall', var.get(u'superProperty'), var.get(u'args'))
            else:
                return var.get(u'superProperty')
        PyJs_specHandle_736_._set_name(u'specHandle')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'specHandle', PyJs_specHandle_736_)
        @Js
        def PyJs_optimiseCall_737_(callee, args, this, arguments, var=var):
            var = Scope({u'this':this, u'args':args, u'callee':callee, u'arguments':arguments, u'optimiseCall':PyJs_optimiseCall_737_}, var)
            var.registers([u'thisNode', u'args', u'callee'])
            var.put(u'thisNode', var.get(u't').callprop(u'thisExpression'))
            var.get(u'thisNode').put(var.get(u'HARDCORE_THIS_REF'), var.get(u'true'))
            return PyJsComma(Js(0.0),var.get(u'_babelHelperOptimiseCallExpression2').get(u'default'))(var.get(u'callee'), var.get(u'thisNode'), var.get(u'args'))
        PyJs_optimiseCall_737_._set_name(u'optimiseCall')
        var.get(u'ReplaceSupers').get(u'prototype').put(u'optimiseCall', PyJs_optimiseCall_737_)
        return var.get(u'ReplaceSupers')
    PyJs_anonymous_725_._set_name(u'anonymous')
    var.put(u'ReplaceSupers', PyJs_anonymous_725_())
    var.get(u'exports').put(u'default', var.get(u'ReplaceSupers'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_714_._set_name(u'anonymous')
PyJs_Object_738_ = Js({u'babel-helper-optimise-call-expression':Js(52.0),u'babel-messages':Js(57.0),u'babel-runtime/core-js/symbol':Js(105.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_739_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'_babelTemplate', u'module', u'helpers', u'_interopRequireDefault', u'_babelTemplate2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_740_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_740_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    pass
    PyJs_Object_741_ = Js({})
    var.put(u'helpers', PyJs_Object_741_)
    var.get(u'exports').put(u'default', var.get(u'helpers'))
    def PyJs_LONG_742_(var=var):
        return var.get(u'helpers').put(u'typeof', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (typeof Symbol === "function" && typeof Symbol.iterator === "symbol")\n    ? function (obj) { return typeof obj; }\n    : function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n')))
    PyJs_LONG_742_()
    def PyJs_LONG_743_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function () {\n    var REACT_ELEMENT_TYPE = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\n\n    return function createRawReactElement (type, props, key, children) {\n      var defaultProps = type && type.defaultProps;\n      var childrenLength = arguments.length - 3;\n\n      if (!props && childrenLength !== 0) {\n        // If we\'re going to assign props.children, we create a new object now\n        // to avoid mutating defaultProps.\n        props = {};\n      }\n      if (props && defaultProps) {\n        for (var propName in defaultProps) {\n          if (props[propName] === void 0) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      } else if (!props) {\n        props = defaultProps || {};\n      }\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 3];\n        }\n        props.children = childArray;\n      }\n\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key === undefined ? null : \'\' + key,\n        ref: null,\n        props: props,\n        _owner: null,\n      };\n    };\n\n  })()\n'))
    var.get(u'helpers').put(u'jsx', PyJs_LONG_743_())
    def PyJs_LONG_744_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (iterable) {\n    if (typeof Symbol === "function") {\n      if (Symbol.asyncIterator) {\n        var method = iterable[Symbol.asyncIterator];\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        return iterable[Symbol.iterator]();\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  })\n'))
    var.get(u'helpers').put(u'asyncIterator', PyJs_LONG_744_())
    def PyJs_LONG_745_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function () {\n    function AwaitValue(value) {\n      this.value = value;\n    }\n\n    function AsyncGenerator(gen) {\n      var front, back;\n\n      function send(key, arg) {\n        return new Promise(function (resolve, reject) {\n          var request = {\n            key: key,\n            arg: arg,\n            resolve: resolve,\n            reject: reject,\n            next: null\n          };\n\n          if (back) {\n            back = back.next = request;\n          } else {\n            front = back = request;\n            resume(key, arg);\n          }\n        });\n      }\n\n      function resume(key, arg) {\n        try {\n          var result = gen[key](arg)\n          var value = result.value;\n          if (value instanceof AwaitValue) {\n            Promise.resolve(value.value).then(\n              function (arg) { resume("next", arg); },\n              function (arg) { resume("throw", arg); });\n          } else {\n            settle(result.done ? "return" : "normal", result.value);\n          }\n        } catch (err) {\n          settle("throw", err);\n        }\n      }\n\n      function settle(type, value) {\n        switch (type) {\n          case "return":\n            front.resolve({ value: value, done: true });\n            break;\n          case "throw":\n            front.reject(value);\n            break;\n          default:\n            front.resolve({ value: value, done: false });\n            break;\n        }\n\n        front = front.next;\n        if (front) {\n          resume(front.key, front.arg);\n        } else {\n          back = null;\n        }\n      }\n\n      this._invoke = send;\n\n      // Hide "return" method if generator return is not supported\n      if (typeof gen.return !== "function") {\n        this.return = undefined;\n      }\n    }\n\n    if (typeof Symbol === "function" && Symbol.asyncIterator) {\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n    }\n\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n\n    return {\n      wrap: function (fn) {\n        return function () {\n          return new AsyncGenerator(fn.apply(this, arguments));\n        };\n      },\n      await: function (value) {\n        return new AwaitValue(value);\n      }\n    };\n\n  })()\n'))
    var.get(u'helpers').put(u'asyncGenerator', PyJs_LONG_745_())
    def PyJs_LONG_746_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  })\n'))
    var.get(u'helpers').put(u'asyncGeneratorDelegate', PyJs_LONG_746_())
    def PyJs_LONG_747_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step("next", value);\n            }, function (err) {\n              step("throw", err);\n            });\n          }\n        }\n\n        return step("next");\n      });\n    };\n  })\n'))
    var.get(u'helpers').put(u'asyncToGenerator', PyJs_LONG_747_())
    var.get(u'helpers').put(u'classCallCheck', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  });\n')))
    def PyJs_LONG_748_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i ++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })()\n'))
    var.get(u'helpers').put(u'createClass', PyJs_LONG_748_())
    var.get(u'helpers').put(u'defineEnumerableProperties', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n    return obj;\n  })\n')))
    def PyJs_LONG_749_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  })\n'))
    var.get(u'helpers').put(u'defaults', PyJs_LONG_749_())
    def PyJs_LONG_750_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  });\n'))
    var.get(u'helpers').put(u'defineProperty', PyJs_LONG_750_())
    def PyJs_LONG_751_(var=var):
        return var.get(u'helpers').put(u'extends', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  })\n')))
    PyJs_LONG_751_()
    def PyJs_LONG_752_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if ("value" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  });\n'))
    var.get(u'helpers').put(u'get', PyJs_LONG_752_())
    def PyJs_LONG_753_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  })\n'))
    var.get(u'helpers').put(u'inherits', PyJs_LONG_753_())
    var.get(u'helpers').put(u'instanceof', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  });\n')))
    var.get(u'helpers').put(u'interopRequireDefault', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  })\n')))
    def PyJs_LONG_754_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  })\n'))
    var.get(u'helpers').put(u'interopRequireWildcard', PyJs_LONG_754_())
    var.get(u'helpers').put(u'newArrowCheck', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  });\n')))
    var.get(u'helpers').put(u'objectDestructuringEmpty', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  });\n')))
    var.get(u'helpers').put(u'objectWithoutProperties', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  })\n')))
    var.get(u'helpers').put(u'possibleConstructorReturn', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (self, call) {\n    if (!self) {\n      throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    }\n    return call && (typeof call === "object" || typeof call === "function") ? call : self;\n  });\n')))
    var.get(u'helpers').put(u'selfGlobal', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  typeof global === "undefined" ? self : global\n')))
    def PyJs_LONG_755_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if ("value" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  });\n'))
    var.get(u'helpers').put(u'set', PyJs_LONG_755_())
    def PyJs_LONG_756_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function () {\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\n    // array iterator case.\n    function sliceIterator(arr, i) {\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\n      // iterators etc. variable names have been minimised to reduce the size of this massive\n      // helper. sometimes spec compliancy is annoying :(\n      //\n      // _n = _iteratorNormalCompletion\n      // _d = _didIteratorError\n      // _e = _iteratorError\n      // _i = _iterator\n      // _s = _step\n\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i["return"]) _i["return"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance");\n      }\n    };\n  })();\n'))
    var.get(u'helpers').put(u'slicedToArray', PyJs_LONG_756_())
    def PyJs_LONG_757_(var=var):
        return PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n        if (i && _arr.length === i) break;\n      }\n      return _arr;\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  });\n'))
    var.get(u'helpers').put(u'slicedToArrayLoose', PyJs_LONG_757_())
    var.get(u'helpers').put(u'taggedTemplateLiteral', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  });\n')))
    var.get(u'helpers').put(u'taggedTemplateLiteralLoose', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  });\n')))
    var.get(u'helpers').put(u'temporalRef', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  })\n')))
    var.get(u'helpers').put(u'temporalUndefined', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  ({})\n')))
    var.get(u'helpers').put(u'toArray', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  });\n')))
    var.get(u'helpers').put(u'toConsumableArray', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  });\n')))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_739_._set_name(u'anonymous')
PyJs_Object_758_ = Js({u'babel-template':Js(221.0)})
@Js
def PyJs_anonymous_759_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'get', u'_helpers2', u'require', u'list', u'_helpers', u'_keys2', u'_keys', u'module', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_760_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_760_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_get_(name, this, arguments, var=var):
        var = Scope({u'this':this, u'name':name, u'arguments':arguments}, var)
        var.registers([u'name', u'fn'])
        var.put(u'fn', var.get(u'_helpers2').get(u'default').get(var.get(u'name')))
        if var.get(u'fn').neg():
            PyJsTempException = JsToPyException(var.get(u'ReferenceError').create((Js(u'Unknown helper ')+var.get(u'name'))))
            raise PyJsTempException
        return var.get(u'fn')().get(u'expression')
    PyJsHoisted_get_.func_name = u'get'
    var.put(u'get', PyJsHoisted_get_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'list', var.get(u'undefined'))
    var.put(u'_keys', var.get(u'require')(Js(u'babel-runtime/core-js/object/keys')))
    var.put(u'_keys2', var.get(u'_interopRequireDefault')(var.get(u'_keys')))
    var.get(u'exports').put(u'get', var.get(u'get'))
    var.put(u'_helpers', var.get(u'require')(Js(u'./helpers')))
    var.put(u'_helpers2', var.get(u'_interopRequireDefault')(var.get(u'_helpers')))
    pass
    pass
    @Js
    def PyJs_anonymous_761_(name, this, arguments, var=var):
        var = Scope({u'this':this, u'name':name, u'arguments':arguments}, var)
        var.registers([u'name'])
        return PyJsStrictNeq(var.get(u'name'),Js(u'__esModule'))
    PyJs_anonymous_761_._set_name(u'anonymous')
    @Js
    def PyJs_anonymous_762_(name, this, arguments, var=var):
        var = Scope({u'this':this, u'name':name, u'arguments':arguments}, var)
        var.registers([u'name'])
        return (var.get(u'name').callprop(u'slice', Js(1.0)) if PyJsStrictEq(var.get(u'name').get(u'0'),Js(u'_')) else var.get(u'name'))
    PyJs_anonymous_762_._set_name(u'anonymous')
    var.put(u'list', var.get(u'exports').put(u'list', PyJsComma(Js(0.0),var.get(u'_keys2').get(u'default'))(var.get(u'_helpers2').get(u'default')).callprop(u'map', PyJs_anonymous_762_).callprop(u'filter', PyJs_anonymous_761_)))
    var.get(u'exports').put(u'default', var.get(u'get'))
PyJs_anonymous_759_._set_name(u'anonymous')
PyJs_Object_763_ = Js({u'./helpers':Js(55.0),u'babel-runtime/core-js/object/keys':Js(103.0)})
@Js
def PyJs_anonymous_764_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_stringify2', u'_interopRequireWildcard', u'get', u'require', u'parseArgs', u'MESSAGES', u'_util', u'util', u'_stringify', u'module', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_766_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_766_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_parseArgs_(args, this, arguments, var=var):
        var = Scope({u'this':this, u'args':args, u'arguments':arguments}, var)
        var.registers([u'args'])
        @Js
        def PyJs_anonymous_769_(val, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'val':val}, var)
            var.registers([u'val'])
            if ((var.get(u'val')!=var.get(u"null")) and var.get(u'val').get(u'inspect')):
                return var.get(u'val').callprop(u'inspect')
            else:
                try:
                    return (PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'val')) or (var.get(u'val')+Js(u'')))
                except PyJsException as PyJsTempException:
                    PyJsHolder_65_98138155 = var.own.get(u'e')
                    var.force_own_put(u'e', PyExceptionToJs(PyJsTempException))
                    try:
                        return var.get(u'util').callprop(u'inspect', var.get(u'val'))
                    finally:
                        if PyJsHolder_65_98138155 is not None:
                            var.own[u'e'] = PyJsHolder_65_98138155
                        else:
                            del var.own[u'e']
                        del PyJsHolder_65_98138155
        PyJs_anonymous_769_._set_name(u'anonymous')
        return var.get(u'args').callprop(u'map', PyJs_anonymous_769_)
    PyJsHoisted_parseArgs_.func_name = u'parseArgs'
    var.put(u'parseArgs', PyJsHoisted_parseArgs_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_765_ = Js({})
            var.put(u'newObj', PyJs_Object_765_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_get_(key, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'key':key}, var)
        var.registers([u'_len', u'_key', u'args', u'key', u'msg'])
        #for JS loop
        var.put(u'_len', var.get(u'arguments').get(u'length'))
        var.put(u'args', var.get(u'Array')(((var.get(u'_len')-Js(1.0)) if (var.get(u'_len')>Js(1.0)) else Js(0.0))))
        var.put(u'_key', Js(1.0))
        while (var.get(u'_key')<var.get(u'_len')):
            try:
                var.get(u'args').put((var.get(u'_key')-Js(1.0)), var.get(u'arguments').get(var.get(u'_key')))
            finally:
                    (var.put(u'_key',Js(var.get(u'_key').to_number())+Js(1))-Js(1))
        var.put(u'msg', var.get(u'MESSAGES').get(var.get(u'key')))
        if var.get(u'msg').neg():
            PyJsTempException = JsToPyException(var.get(u'ReferenceError').create((Js(u'Unknown message ')+PyJsComma(Js(0.0),var.get(u'_stringify2').get(u'default'))(var.get(u'key')))))
            raise PyJsTempException
        var.put(u'args', var.get(u'parseArgs')(var.get(u'args')))
        @Js
        def PyJs_anonymous_768_(str, i, this, arguments, var=var):
            var = Scope({u'i':i, u'this':this, u'arguments':arguments, u'str':str}, var)
            var.registers([u'i', u'str'])
            return var.get(u'args').get((var.get(u'i')-Js(1.0)))
        PyJs_anonymous_768_._set_name(u'anonymous')
        return var.get(u'msg').callprop(u'replace', JsRegExp(u'/\\$(\\d+)/g'), PyJs_anonymous_768_)
    PyJsHoisted_get_.func_name = u'get'
    var.put(u'get', PyJsHoisted_get_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'MESSAGES', var.get(u'undefined'))
    var.put(u'_stringify', var.get(u'require')(Js(u'babel-runtime/core-js/json/stringify')))
    var.put(u'_stringify2', var.get(u'_interopRequireDefault')(var.get(u'_stringify')))
    var.get(u'exports').put(u'get', var.get(u'get'))
    var.get(u'exports').put(u'parseArgs', var.get(u'parseArgs'))
    var.put(u'_util', var.get(u'require')(Js(u'util')))
    var.put(u'util', var.get(u'_interopRequireWildcard')(var.get(u'_util')))
    pass
    pass
    PyJs_Object_767_ = Js({u'tailCallReassignmentDeopt':Js(u"Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence"),u'classesIllegalBareSuper':Js(u'Illegal use of bare super'),u'classesIllegalSuperCall':Js(u'Direct super call is illegal in non-constructor, use super.$1() instead'),u'scopeDuplicateDeclaration':Js(u'Duplicate declaration $1'),u'settersNoRest':Js(u"Setters aren't allowed to have a rest"),u'noAssignmentsInForHead':Js(u'No assignments allowed in for-in/of head'),u'expectedMemberExpressionOrIdentifier':Js(u'Expected type MemberExpression or Identifier'),u'invalidParentForThisNode':Js(u"We don't know how to handle this node within the current parent - please open an issue"),u'readOnly':Js(u'$1 is read-only'),u'unknownForHead':Js(u'Unknown node type $1 in ForStatement'),u'didYouMean':Js(u'Did you mean $1?'),u'codeGeneratorDeopt':Js(u'Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.'),u'missingTemplatesDirectory':Js(u'no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues'),u'unsupportedOutputType':Js(u'Unsupported output type $1'),u'illegalMethodName':Js(u'Illegal method name $1'),u'lostTrackNodePath':Js(u"We lost track of this node's position, likely because the AST was directly manipulated"),u'modulesIllegalExportName':Js(u'Illegal export $1'),u'modulesDuplicateDeclarations':Js(u'Duplicate module declarations with the same source but in different scopes'),u'undeclaredVariable':Js(u'Reference to undeclared variable $1'),u'undeclaredVariableType':Js(u'Referencing a type alias outside of a type annotation'),u'undeclaredVariableSuggestion':Js(u'Reference to undeclared variable $1 - did you mean $2?'),u'traverseNeedsParent':Js(u'You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.'),u'traverseVerifyRootFunction':Js(u"You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?"),u'traverseVerifyVisitorProperty':Js(u'You passed `traverse()` a visitor object with the property $1 that has the invalid property $2'),u'traverseVerifyNodeType':Js(u"You gave us a visitor for the node type $1 but it's not a valid type"),u'pluginNotObject':Js(u'Plugin $2 specified in $1 was expected to return an object when invoked but returned $3'),u'pluginNotFunction':Js(u'Plugin $2 specified in $1 was expected to return a function but returned $3'),u'pluginUnknown':Js(u'Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4'),u'pluginInvalidProperty':Js(u'Plugin $2 specified in $1 provided an invalid property of $3')})
    var.put(u'MESSAGES', var.get(u'exports').put(u'MESSAGES', PyJs_Object_767_))
    pass
    pass
PyJs_anonymous_764_._set_name(u'anonymous')
PyJs_Object_770_ = Js({u'babel-runtime/core-js/json/stringify':Js(97.0),u'util':Js(534.0)})
@Js
def PyJs_anonymous_771_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_776_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_776_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_772_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u'messages'])
        var.put(u'messages', var.get(u'_ref').get(u'messages'))
        @Js
        def PyJs_Scope_775_(_ref2, this, arguments, var=var):
            var = Scope({u'this':this, u'Scope':PyJs_Scope_775_, u'_ref2':_ref2, u'arguments':arguments}, var)
            var.registers([u'_isArray', u'_iterator', u'name', u'violation', u'_ref3', u'binding', u'_ref2', u'_i', u'scope'])
            var.put(u'scope', var.get(u'_ref2').get(u'scope'))
            for PyJsTemp in var.get(u'scope').get(u'bindings'):
                var.put(u'name', PyJsTemp)
                var.put(u'binding', var.get(u'scope').get(u'bindings').get(var.get(u'name')))
                if (PyJsStrictNeq(var.get(u'binding').get(u'kind'),Js(u'const')) and PyJsStrictNeq(var.get(u'binding').get(u'kind'),Js(u'module'))):
                    continue
                #for JS loop
                var.put(u'_iterator', var.get(u'binding').get(u'constantViolations'))
                var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
                var.put(u'_i', Js(0.0))
                var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
                while 1:
                    pass
                    if var.get(u'_isArray'):
                        if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                            break
                        var.put(u'_ref3', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                        if var.get(u'_i').get(u'done'):
                            break
                        var.put(u'_ref3', var.get(u'_i').get(u'value'))
                    var.put(u'violation', var.get(u'_ref3'))
                    PyJsTempException = JsToPyException(var.get(u'violation').callprop(u'buildCodeFrameError', var.get(u'messages').callprop(u'get', Js(u'readOnly'), var.get(u'name'))))
                    raise PyJsTempException
                
        PyJs_Scope_775_._set_name(u'Scope')
        PyJs_Object_774_ = Js({u'Scope':PyJs_Scope_775_})
        PyJs_Object_773_ = Js({u'visitor':PyJs_Object_774_})
        return PyJs_Object_773_
    PyJs_anonymous_772_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_772_)
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_771_._set_name(u'anonymous')
PyJs_Object_777_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0)})
@Js
def PyJs_anonymous_778_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_779_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u't'])
        var.put(u't', var.get(u'_ref').get(u'types'))
        @Js
        def PyJs_ArrowFunctionExpression_782_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'ArrowFunctionExpression':PyJs_ArrowFunctionExpression_782_}, var)
            var.registers([u'node', u'path', u'state', u'boundThis'])
            if var.get(u'state').get(u'opts').get(u'spec'):
                var.put(u'node', var.get(u'path').get(u'node'))
                if var.get(u'node').get(u'shadow'):
                    return var.get('undefined')
                PyJs_Object_783_ = Js({u'this':Js(False)})
                var.get(u'node').put(u'shadow', PyJs_Object_783_)
                var.get(u'node').put(u'type', Js(u'FunctionExpression'))
                var.put(u'boundThis', var.get(u't').callprop(u'thisExpression'))
                var.get(u'boundThis').put(u'_forceShadow', var.get(u'path'))
                var.get(u'path').callprop(u'ensureBlock')
                var.get(u'path').callprop(u'get', Js(u'body')).callprop(u'unshiftContainer', Js(u'body'), var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'state').callprop(u'addHelper', Js(u'newArrowCheck')), Js([var.get(u't').callprop(u'thisExpression'), var.get(u'boundThis')]))))
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u'node'), var.get(u't').callprop(u'identifier', Js(u'bind'))), Js([var.get(u't').callprop(u'thisExpression')])))
            else:
                var.get(u'path').callprop(u'arrowFunctionToShadowed')
        PyJs_ArrowFunctionExpression_782_._set_name(u'ArrowFunctionExpression')
        PyJs_Object_781_ = Js({u'ArrowFunctionExpression':PyJs_ArrowFunctionExpression_782_})
        PyJs_Object_780_ = Js({u'visitor':PyJs_Object_781_})
        return PyJs_Object_780_
    PyJs_anonymous_779_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_779_)
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_778_._set_name(u'anonymous')
PyJs_Object_784_ = Js({})
@Js
def PyJs_anonymous_785_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_792_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_792_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_786_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u't', u'statementList'])
        @Js
        def PyJsHoisted_statementList_(key, path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'key':key}, var)
            var.registers([u'key', u'paths', u'_isArray', u'_iterator', u'func', u'_ref2', u'declar', u'_i', u'path', u'_path'])
            var.put(u'paths', var.get(u'path').callprop(u'get', var.get(u'key')))
            #for JS loop
            var.put(u'_iterator', var.get(u'paths'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i').get(u'value'))
                var.put(u'_path', var.get(u'_ref2'))
                var.put(u'func', var.get(u'_path').get(u'node'))
                if var.get(u'_path').callprop(u'isFunctionDeclaration').neg():
                    continue
                var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', Js(u'let'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'func').get(u'id'), var.get(u't').callprop(u'toExpression', var.get(u'func')))])))
                var.get(u'declar').put(u'_blockHoist', Js(2.0))
                var.get(u'func').put(u'id', var.get(u"null"))
                var.get(u'_path').callprop(u'replaceWith', var.get(u'declar'))
            
        PyJsHoisted_statementList_.func_name = u'statementList'
        var.put(u'statementList', PyJsHoisted_statementList_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        pass
        @Js
        def PyJs_BlockStatement_789_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'BlockStatement':PyJs_BlockStatement_789_}, var)
            var.registers([u'node', u'path', u'parent'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            PyJs_Object_790_ = Js({u'body':var.get(u'node')})
            if (var.get(u't').callprop(u'isFunction', var.get(u'parent'), PyJs_Object_790_) or var.get(u't').callprop(u'isExportDeclaration', var.get(u'parent'))):
                return var.get('undefined')
            var.get(u'statementList')(Js(u'body'), var.get(u'path'))
        PyJs_BlockStatement_789_._set_name(u'BlockStatement')
        @Js
        def PyJs_SwitchCase_791_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'SwitchCase':PyJs_SwitchCase_791_, u'arguments':arguments}, var)
            var.registers([u'path'])
            var.get(u'statementList')(Js(u'consequent'), var.get(u'path'))
        PyJs_SwitchCase_791_._set_name(u'SwitchCase')
        PyJs_Object_788_ = Js({u'BlockStatement':PyJs_BlockStatement_789_,u'SwitchCase':PyJs_SwitchCase_791_})
        PyJs_Object_787_ = Js({u'visitor':PyJs_Object_788_})
        return PyJs_Object_787_
    PyJs_anonymous_786_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_786_)
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_785_._set_name(u'anonymous')
PyJs_Object_793_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0)})
@Js
def PyJs_anonymous_794_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_symbol2', u'continuationVisitor', u'loopLabelVisitor', u'_babelTemplate', u'module', u'letReferenceFunctionVisitor', u'isVar', u'_interopRequireDefault', u'loopNodeTo', u'_extend', u'_babelTraverse', u'convertBlockScopedToVar', u'_tdz', u'BlockScoping', u'ignoreBlock', u'hoistVarDeclarationsVisitor', u'_values2', u'_extend2', u'_create2', u'buildRetCheck', u'_classCallCheck3', u'_classCallCheck2', u'_create', u'exports', u'_babelTraverse2', u'_interopRequireWildcard', u'_babelTypes', u'_symbol', u'isBlockScoped', u'loopVisitor', u'require', u'_babelTemplate2', u't', u'_values', u'letReferenceBlockVisitor'])
    @Js
    def PyJsHoisted_convertBlockScopedToVar_(path, node, parent, scope, this, arguments, var=var):
        var = Scope({u'node':node, u'arguments':arguments, u'parent':parent, u'scope':scope, u'this':this, u'path':path}, var)
        var.registers([u'node', u'name', u'moveBindingsToParent', u'i', u'binding', u'ids', u'declar', u'parent', u'parentScope', u'path', u'scope'])
        var.put(u'moveBindingsToParent', (var.get(u'arguments').get(u'4') if ((var.get(u'arguments').get(u'length')>Js(4.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'4'),var.get(u'undefined'))) else Js(False)))
        if var.get(u'node').neg():
            var.put(u'node', var.get(u'path').get(u'node'))
        if var.get(u't').callprop(u'isFor', var.get(u'parent')).neg():
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'node').get(u'declarations').get(u'length')):
                try:
                    var.put(u'declar', var.get(u'node').get(u'declarations').get(var.get(u'i')))
                    var.get(u'declar').put(u'init', (var.get(u'declar').get(u'init') or var.get(u'scope').callprop(u'buildUndefinedNode')))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        var.get(u'node').put(var.get(u't').get(u'BLOCK_SCOPED_SYMBOL'), var.get(u'true'))
        var.get(u'node').put(u'kind', Js(u'var'))
        if var.get(u'moveBindingsToParent'):
            var.put(u'parentScope', var.get(u'scope').callprop(u'getFunctionParent'))
            var.put(u'ids', var.get(u'path').callprop(u'getBindingIdentifiers'))
            for PyJsTemp in var.get(u'ids'):
                var.put(u'name', PyJsTemp)
                var.put(u'binding', var.get(u'scope').callprop(u'getOwnBinding', var.get(u'name')))
                if var.get(u'binding'):
                    var.get(u'binding').put(u'kind', Js(u'var'))
                var.get(u'scope').callprop(u'moveBindingTo', var.get(u'name'), var.get(u'parentScope'))
    PyJsHoisted_convertBlockScopedToVar_.func_name = u'convertBlockScopedToVar'
    var.put(u'convertBlockScopedToVar', PyJsHoisted_convertBlockScopedToVar_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_802_ = Js({})
            var.put(u'newObj', PyJs_Object_802_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    @Js
    def PyJsHoisted_ignoreBlock_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
        var.registers([u'path'])
        return (var.get(u't').callprop(u'isLoop', var.get(u'path').get(u'parent')) or var.get(u't').callprop(u'isCatchClause', var.get(u'path').get(u'parent')))
    PyJsHoisted_ignoreBlock_.func_name = u'ignoreBlock'
    var.put(u'ignoreBlock', PyJsHoisted_ignoreBlock_)
    @Js
    def PyJsHoisted_loopNodeTo_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isBreakStatement', var.get(u'node')):
            return Js(u'break')
        else:
            if var.get(u't').callprop(u'isContinueStatement', var.get(u'node')):
                return Js(u'continue')
    PyJsHoisted_loopNodeTo_.func_name = u'loopNodeTo'
    var.put(u'loopNodeTo', PyJsHoisted_loopNodeTo_)
    @Js
    def PyJsHoisted_isVar_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        PyJs_Object_804_ = Js({u'kind':Js(u'var')})
        return (var.get(u't').callprop(u'isVariableDeclaration', var.get(u'node'), PyJs_Object_804_) and var.get(u'isBlockScoped')(var.get(u'node')).neg())
    PyJsHoisted_isVar_.func_name = u'isVar'
    var.put(u'isVar', PyJsHoisted_isVar_)
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_803_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_803_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_isBlockScoped_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        if var.get(u't').callprop(u'isVariableDeclaration', var.get(u'node')).neg():
            return Js(False)
        if var.get(u'node').get(var.get(u't').get(u'BLOCK_SCOPED_SYMBOL')):
            return var.get(u'true')
        if (PyJsStrictNeq(var.get(u'node').get(u'kind'),Js(u'let')) and PyJsStrictNeq(var.get(u'node').get(u'kind'),Js(u'const'))):
            return Js(False)
        return var.get(u'true')
    PyJsHoisted_isBlockScoped_.func_name = u'isBlockScoped'
    var.put(u'isBlockScoped', PyJsHoisted_isBlockScoped_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
    var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    @Js
    def PyJs_anonymous_795_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        @Js
        def PyJs_VariableDeclaration_798_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'VariableDeclaration':PyJs_VariableDeclaration_798_}, var)
            var.registers([u'node', u'decl', u'parent', u'i', u'file', u'path', u'scope', u'nodes', u'assign'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            if var.get(u'isBlockScoped')(var.get(u'node')).neg():
                return var.get('undefined')
            var.get(u'convertBlockScopedToVar')(var.get(u'path'), var.get(u"null"), var.get(u'parent'), var.get(u'scope'), var.get(u'true'))
            if var.get(u'node').get(u'_tdzThis'):
                var.put(u'nodes', Js([var.get(u'node')]))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'node').get(u'declarations').get(u'length')):
                    try:
                        var.put(u'decl', var.get(u'node').get(u'declarations').get(var.get(u'i')))
                        if var.get(u'decl').get(u'init'):
                            var.put(u'assign', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'decl').get(u'id'), var.get(u'decl').get(u'init')))
                            var.get(u'assign').put(u'_ignoreBlockScopingTDZ', var.get(u'true'))
                            var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'assign')))
                        var.get(u'decl').put(u'init', var.get(u'file').callprop(u'addHelper', Js(u'temporalUndefined')))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                var.get(u'node').put(u'_blockHoist', Js(2.0))
                if var.get(u'path').callprop(u'isCompletionRecord'):
                    var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'scope').callprop(u'buildUndefinedNode')))
                var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'nodes'))
        PyJs_VariableDeclaration_798_._set_name(u'VariableDeclaration')
        @Js
        def PyJs_Loop_799_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'Loop':PyJs_Loop_799_, u'arguments':arguments, u'file':file}, var)
            var.registers([u'node', u'blockScoping', u'parent', u'replace', u'file', u'path', u'scope'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.get(u't').callprop(u'ensureBlock', var.get(u'node'))
            var.put(u'blockScoping', var.get(u'BlockScoping').create(var.get(u'path'), var.get(u'path').callprop(u'get', Js(u'body')), var.get(u'parent'), var.get(u'scope'), var.get(u'file')))
            var.put(u'replace', var.get(u'blockScoping').callprop(u'run'))
            if var.get(u'replace'):
                var.get(u'path').callprop(u'replaceWith', var.get(u'replace'))
        PyJs_Loop_799_._set_name(u'Loop')
        @Js
        def PyJs_CatchClause_800_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'CatchClause':PyJs_CatchClause_800_}, var)
            var.registers([u'scope', u'blockScoping', u'file', u'parent', u'path'])
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'blockScoping', var.get(u'BlockScoping').create(var.get(u"null"), var.get(u'path').callprop(u'get', Js(u'body')), var.get(u'parent'), var.get(u'scope'), var.get(u'file')))
            var.get(u'blockScoping').callprop(u'run')
        PyJs_CatchClause_800_._set_name(u'CatchClause')
        @Js
        def PyJs_BlockStatementSwitchStatementProgram_801_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'BlockStatementSwitchStatementProgram':PyJs_BlockStatementSwitchStatementProgram_801_, u'arguments':arguments, u'file':file}, var)
            var.registers([u'path', u'blockScoping', u'file'])
            if var.get(u'ignoreBlock')(var.get(u'path')).neg():
                var.put(u'blockScoping', var.get(u'BlockScoping').create(var.get(u"null"), var.get(u'path'), var.get(u'path').get(u'parent'), var.get(u'path').get(u'scope'), var.get(u'file')))
                var.get(u'blockScoping').callprop(u'run')
        PyJs_BlockStatementSwitchStatementProgram_801_._set_name(u'BlockStatementSwitchStatementProgram')
        PyJs_Object_797_ = Js({u'VariableDeclaration':PyJs_VariableDeclaration_798_,u'Loop':PyJs_Loop_799_,u'CatchClause':PyJs_CatchClause_800_,u'BlockStatement|SwitchStatement|Program':PyJs_BlockStatementSwitchStatementProgram_801_})
        PyJs_Object_796_ = Js({u'visitor':PyJs_Object_797_})
        return PyJs_Object_796_
    PyJs_anonymous_795_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_795_)
    var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
    var.put(u'_babelTraverse2', var.get(u'_interopRequireDefault')(var.get(u'_babelTraverse')))
    var.put(u'_tdz', var.get(u'require')(Js(u'./tdz')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    var.put(u'_values', var.get(u'require')(Js(u'lodash/values')))
    var.put(u'_values2', var.get(u'_interopRequireDefault')(var.get(u'_values')))
    var.put(u'_extend', var.get(u'require')(Js(u'lodash/extend')))
    var.put(u'_extend2', var.get(u'_interopRequireDefault')(var.get(u'_extend')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    pass
    pass
    pass
    var.put(u'buildRetCheck', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  if (typeof RETURN === "object") return RETURN.v;\n')))
    pass
    pass
    pass
    @Js
    def PyJs_Function_806_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'Function':PyJs_Function_806_, u'arguments':arguments}, var)
        var.registers([u'path', u'state'])
        var.get(u'path').callprop(u'traverse', var.get(u'letReferenceFunctionVisitor'), var.get(u'state'))
        return var.get(u'path').callprop(u'skip')
    PyJs_Function_806_._set_name(u'Function')
    PyJs_Object_805_ = Js({u'Function':PyJs_Function_806_})
    var.put(u'letReferenceBlockVisitor', var.get(u'_babelTraverse2').get(u'default').get(u'visitors').callprop(u'merge', Js([PyJs_Object_805_, var.get(u'_tdz').get(u'visitor')])))
    @Js
    def PyJs_ReferencedIdentifier_808_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_808_, u'arguments':arguments}, var)
        var.registers([u'localBinding', u'path', u'state', u'ref'])
        var.put(u'ref', var.get(u'state').get(u'letReferences').get(var.get(u'path').get(u'node').get(u'name')))
        if var.get(u'ref').neg():
            return var.get('undefined')
        var.put(u'localBinding', var.get(u'path').get(u'scope').callprop(u'getBindingIdentifier', var.get(u'path').get(u'node').get(u'name')))
        if (var.get(u'localBinding') and PyJsStrictNeq(var.get(u'localBinding'),var.get(u'ref'))):
            return var.get('undefined')
        var.get(u'state').put(u'closurify', var.get(u'true'))
    PyJs_ReferencedIdentifier_808_._set_name(u'ReferencedIdentifier')
    PyJs_Object_807_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_808_})
    var.put(u'letReferenceFunctionVisitor', var.get(u'_babelTraverse2').get(u'default').get(u'visitors').callprop(u'merge', Js([PyJs_Object_807_, var.get(u'_tdz').get(u'visitor')])))
    @Js
    def PyJs_enter_810_(path, self, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'self':self, u'arguments':arguments, u'enter':PyJs_enter_810_}, var)
        var.registers([u'node', u'path', u'nodes', u'self', u'parent'])
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'parent', var.get(u'path').get(u'parent'))
        if var.get(u'path').callprop(u'isForStatement'):
            if var.get(u'isVar')(var.get(u'node').get(u'init'), var.get(u'node')):
                var.put(u'nodes', var.get(u'self').callprop(u'pushDeclar', var.get(u'node').get(u'init')))
                if PyJsStrictEq(var.get(u'nodes').get(u'length'),Js(1.0)):
                    var.get(u'node').put(u'init', var.get(u'nodes').get(u'0'))
                else:
                    var.get(u'node').put(u'init', var.get(u't').callprop(u'sequenceExpression', var.get(u'nodes')))
        else:
            if var.get(u'path').callprop(u'isFor'):
                if var.get(u'isVar')(var.get(u'node').get(u'left'), var.get(u'node')):
                    var.get(u'self').callprop(u'pushDeclar', var.get(u'node').get(u'left'))
                    var.get(u'node').put(u'left', var.get(u'node').get(u'left').get(u'declarations').get(u'0').get(u'id'))
            else:
                if var.get(u'isVar')(var.get(u'node'), var.get(u'parent')):
                    @Js
                    def PyJs_anonymous_811_(expr, this, arguments, var=var):
                        var = Scope({u'this':this, u'expr':expr, u'arguments':arguments}, var)
                        var.registers([u'expr'])
                        return var.get(u't').callprop(u'expressionStatement', var.get(u'expr'))
                    PyJs_anonymous_811_._set_name(u'anonymous')
                    var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'self').callprop(u'pushDeclar', var.get(u'node')).callprop(u'map', PyJs_anonymous_811_))
                else:
                    if var.get(u'path').callprop(u'isFunction'):
                        return var.get(u'path').callprop(u'skip')
    PyJs_enter_810_._set_name(u'enter')
    PyJs_Object_809_ = Js({u'enter':PyJs_enter_810_})
    var.put(u'hoistVarDeclarationsVisitor', PyJs_Object_809_)
    @Js
    def PyJs_LabeledStatement_813_(_ref, state, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'LabeledStatement':PyJs_LabeledStatement_813_, u'state':state, u'arguments':arguments}, var)
        var.registers([u'node', u'_ref', u'state'])
        var.put(u'node', var.get(u'_ref').get(u'node'))
        var.get(u'state').get(u'innerLabels').callprop(u'push', var.get(u'node').get(u'label').get(u'name'))
    PyJs_LabeledStatement_813_._set_name(u'LabeledStatement')
    PyJs_Object_812_ = Js({u'LabeledStatement':PyJs_LabeledStatement_813_})
    var.put(u'loopLabelVisitor', PyJs_Object_812_)
    @Js
    def PyJs_enter_815_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'enter':PyJs_enter_815_}, var)
        var.registers([u'path', u'bindings', u'name', u'state'])
        if (var.get(u'path').callprop(u'isAssignmentExpression') or var.get(u'path').callprop(u'isUpdateExpression')):
            var.put(u'bindings', var.get(u'path').callprop(u'getBindingIdentifiers'))
            for PyJsTemp in var.get(u'bindings'):
                var.put(u'name', PyJsTemp)
                if PyJsStrictNeq(var.get(u'state').get(u'outsideReferences').get(var.get(u'name')),var.get(u'path').get(u'scope').callprop(u'getBindingIdentifier', var.get(u'name'))):
                    continue
                var.get(u'state').get(u'reassignments').put(var.get(u'name'), var.get(u'true'))
    PyJs_enter_815_._set_name(u'enter')
    PyJs_Object_814_ = Js({u'enter':PyJs_enter_815_})
    var.put(u'continuationVisitor', PyJs_Object_814_)
    pass
    @Js
    def PyJs_Loop_817_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'Loop':PyJs_Loop_817_}, var)
        var.registers([u'oldIgnoreLabeless', u'state', u'path'])
        var.put(u'oldIgnoreLabeless', var.get(u'state').get(u'ignoreLabeless'))
        var.get(u'state').put(u'ignoreLabeless', var.get(u'true'))
        var.get(u'path').callprop(u'traverse', var.get(u'loopVisitor'), var.get(u'state'))
        var.get(u'state').put(u'ignoreLabeless', var.get(u'oldIgnoreLabeless'))
        var.get(u'path').callprop(u'skip')
    PyJs_Loop_817_._set_name(u'Loop')
    @Js
    def PyJs_Function_818_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_818_, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJs_Function_818_._set_name(u'Function')
    @Js
    def PyJs_SwitchCase_819_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'SwitchCase':PyJs_SwitchCase_819_}, var)
        var.registers([u'oldInSwitchCase', u'state', u'path'])
        var.put(u'oldInSwitchCase', var.get(u'state').get(u'inSwitchCase'))
        var.get(u'state').put(u'inSwitchCase', var.get(u'true'))
        var.get(u'path').callprop(u'traverse', var.get(u'loopVisitor'), var.get(u'state'))
        var.get(u'state').put(u'inSwitchCase', var.get(u'oldInSwitchCase'))
        var.get(u'path').callprop(u'skip')
    PyJs_SwitchCase_819_._set_name(u'SwitchCase')
    @Js
    def PyJs_BreakStatementContinueStatementReturnStatement_820_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'BreakStatementContinueStatementReturnStatement':PyJs_BreakStatementContinueStatementReturnStatement_820_}, var)
        var.registers([u'node', u'parent', u'loopText', u'replace', u'state', u'path', u'scope'])
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'parent', var.get(u'path').get(u'parent'))
        var.put(u'scope', var.get(u'path').get(u'scope'))
        if var.get(u'node').get(var.get(u"this").get(u'LOOP_IGNORE')):
            return var.get('undefined')
        var.put(u'replace', PyJsComma(Js(0.0), Js(None)))
        var.put(u'loopText', var.get(u'loopNodeTo')(var.get(u'node')))
        if var.get(u'loopText'):
            if var.get(u'node').get(u'label'):
                if (var.get(u'state').get(u'innerLabels').callprop(u'indexOf', var.get(u'node').get(u'label').get(u'name'))>=Js(0.0)):
                    return var.get('undefined')
                var.put(u'loopText', ((var.get(u'loopText')+Js(u'|'))+var.get(u'node').get(u'label').get(u'name')))
            else:
                if var.get(u'state').get(u'ignoreLabeless'):
                    return var.get('undefined')
                if var.get(u'state').get(u'inSwitchCase'):
                    return var.get('undefined')
                if (var.get(u't').callprop(u'isBreakStatement', var.get(u'node')) and var.get(u't').callprop(u'isSwitchCase', var.get(u'parent'))):
                    return var.get('undefined')
            var.get(u'state').put(u'hasBreakContinue', var.get(u'true'))
            var.get(u'state').get(u'map').put(var.get(u'loopText'), var.get(u'node'))
            var.put(u'replace', var.get(u't').callprop(u'stringLiteral', var.get(u'loopText')))
        if var.get(u'path').callprop(u'isReturnStatement'):
            var.get(u'state').put(u'hasReturn', var.get(u'true'))
            var.put(u'replace', var.get(u't').callprop(u'objectExpression', Js([var.get(u't').callprop(u'objectProperty', var.get(u't').callprop(u'identifier', Js(u'v')), (var.get(u'node').get(u'argument') or var.get(u'scope').callprop(u'buildUndefinedNode')))])))
        if var.get(u'replace'):
            var.put(u'replace', var.get(u't').callprop(u'returnStatement', var.get(u'replace')))
            var.get(u'replace').put(var.get(u"this").get(u'LOOP_IGNORE'), var.get(u'true'))
            var.get(u'path').callprop(u'skip')
            var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'inherits', var.get(u'replace'), var.get(u'node')))
    PyJs_BreakStatementContinueStatementReturnStatement_820_._set_name(u'BreakStatementContinueStatementReturnStatement')
    PyJs_Object_816_ = Js({u'Loop':PyJs_Loop_817_,u'Function':PyJs_Function_818_,u'SwitchCase':PyJs_SwitchCase_819_,u'BreakStatement|ContinueStatement|ReturnStatement':PyJs_BreakStatementContinueStatementReturnStatement_820_})
    var.put(u'loopVisitor', PyJs_Object_816_)
    @Js
    def PyJs_anonymous_821_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'BlockScoping'])
        @Js
        def PyJsHoisted_BlockScoping_(loopPath, blockPath, parent, scope, file, this, arguments, var=var):
            var = Scope({u'arguments':arguments, u'parent':parent, u'file':file, u'blockPath':blockPath, u'this':this, u'scope':scope, u'loopPath':loopPath}, var)
            var.registers([u'scope', u'blockPath', u'file', u'parent', u'loopPath'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'BlockScoping'))
            var.get(u"this").put(u'parent', var.get(u'parent'))
            var.get(u"this").put(u'scope', var.get(u'scope'))
            var.get(u"this").put(u'file', var.get(u'file'))
            var.get(u"this").put(u'blockPath', var.get(u'blockPath'))
            var.get(u"this").put(u'block', var.get(u'blockPath').get(u'node'))
            var.get(u"this").put(u'outsideLetReferences', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.get(u"this").put(u'hasLetReferences', Js(False))
            var.get(u"this").put(u'letReferences', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.get(u"this").put(u'body', Js([]))
            if var.get(u'loopPath'):
                var.get(u"this").put(u'loopParent', var.get(u'loopPath').get(u'parent'))
                var.get(u"this").put(u'loopLabel', (var.get(u't').callprop(u'isLabeledStatement', var.get(u"this").get(u'loopParent')) and var.get(u"this").get(u'loopParent').get(u'label')))
                var.get(u"this").put(u'loopPath', var.get(u'loopPath'))
                var.get(u"this").put(u'loop', var.get(u'loopPath').get(u'node'))
        PyJsHoisted_BlockScoping_.func_name = u'BlockScoping'
        var.put(u'BlockScoping', PyJsHoisted_BlockScoping_)
        pass
        @Js
        def PyJs_run_822_(this, arguments, var=var):
            var = Scope({u'this':this, u'run':PyJs_run_822_, u'arguments':arguments}, var)
            var.registers([u'needsClosure', u'block'])
            var.put(u'block', var.get(u"this").get(u'block'))
            if var.get(u'block').get(u'_letDone'):
                return var.get('undefined')
            var.get(u'block').put(u'_letDone', var.get(u'true'))
            var.put(u'needsClosure', var.get(u"this").callprop(u'getLetReferences'))
            if (var.get(u't').callprop(u'isFunction', var.get(u"this").get(u'parent')) or var.get(u't').callprop(u'isProgram', var.get(u"this").get(u'block'))):
                var.get(u"this").callprop(u'updateScopeInfo')
                return var.get('undefined')
            if var.get(u"this").get(u'hasLetReferences').neg():
                return var.get('undefined')
            if var.get(u'needsClosure'):
                var.get(u"this").callprop(u'wrapClosure')
            else:
                var.get(u"this").callprop(u'remap')
            var.get(u"this").callprop(u'updateScopeInfo')
            if (var.get(u"this").get(u'loopLabel') and var.get(u't').callprop(u'isLabeledStatement', var.get(u"this").get(u'loopParent')).neg()):
                return var.get(u't').callprop(u'labeledStatement', var.get(u"this").get(u'loopLabel'), var.get(u"this").get(u'loop'))
        PyJs_run_822_._set_name(u'run')
        var.get(u'BlockScoping').get(u'prototype').put(u'run', PyJs_run_822_)
        @Js
        def PyJs_updateScopeInfo_823_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'updateScopeInfo':PyJs_updateScopeInfo_823_}, var)
            var.registers([u'letRefs', u'binding', u'key', u'parentScope', u'scope', u'ref'])
            var.put(u'scope', var.get(u"this").get(u'scope'))
            var.put(u'parentScope', var.get(u'scope').callprop(u'getFunctionParent'))
            var.put(u'letRefs', var.get(u"this").get(u'letReferences'))
            for PyJsTemp in var.get(u'letRefs'):
                var.put(u'key', PyJsTemp)
                var.put(u'ref', var.get(u'letRefs').get(var.get(u'key')))
                var.put(u'binding', var.get(u'scope').callprop(u'getBinding', var.get(u'ref').get(u'name')))
                if var.get(u'binding').neg():
                    continue
                if (PyJsStrictEq(var.get(u'binding').get(u'kind'),Js(u'let')) or PyJsStrictEq(var.get(u'binding').get(u'kind'),Js(u'const'))):
                    var.get(u'binding').put(u'kind', Js(u'var'))
                    var.get(u'scope').callprop(u'moveBindingTo', var.get(u'ref').get(u'name'), var.get(u'parentScope'))
        PyJs_updateScopeInfo_823_._set_name(u'updateScopeInfo')
        var.get(u'BlockScoping').get(u'prototype').put(u'updateScopeInfo', PyJs_updateScopeInfo_823_)
        @Js
        def PyJs_remap_824_(this, arguments, var=var):
            var = Scope({u'this':this, u'remap':PyJs_remap_824_, u'arguments':arguments}, var)
            var.registers([u'scope', u'ref', u'key', u'letRefs'])
            var.put(u'letRefs', var.get(u"this").get(u'letReferences'))
            var.put(u'scope', var.get(u"this").get(u'scope'))
            for PyJsTemp in var.get(u'letRefs'):
                var.put(u'key', PyJsTemp)
                var.put(u'ref', var.get(u'letRefs').get(var.get(u'key')))
                if (var.get(u'scope').callprop(u'parentHasBinding', var.get(u'key')) or var.get(u'scope').callprop(u'hasGlobal', var.get(u'key'))):
                    if var.get(u'scope').callprop(u'hasOwnBinding', var.get(u'key')):
                        var.get(u'scope').callprop(u'rename', var.get(u'ref').get(u'name'))
                    if var.get(u"this").get(u'blockPath').get(u'scope').callprop(u'hasOwnBinding', var.get(u'key')):
                        var.get(u"this").get(u'blockPath').get(u'scope').callprop(u'rename', var.get(u'ref').get(u'name'))
        PyJs_remap_824_._set_name(u'remap')
        var.get(u'BlockScoping').get(u'prototype').put(u'remap', PyJs_remap_824_)
        @Js
        def PyJs_wrapClosure_825_(this, arguments, var=var):
            var = Scope({u'this':this, u'wrapClosure':PyJs_wrapClosure_825_, u'arguments':arguments}, var)
            var.registers([u'hasYield', u'name', u'call', u'args', u'hasAsync', u'ret', u'params', u'fn', u'outsideRefs', u'isSwitch', u'ref', u'id', u'block'])
            var.put(u'block', var.get(u"this").get(u'block'))
            var.put(u'outsideRefs', var.get(u"this").get(u'outsideLetReferences'))
            if var.get(u"this").get(u'loop'):
                for PyJsTemp in var.get(u'outsideRefs'):
                    var.put(u'name', PyJsTemp)
                    var.put(u'id', var.get(u'outsideRefs').get(var.get(u'name')))
                    if (var.get(u"this").get(u'scope').callprop(u'hasGlobal', var.get(u'id').get(u'name')) or var.get(u"this").get(u'scope').callprop(u'parentHasBinding', var.get(u'id').get(u'name'))):
                        var.get(u'outsideRefs').delete(var.get(u'id').get(u'name'))
                        var.get(u"this").get(u'letReferences').delete(var.get(u'id').get(u'name'))
                        var.get(u"this").get(u'scope').callprop(u'rename', var.get(u'id').get(u'name'))
                        var.get(u"this").get(u'letReferences').put(var.get(u'id').get(u'name'), var.get(u'id'))
                        var.get(u'outsideRefs').put(var.get(u'id').get(u'name'), var.get(u'id'))
            var.get(u"this").put(u'has', var.get(u"this").callprop(u'checkLoop'))
            var.get(u"this").callprop(u'hoistVarDeclarations')
            var.put(u'params', PyJsComma(Js(0.0),var.get(u'_values2').get(u'default'))(var.get(u'outsideRefs')))
            var.put(u'args', PyJsComma(Js(0.0),var.get(u'_values2').get(u'default'))(var.get(u'outsideRefs')))
            var.put(u'isSwitch', var.get(u"this").get(u'blockPath').callprop(u'isSwitchStatement'))
            var.put(u'fn', var.get(u't').callprop(u'functionExpression', var.get(u"null"), var.get(u'params'), var.get(u't').callprop(u'blockStatement', (Js([var.get(u'block')]) if var.get(u'isSwitch') else var.get(u'block').get(u'body')))))
            var.get(u'fn').put(u'shadow', var.get(u'true'))
            var.get(u"this").callprop(u'addContinuations', var.get(u'fn'))
            var.put(u'ref', var.get(u'fn'))
            if var.get(u"this").get(u'loop'):
                var.put(u'ref', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', Js(u'loop')))
                var.get(u"this").get(u'loopPath').callprop(u'insertBefore', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ref'), var.get(u'fn'))])))
            var.put(u'call', var.get(u't').callprop(u'callExpression', var.get(u'ref'), var.get(u'args')))
            var.put(u'ret', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', Js(u'ret')))
            var.put(u'hasYield', var.get(u'_babelTraverse2').get(u'default').callprop(u'hasType', var.get(u'fn').get(u'body'), var.get(u"this").get(u'scope'), Js(u'YieldExpression'), var.get(u't').get(u'FUNCTION_TYPES')))
            if var.get(u'hasYield'):
                var.get(u'fn').put(u'generator', var.get(u'true'))
                var.put(u'call', var.get(u't').callprop(u'yieldExpression', var.get(u'call'), var.get(u'true')))
            var.put(u'hasAsync', var.get(u'_babelTraverse2').get(u'default').callprop(u'hasType', var.get(u'fn').get(u'body'), var.get(u"this").get(u'scope'), Js(u'AwaitExpression'), var.get(u't').get(u'FUNCTION_TYPES')))
            if var.get(u'hasAsync'):
                var.get(u'fn').put(u'async', var.get(u'true'))
                var.put(u'call', var.get(u't').callprop(u'awaitExpression', var.get(u'call')))
            var.get(u"this").callprop(u'buildClosure', var.get(u'ret'), var.get(u'call'))
            if var.get(u'isSwitch'):
                var.get(u"this").get(u'blockPath').callprop(u'replaceWithMultiple', var.get(u"this").get(u'body'))
            else:
                var.get(u'block').put(u'body', var.get(u"this").get(u'body'))
        PyJs_wrapClosure_825_._set_name(u'wrapClosure')
        var.get(u'BlockScoping').get(u'prototype').put(u'wrapClosure', PyJs_wrapClosure_825_)
        @Js
        def PyJs_buildClosure_826_(ret, call, this, arguments, var=var):
            var = Scope({u'this':this, u'buildClosure':PyJs_buildClosure_826_, u'call':call, u'arguments':arguments, u'ret':ret}, var)
            var.registers([u'has', u'call', u'ret'])
            var.put(u'has', var.get(u"this").get(u'has'))
            if (var.get(u'has').get(u'hasReturn') or var.get(u'has').get(u'hasBreakContinue')):
                var.get(u"this").callprop(u'buildHas', var.get(u'ret'), var.get(u'call'))
            else:
                var.get(u"this").get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'call')))
        PyJs_buildClosure_826_._set_name(u'buildClosure')
        var.get(u'BlockScoping').get(u'prototype').put(u'buildClosure', PyJs_buildClosure_826_)
        @Js
        def PyJs_addContinuations_827_(fn, this, arguments, var=var):
            var = Scope({u'this':this, u'addContinuations':PyJs_addContinuations_827_, u'arguments':arguments, u'fn':fn}, var)
            var.registers([u'i', u'state', u'newParam', u'param', u'fn'])
            PyJs_Object_829_ = Js({})
            PyJs_Object_828_ = Js({u'reassignments':PyJs_Object_829_,u'outsideReferences':var.get(u"this").get(u'outsideLetReferences')})
            var.put(u'state', PyJs_Object_828_)
            var.get(u"this").get(u'scope').callprop(u'traverse', var.get(u'fn'), var.get(u'continuationVisitor'), var.get(u'state'))
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'fn').get(u'params').get(u'length')):
                try:
                    var.put(u'param', var.get(u'fn').get(u'params').get(var.get(u'i')))
                    if var.get(u'state').get(u'reassignments').get(var.get(u'param').get(u'name')).neg():
                        continue
                    var.put(u'newParam', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', var.get(u'param').get(u'name')))
                    var.get(u'fn').get(u'params').put(var.get(u'i'), var.get(u'newParam'))
                    var.get(u"this").get(u'scope').callprop(u'rename', var.get(u'param').get(u'name'), var.get(u'newParam').get(u'name'), var.get(u'fn'))
                    var.get(u'fn').get(u'body').get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'param'), var.get(u'newParam'))))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        PyJs_addContinuations_827_._set_name(u'addContinuations')
        var.get(u'BlockScoping').get(u'prototype').put(u'addContinuations', PyJs_addContinuations_827_)
        @Js
        def PyJs_getLetReferences_830_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'getLetReferences':PyJs_getLetReferences_830_}, var)
            var.registers([u'_this', u'state', u'i', u'_i2', u'j', u'declarPath', u'declarators', u'keys', u'init', u'declar', u'addDeclarationsFromChild', u'_i', u'consequents', u'_declarPath', u'_declar', u'block'])
            var.put(u'_this', var.get(u"this"))
            var.put(u'block', var.get(u"this").get(u'block'))
            var.put(u'declarators', Js([]))
            if var.get(u"this").get(u'loop'):
                var.put(u'init', (var.get(u"this").get(u'loop').get(u'left') or var.get(u"this").get(u'loop').get(u'init')))
                if var.get(u'isBlockScoped')(var.get(u'init')):
                    var.get(u'declarators').callprop(u'push', var.get(u'init'))
                    PyJsComma(Js(0.0),var.get(u'_extend2').get(u'default'))(var.get(u"this").get(u'outsideLetReferences'), var.get(u't').callprop(u'getBindingIdentifiers', var.get(u'init')))
            @Js
            def PyJs_addDeclarationsFromChild_831_(path, node, this, arguments, var=var):
                var = Scope({u'node':node, u'path':path, u'this':this, u'arguments':arguments, u'addDeclarationsFromChild':PyJs_addDeclarationsFromChild_831_}, var)
                var.registers([u'node', u'path'])
                var.put(u'node', (var.get(u'node') or var.get(u'path').get(u'node')))
                if ((var.get(u't').callprop(u'isClassDeclaration', var.get(u'node')) or var.get(u't').callprop(u'isFunctionDeclaration', var.get(u'node'))) or var.get(u'isBlockScoped')(var.get(u'node'))):
                    if var.get(u'isBlockScoped')(var.get(u'node')):
                        var.get(u'convertBlockScopedToVar')(var.get(u'path'), var.get(u'node'), var.get(u'block'), var.get(u'_this').get(u'scope'))
                    var.put(u'declarators', var.get(u'declarators').callprop(u'concat', (var.get(u'node').get(u'declarations') or var.get(u'node'))))
                if var.get(u't').callprop(u'isLabeledStatement', var.get(u'node')):
                    var.get(u'addDeclarationsFromChild')(var.get(u'path').callprop(u'get', Js(u'body')), var.get(u'node').get(u'body'))
            PyJs_addDeclarationsFromChild_831_._set_name(u'addDeclarationsFromChild')
            var.put(u'addDeclarationsFromChild', PyJs_addDeclarationsFromChild_831_)
            if var.get(u'block').get(u'body'):
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'block').get(u'body').get(u'length')):
                    try:
                        var.put(u'declarPath', var.get(u"this").get(u'blockPath').callprop(u'get', Js(u'body')).get(var.get(u'i')))
                        var.get(u'addDeclarationsFromChild')(var.get(u'declarPath'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            if var.get(u'block').get(u'cases'):
                #for JS loop
                var.put(u'_i', Js(0.0))
                while (var.get(u'_i')<var.get(u'block').get(u'cases').get(u'length')):
                    try:
                        var.put(u'consequents', var.get(u'block').get(u'cases').get(var.get(u'_i')).get(u'consequent'))
                        #for JS loop
                        var.put(u'j', Js(0.0))
                        while (var.get(u'j')<var.get(u'consequents').get(u'length')):
                            try:
                                var.put(u'_declarPath', var.get(u"this").get(u'blockPath').callprop(u'get', Js(u'cases')).get(var.get(u'_i')))
                                var.put(u'declar', var.get(u'consequents').get(var.get(u'j')))
                                var.get(u'addDeclarationsFromChild')(var.get(u'_declarPath'), var.get(u'declar'))
                            finally:
                                    (var.put(u'j',Js(var.get(u'j').to_number())+Js(1))-Js(1))
                    finally:
                            (var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))
            #for JS loop
            var.put(u'_i2', Js(0.0))
            while (var.get(u'_i2')<var.get(u'declarators').get(u'length')):
                try:
                    var.put(u'_declar', var.get(u'declarators').get(var.get(u'_i2')))
                    var.put(u'keys', var.get(u't').callprop(u'getBindingIdentifiers', var.get(u'_declar')))
                    PyJsComma(Js(0.0),var.get(u'_extend2').get(u'default'))(var.get(u"this").get(u'letReferences'), var.get(u'keys'))
                    var.get(u"this").put(u'hasLetReferences', var.get(u'true'))
                finally:
                        (var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))
            if var.get(u"this").get(u'hasLetReferences').neg():
                return var.get('undefined')
            PyJs_Object_832_ = Js({u'letReferences':var.get(u"this").get(u'letReferences'),u'closurify':Js(False),u'file':var.get(u"this").get(u'file')})
            var.put(u'state', PyJs_Object_832_)
            var.get(u"this").get(u'blockPath').callprop(u'traverse', var.get(u'letReferenceBlockVisitor'), var.get(u'state'))
            return var.get(u'state').get(u'closurify')
        PyJs_getLetReferences_830_._set_name(u'getLetReferences')
        var.get(u'BlockScoping').get(u'prototype').put(u'getLetReferences', PyJs_getLetReferences_830_)
        @Js
        def PyJs_checkLoop_833_(this, arguments, var=var):
            var = Scope({u'this':this, u'checkLoop':PyJs_checkLoop_833_, u'arguments':arguments}, var)
            var.registers([u'state'])
            PyJs_Object_835_ = Js({})
            PyJs_Object_834_ = Js({u'hasBreakContinue':Js(False),u'ignoreLabeless':Js(False),u'inSwitchCase':Js(False),u'innerLabels':Js([]),u'hasReturn':Js(False),u'isLoop':var.get(u"this").get(u'loop').neg().neg(),u'map':PyJs_Object_835_,u'LOOP_IGNORE':PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))()})
            var.put(u'state', PyJs_Object_834_)
            var.get(u"this").get(u'blockPath').callprop(u'traverse', var.get(u'loopLabelVisitor'), var.get(u'state'))
            var.get(u"this").get(u'blockPath').callprop(u'traverse', var.get(u'loopVisitor'), var.get(u'state'))
            return var.get(u'state')
        PyJs_checkLoop_833_._set_name(u'checkLoop')
        var.get(u'BlockScoping').get(u'prototype').put(u'checkLoop', PyJs_checkLoop_833_)
        @Js
        def PyJs_hoistVarDeclarations_836_(this, arguments, var=var):
            var = Scope({u'this':this, u'hoistVarDeclarations':PyJs_hoistVarDeclarations_836_, u'arguments':arguments}, var)
            var.registers([])
            var.get(u"this").get(u'blockPath').callprop(u'traverse', var.get(u'hoistVarDeclarationsVisitor'), var.get(u"this"))
        PyJs_hoistVarDeclarations_836_._set_name(u'hoistVarDeclarations')
        var.get(u'BlockScoping').get(u'prototype').put(u'hoistVarDeclarations', PyJs_hoistVarDeclarations_836_)
        @Js
        def PyJs_pushDeclar_837_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'pushDeclar':PyJs_pushDeclar_837_, u'arguments':arguments}, var)
            var.registers([u'node', u'name', u'i', u'expr', u'declars', u'replace', u'declar', u'names'])
            var.put(u'declars', Js([]))
            var.put(u'names', var.get(u't').callprop(u'getBindingIdentifiers', var.get(u'node')))
            for PyJsTemp in var.get(u'names'):
                var.put(u'name', PyJsTemp)
                var.get(u'declars').callprop(u'push', var.get(u't').callprop(u'variableDeclarator', var.get(u'names').get(var.get(u'name'))))
            var.get(u"this").get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', var.get(u'node').get(u'kind'), var.get(u'declars')))
            var.put(u'replace', Js([]))
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'node').get(u'declarations').get(u'length')):
                try:
                    var.put(u'declar', var.get(u'node').get(u'declarations').get(var.get(u'i')))
                    if var.get(u'declar').get(u'init').neg():
                        continue
                    var.put(u'expr', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'declar').get(u'id'), var.get(u'declar').get(u'init')))
                    var.get(u'replace').callprop(u'push', var.get(u't').callprop(u'inherits', var.get(u'expr'), var.get(u'declar')))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            return var.get(u'replace')
        PyJs_pushDeclar_837_._set_name(u'pushDeclar')
        var.get(u'BlockScoping').get(u'prototype').put(u'pushDeclar', PyJs_pushDeclar_837_)
        @Js
        def PyJs_buildHas_838_(ret, call, this, arguments, var=var):
            var = Scope({u'this':this, u'buildHas':PyJs_buildHas_838_, u'call':call, u'arguments':arguments, u'ret':ret}, var)
            var.registers([u'body', u'i', u'retCheck', u'ret', u'caseConsequent', u'single', u'call', u'key', u'cases', u'has'])
            var.put(u'body', var.get(u"this").get(u'body'))
            var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ret'), var.get(u'call'))])))
            var.put(u'retCheck', PyJsComma(Js(0.0), Js(None)))
            var.put(u'has', var.get(u"this").get(u'has'))
            var.put(u'cases', Js([]))
            if var.get(u'has').get(u'hasReturn'):
                PyJs_Object_839_ = Js({u'RETURN':var.get(u'ret')})
                var.put(u'retCheck', var.get(u'buildRetCheck')(PyJs_Object_839_))
            if var.get(u'has').get(u'hasBreakContinue'):
                for PyJsTemp in var.get(u'has').get(u'map'):
                    var.put(u'key', PyJsTemp)
                    var.get(u'cases').callprop(u'push', var.get(u't').callprop(u'switchCase', var.get(u't').callprop(u'stringLiteral', var.get(u'key')), Js([var.get(u'has').get(u'map').get(var.get(u'key'))])))
                if var.get(u'has').get(u'hasReturn'):
                    var.get(u'cases').callprop(u'push', var.get(u't').callprop(u'switchCase', var.get(u"null"), Js([var.get(u'retCheck')])))
                if PyJsStrictEq(var.get(u'cases').get(u'length'),Js(1.0)):
                    var.put(u'single', var.get(u'cases').get(u'0'))
                    var.get(u'body').callprop(u'push', var.get(u't').callprop(u'ifStatement', var.get(u't').callprop(u'binaryExpression', Js(u'==='), var.get(u'ret'), var.get(u'single').get(u'test')), var.get(u'single').get(u'consequent').get(u'0')))
                else:
                    if var.get(u"this").get(u'loop'):
                        #for JS loop
                        var.put(u'i', Js(0.0))
                        while (var.get(u'i')<var.get(u'cases').get(u'length')):
                            try:
                                var.put(u'caseConsequent', var.get(u'cases').get(var.get(u'i')).get(u'consequent').get(u'0'))
                                if (var.get(u't').callprop(u'isBreakStatement', var.get(u'caseConsequent')) and var.get(u'caseConsequent').get(u'label').neg()):
                                    var.get(u'caseConsequent').put(u'label', var.get(u"this").put(u'loopLabel', (var.get(u"this").get(u'loopLabel') or var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', Js(u'loop')))))
                            finally:
                                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                    var.get(u'body').callprop(u'push', var.get(u't').callprop(u'switchStatement', var.get(u'ret'), var.get(u'cases')))
            else:
                if var.get(u'has').get(u'hasReturn'):
                    var.get(u'body').callprop(u'push', var.get(u'retCheck'))
        PyJs_buildHas_838_._set_name(u'buildHas')
        var.get(u'BlockScoping').get(u'prototype').put(u'buildHas', PyJs_buildHas_838_)
        return var.get(u'BlockScoping')
    PyJs_anonymous_821_._set_name(u'anonymous')
    var.put(u'BlockScoping', PyJs_anonymous_821_())
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_794_._set_name(u'anonymous')
PyJs_Object_840_ = Js({u'./tdz':Js(62.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-runtime/core-js/symbol':Js(105.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-template':Js(221.0),u'babel-traverse':Js(225.0),u'babel-types':Js(258.0),u'lodash/extend':Js(446.0),u'lodash/values':Js(496.0)})
@Js
def PyJs_anonymous_841_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'module', u'getTDZStatus', u't', u'buildTDZAssert', u'isReference'])
    @Js
    def PyJsHoisted_getTDZStatus_(refPath, bindingPath, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'refPath':refPath, u'bindingPath':bindingPath}, var)
        var.registers([u'refPath', u'bindingPath', u'executionStatus'])
        var.put(u'executionStatus', var.get(u'bindingPath').callprop(u'_guessExecutionStatusRelativeTo', var.get(u'refPath')))
        if PyJsStrictEq(var.get(u'executionStatus'),Js(u'before')):
            return Js(u'inside')
        else:
            if PyJsStrictEq(var.get(u'executionStatus'),Js(u'after')):
                return Js(u'outside')
            else:
                return Js(u'maybe')
    PyJsHoisted_getTDZStatus_.func_name = u'getTDZStatus'
    var.put(u'getTDZStatus', PyJsHoisted_getTDZStatus_)
    @Js
    def PyJsHoisted_buildTDZAssert_(node, file, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments, u'file':file}, var)
        var.registers([u'node', u'file'])
        return var.get(u't').callprop(u'callExpression', var.get(u'file').callprop(u'addHelper', Js(u'temporalRef')), Js([var.get(u'node'), var.get(u't').callprop(u'stringLiteral', var.get(u'node').get(u'name')), var.get(u'file').callprop(u'addHelper', Js(u'temporalUndefined'))]))
    PyJsHoisted_buildTDZAssert_.func_name = u'buildTDZAssert'
    var.put(u'buildTDZAssert', PyJsHoisted_buildTDZAssert_)
    @Js
    def PyJsHoisted_isReference_(node, scope, state, this, arguments, var=var):
        var = Scope({u'node':node, u'scope':scope, u'state':state, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'scope', u'declared', u'state'])
        var.put(u'declared', var.get(u'state').get(u'letReferences').get(var.get(u'node').get(u'name')))
        if var.get(u'declared').neg():
            return Js(False)
        return PyJsStrictEq(var.get(u'scope').callprop(u'getBindingIdentifier', var.get(u'node').get(u'name')),var.get(u'declared'))
    PyJsHoisted_isReference_.func_name = u'isReference'
    var.put(u'isReference', PyJsHoisted_isReference_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_842_ = Js({})
            var.put(u'newObj', PyJs_Object_842_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'visitor', var.get(u'undefined'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    pass
    @Js
    def PyJs_ReferencedIdentifier_844_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_844_, u'arguments':arguments}, var)
        var.registers([u'node', u'status', u'bindingPath', u'parent', u'assert', u'state', u'path', u'scope'])
        if var.get(u"this").get(u'file').get(u'opts').get(u'tdz').neg():
            return var.get('undefined')
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'parent', var.get(u'path').get(u'parent'))
        var.put(u'scope', var.get(u'path').get(u'scope'))
        PyJs_Object_845_ = Js({u'left':var.get(u'node')})
        if var.get(u'path').get(u'parentPath').callprop(u'isFor', PyJs_Object_845_):
            return var.get('undefined')
        if var.get(u'isReference')(var.get(u'node'), var.get(u'scope'), var.get(u'state')).neg():
            return var.get('undefined')
        var.put(u'bindingPath', var.get(u'scope').callprop(u'getBinding', var.get(u'node').get(u'name')).get(u'path'))
        var.put(u'status', var.get(u'getTDZStatus')(var.get(u'path'), var.get(u'bindingPath')))
        if PyJsStrictEq(var.get(u'status'),Js(u'inside')):
            return var.get('undefined')
        if PyJsStrictEq(var.get(u'status'),Js(u'maybe')):
            var.put(u'assert', var.get(u'buildTDZAssert')(var.get(u'node'), var.get(u'state').get(u'file')))
            var.get(u'bindingPath').get(u'parent').put(u'_tdzThis', var.get(u'true'))
            var.get(u'path').callprop(u'skip')
            if var.get(u'path').get(u'parentPath').callprop(u'isUpdateExpression'):
                if var.get(u'parent').get(u'_ignoreBlockScopingTDZ'):
                    return var.get('undefined')
                var.get(u'path').get(u'parentPath').callprop(u'replaceWith', var.get(u't').callprop(u'sequenceExpression', Js([var.get(u'assert'), var.get(u'parent')])))
            else:
                var.get(u'path').callprop(u'replaceWith', var.get(u'assert'))
        else:
            if PyJsStrictEq(var.get(u'status'),Js(u'outside')):
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'throwStatement', var.get(u't').callprop(u'inherits', var.get(u't').callprop(u'newExpression', var.get(u't').callprop(u'identifier', Js(u'ReferenceError')), Js([var.get(u't').callprop(u'stringLiteral', (var.get(u'node').get(u'name')+Js(u' is not defined - temporal dead zone')))])), var.get(u'node'))))
    PyJs_ReferencedIdentifier_844_._set_name(u'ReferencedIdentifier')
    @Js
    def PyJs_exit_847_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'exit':PyJs_exit_847_, u'arguments':arguments}, var)
        var.registers([u'node', u'name', u'ids', u'state', u'path', u'nodes', u'id'])
        if var.get(u"this").get(u'file').get(u'opts').get(u'tdz').neg():
            return var.get('undefined')
        var.put(u'node', var.get(u'path').get(u'node'))
        if var.get(u'node').get(u'_ignoreBlockScopingTDZ'):
            return var.get('undefined')
        var.put(u'nodes', Js([]))
        var.put(u'ids', var.get(u'path').callprop(u'getBindingIdentifiers'))
        for PyJsTemp in var.get(u'ids'):
            var.put(u'name', PyJsTemp)
            var.put(u'id', var.get(u'ids').get(var.get(u'name')))
            if var.get(u'isReference')(var.get(u'id'), var.get(u'path').get(u'scope'), var.get(u'state')):
                var.get(u'nodes').callprop(u'push', var.get(u'buildTDZAssert')(var.get(u'id'), var.get(u'state').get(u'file')))
        if var.get(u'nodes').get(u'length'):
            var.get(u'node').put(u'_ignoreBlockScopingTDZ', var.get(u'true'))
            var.get(u'nodes').callprop(u'push', var.get(u'node'))
            var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'nodes').callprop(u'map', var.get(u't').get(u'expressionStatement')))
    PyJs_exit_847_._set_name(u'exit')
    PyJs_Object_846_ = Js({u'exit':PyJs_exit_847_})
    PyJs_Object_843_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_844_,u'AssignmentExpression':PyJs_Object_846_})
    var.put(u'visitor', var.get(u'exports').put(u'visitor', PyJs_Object_843_))
PyJs_anonymous_841_._set_name(u'anonymous')
PyJs_Object_848_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_849_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_vanilla', u'exports', u'_symbol2', u'_loose', u'require', u'_babelHelperFunctionName', u'module', u'_vanilla2', u'_symbol', u'_babelHelperFunctionName2', u'_interopRequireDefault', u'_loose2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_856_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_856_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    @Js
    def PyJs_anonymous_850_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'VISITED', u'_ref', u't'])
        var.put(u't', var.get(u'_ref').get(u'types'))
        var.put(u'VISITED', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))())
        @Js
        def PyJs_ExportDefaultDeclaration_853_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'ExportDefaultDeclaration':PyJs_ExportDefaultDeclaration_853_}, var)
            var.registers([u'node', u'path', u'ref'])
            if var.get(u'path').callprop(u'get', Js(u'declaration')).callprop(u'isClassDeclaration').neg():
                return var.get('undefined')
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'ref', (var.get(u'node').get(u'declaration').get(u'id') or var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'class'))))
            var.get(u'node').get(u'declaration').put(u'id', var.get(u'ref'))
            var.get(u'path').callprop(u'replaceWith', var.get(u'node').get(u'declaration'))
            var.get(u'path').callprop(u'insertAfter', var.get(u't').callprop(u'exportDefaultDeclaration', var.get(u'ref')))
        PyJs_ExportDefaultDeclaration_853_._set_name(u'ExportDefaultDeclaration')
        @Js
        def PyJs_ClassDeclaration_854_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'ClassDeclaration':PyJs_ClassDeclaration_854_, u'arguments':arguments}, var)
            var.registers([u'node', u'path', u'ref'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'ref', (var.get(u'node').get(u'id') or var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'class'))))
            var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'variableDeclaration', Js(u'let'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ref'), var.get(u't').callprop(u'toExpression', var.get(u'node')))])))
        PyJs_ClassDeclaration_854_._set_name(u'ClassDeclaration')
        @Js
        def PyJs_ClassExpression_855_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'ClassExpression':PyJs_ClassExpression_855_}, var)
            var.registers([u'node', u'path', u'state', u'inferred', u'Constructor'])
            var.put(u'node', var.get(u'path').get(u'node'))
            if var.get(u'node').get(var.get(u'VISITED')):
                return var.get('undefined')
            var.put(u'inferred', PyJsComma(Js(0.0),var.get(u'_babelHelperFunctionName2').get(u'default'))(var.get(u'path')))
            if (var.get(u'inferred') and PyJsStrictNeq(var.get(u'inferred'),var.get(u'node'))):
                return var.get(u'path').callprop(u'replaceWith', var.get(u'inferred'))
            var.get(u'node').put(var.get(u'VISITED'), var.get(u'true'))
            var.put(u'Constructor', var.get(u'_vanilla2').get(u'default'))
            if var.get(u'state').get(u'opts').get(u'loose'):
                var.put(u'Constructor', var.get(u'_loose2').get(u'default'))
            var.get(u'path').callprop(u'replaceWith', var.get(u'Constructor').create(var.get(u'path'), var.get(u'state').get(u'file')).callprop(u'run'))
        PyJs_ClassExpression_855_._set_name(u'ClassExpression')
        PyJs_Object_852_ = Js({u'ExportDefaultDeclaration':PyJs_ExportDefaultDeclaration_853_,u'ClassDeclaration':PyJs_ClassDeclaration_854_,u'ClassExpression':PyJs_ClassExpression_855_})
        PyJs_Object_851_ = Js({u'visitor':PyJs_Object_852_})
        return PyJs_Object_851_
    PyJs_anonymous_850_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_850_)
    var.put(u'_loose', var.get(u'require')(Js(u'./loose')))
    var.put(u'_loose2', var.get(u'_interopRequireDefault')(var.get(u'_loose')))
    var.put(u'_vanilla', var.get(u'require')(Js(u'./vanilla')))
    var.put(u'_vanilla2', var.get(u'_interopRequireDefault')(var.get(u'_vanilla')))
    var.put(u'_babelHelperFunctionName', var.get(u'require')(Js(u'babel-helper-function-name')))
    var.put(u'_babelHelperFunctionName2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperFunctionName')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_849_._set_name(u'anonymous')
PyJs_Object_857_ = Js({u'./loose':Js(64.0),u'./vanilla':Js(65.0),u'babel-helper-function-name':Js(49.0),u'babel-runtime/core-js/symbol':Js(105.0)})
@Js
def PyJs_anonymous_858_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_vanilla', u'LooseClassTransformer', u'_vanilla2', u'exports', u'_interopRequireWildcard', u'_inherits3', u'_inherits2', u'require', u'_babelTypes', u'_possibleConstructorReturn3', u'_possibleConstructorReturn2', u'module', u't', u'_babelHelperFunctionName', u'_babelHelperFunctionName2', u'_interopRequireDefault', u'_classCallCheck3', u'_classCallCheck2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_860_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_860_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_859_ = Js({})
            var.put(u'newObj', PyJs_Object_859_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_possibleConstructorReturn2', var.get(u'require')(Js(u'babel-runtime/helpers/possibleConstructorReturn')))
    var.put(u'_possibleConstructorReturn3', var.get(u'_interopRequireDefault')(var.get(u'_possibleConstructorReturn2')))
    var.put(u'_inherits2', var.get(u'require')(Js(u'babel-runtime/helpers/inherits')))
    var.put(u'_inherits3', var.get(u'_interopRequireDefault')(var.get(u'_inherits2')))
    var.put(u'_babelHelperFunctionName', var.get(u'require')(Js(u'babel-helper-function-name')))
    var.put(u'_babelHelperFunctionName2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperFunctionName')))
    var.put(u'_vanilla', var.get(u'require')(Js(u'./vanilla')))
    var.put(u'_vanilla2', var.get(u'_interopRequireDefault')(var.get(u'_vanilla')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    @Js
    def PyJs_anonymous_861_(_VanillaTransformer, this, arguments, var=var):
        var = Scope({u'this':this, u'_VanillaTransformer':_VanillaTransformer, u'arguments':arguments}, var)
        var.registers([u'LooseClassTransformer', u'_VanillaTransformer'])
        @Js
        def PyJsHoisted_LooseClassTransformer_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'_this'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'LooseClassTransformer'))
            var.put(u'_this', PyJsComma(Js(0.0),var.get(u'_possibleConstructorReturn3').get(u'default'))(var.get(u"this"), var.get(u'_VanillaTransformer').callprop(u'apply', var.get(u"this"), var.get(u'arguments'))))
            var.get(u'_this').put(u'isLoose', var.get(u'true'))
            return var.get(u'_this')
        PyJsHoisted_LooseClassTransformer_.func_name = u'LooseClassTransformer'
        var.put(u'LooseClassTransformer', PyJsHoisted_LooseClassTransformer_)
        PyJsComma(Js(0.0),var.get(u'_inherits3').get(u'default'))(var.get(u'LooseClassTransformer'), var.get(u'_VanillaTransformer'))
        pass
        @Js
        def PyJs__processMethod_862_(node, scope, this, arguments, var=var):
            var = Scope({u'node':node, u'scope':scope, u'_processMethod':PyJs__processMethod_862_, u'this':this, u'arguments':arguments}, var)
            var.registers([u'node', u'methodName', u'func', u'expr', u'classRef', u'key', u'scope'])
            if var.get(u'node').get(u'decorators').neg():
                var.put(u'classRef', var.get(u"this").get(u'classRef'))
                if var.get(u'node').get(u'static').neg():
                    var.put(u'classRef', var.get(u't').callprop(u'memberExpression', var.get(u'classRef'), var.get(u't').callprop(u'identifier', Js(u'prototype'))))
                var.put(u'methodName', var.get(u't').callprop(u'memberExpression', var.get(u'classRef'), var.get(u'node').get(u'key'), (var.get(u'node').get(u'computed') or var.get(u't').callprop(u'isLiteral', var.get(u'node').get(u'key')))))
                var.put(u'func', var.get(u't').callprop(u'functionExpression', var.get(u"null"), var.get(u'node').get(u'params'), var.get(u'node').get(u'body'), var.get(u'node').get(u'generator'), var.get(u'node').get(u'async')))
                var.get(u'func').put(u'returnType', var.get(u'node').get(u'returnType'))
                var.put(u'key', var.get(u't').callprop(u'toComputedKey', var.get(u'node'), var.get(u'node').get(u'key')))
                if var.get(u't').callprop(u'isStringLiteral', var.get(u'key')):
                    PyJs_Object_863_ = Js({u'node':var.get(u'func'),u'id':var.get(u'key'),u'scope':var.get(u'scope')})
                    var.put(u'func', PyJsComma(Js(0.0),var.get(u'_babelHelperFunctionName2').get(u'default'))(PyJs_Object_863_))
                var.put(u'expr', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'methodName'), var.get(u'func'))))
                var.get(u't').callprop(u'inheritsComments', var.get(u'expr'), var.get(u'node'))
                var.get(u"this").get(u'body').callprop(u'push', var.get(u'expr'))
                return var.get(u'true')
        PyJs__processMethod_862_._set_name(u'_processMethod')
        var.get(u'LooseClassTransformer').get(u'prototype').put(u'_processMethod', PyJs__processMethod_862_)
        return var.get(u'LooseClassTransformer')
    PyJs_anonymous_861_._set_name(u'anonymous')
    var.put(u'LooseClassTransformer', PyJs_anonymous_861_(var.get(u'_vanilla2').get(u'default')))
    var.get(u'exports').put(u'default', var.get(u'LooseClassTransformer'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_858_._set_name(u'anonymous')
PyJs_Object_864_ = Js({u'./vanilla':Js(65.0),u'babel-helper-function-name':Js(49.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-runtime/helpers/inherits':Js(111.0),u'babel-runtime/helpers/possibleConstructorReturn':Js(113.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_865_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'defineMap', u'_babelHelperDefineMap', u'verifyConstructorVisitor', u'_babelTemplate', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_babelTraverse', u'findThisesVisitor', u'noMethodVisitor', u'_babelHelperOptimiseCallExpression2', u'_classCallCheck3', u'_classCallCheck2', u'exports', u'_interopRequireWildcard', u'_babelTypes', u'buildDerivedConstructor', u'_babelHelperReplaceSupers', u'_babelHelperReplaceSupers2', u'require', u'_babelHelperOptimiseCallExpression', u'ClassTransformer', u'_babelTemplate2', u't'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_867_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_867_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_866_ = Js({})
            var.put(u'newObj', PyJs_Object_866_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
    var.put(u'_babelHelperReplaceSupers', var.get(u'require')(Js(u'babel-helper-replace-supers')))
    var.put(u'_babelHelperReplaceSupers2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperReplaceSupers')))
    var.put(u'_babelHelperOptimiseCallExpression', var.get(u'require')(Js(u'babel-helper-optimise-call-expression')))
    var.put(u'_babelHelperOptimiseCallExpression2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperOptimiseCallExpression')))
    var.put(u'_babelHelperDefineMap', var.get(u'require')(Js(u'babel-helper-define-map')))
    var.put(u'defineMap', var.get(u'_interopRequireWildcard')(var.get(u'_babelHelperDefineMap')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'buildDerivedConstructor', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function () {\n    super(...arguments);\n  })\n')))
    @Js
    def PyJs_FunctionExpressionFunctionDeclaration_869_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'FunctionExpressionFunctionDeclaration':PyJs_FunctionExpressionFunctionDeclaration_869_}, var)
        var.registers([u'path'])
        if var.get(u'path').callprop(u'is', Js(u'shadow')).neg():
            var.get(u'path').callprop(u'skip')
    PyJs_FunctionExpressionFunctionDeclaration_869_._set_name(u'FunctionExpressionFunctionDeclaration')
    @Js
    def PyJs_Method_870_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'Method':PyJs_Method_870_}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJs_Method_870_._set_name(u'Method')
    PyJs_Object_868_ = Js({u'FunctionExpression|FunctionDeclaration':PyJs_FunctionExpressionFunctionDeclaration_869_,u'Method':PyJs_Method_870_})
    var.put(u'noMethodVisitor', PyJs_Object_868_)
    @Js
    def PyJs_Super_872_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Super':PyJs_Super_872_, u'arguments':arguments}, var)
        var.registers([u'path'])
        PyJs_Object_873_ = Js({u'callee':var.get(u'path').get(u'node')})
        if ((var.get(u"this").get(u'isDerived') and var.get(u"this").get(u'hasBareSuper').neg()) and var.get(u'path').get(u'parentPath').callprop(u'isCallExpression', PyJs_Object_873_).neg()):
            PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u"'super.*' is not allowed before super()")))
            raise PyJsTempException
    PyJs_Super_872_._set_name(u'Super')
    @Js
    def PyJs_exit_875_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_875_, u'arguments':arguments}, var)
        var.registers([u'path'])
        if var.get(u'path').callprop(u'get', Js(u'callee')).callprop(u'isSuper'):
            var.get(u"this").put(u'hasBareSuper', var.get(u'true'))
            if var.get(u"this").get(u'isDerived').neg():
                PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u'super() is only allowed in a derived constructor')))
                raise PyJsTempException
    PyJs_exit_875_._set_name(u'exit')
    PyJs_Object_874_ = Js({u'exit':PyJs_exit_875_})
    @Js
    def PyJs_ThisExpression_876_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'ThisExpression':PyJs_ThisExpression_876_, u'arguments':arguments}, var)
        var.registers([u'path'])
        if (var.get(u"this").get(u'isDerived') and var.get(u"this").get(u'hasBareSuper').neg()):
            if var.get(u'path').callprop(u'inShadow', Js(u'this')).neg():
                PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u"'this' is not allowed before super()")))
                raise PyJsTempException
    PyJs_ThisExpression_876_._set_name(u'ThisExpression')
    PyJs_Object_871_ = Js({u'Super':PyJs_Super_872_,u'CallExpression':PyJs_Object_874_,u'ThisExpression':PyJs_ThisExpression_876_})
    var.put(u'verifyConstructorVisitor', var.get(u'_babelTraverse').get(u'visitors').callprop(u'merge', Js([var.get(u'noMethodVisitor'), PyJs_Object_871_])))
    @Js
    def PyJs_ThisExpression_878_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'ThisExpression':PyJs_ThisExpression_878_, u'arguments':arguments}, var)
        var.registers([u'path'])
        var.get(u"this").get(u'superThises').callprop(u'push', var.get(u'path'))
    PyJs_ThisExpression_878_._set_name(u'ThisExpression')
    PyJs_Object_877_ = Js({u'ThisExpression':PyJs_ThisExpression_878_})
    var.put(u'findThisesVisitor', var.get(u'_babelTraverse').get(u'visitors').callprop(u'merge', Js([var.get(u'noMethodVisitor'), PyJs_Object_877_])))
    @Js
    def PyJs_anonymous_879_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'ClassTransformer'])
        @Js
        def PyJsHoisted_ClassTransformer_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file}, var)
            var.registers([u'path', u'file'])
            PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'ClassTransformer'))
            var.get(u"this").put(u'parent', var.get(u'path').get(u'parent'))
            var.get(u"this").put(u'scope', var.get(u'path').get(u'scope'))
            var.get(u"this").put(u'node', var.get(u'path').get(u'node'))
            var.get(u"this").put(u'path', var.get(u'path'))
            var.get(u"this").put(u'file', var.get(u'file'))
            var.get(u"this").callprop(u'clearDescriptors')
            var.get(u"this").put(u'instancePropBody', Js([]))
            PyJs_Object_880_ = Js({})
            var.get(u"this").put(u'instancePropRefs', PyJs_Object_880_)
            var.get(u"this").put(u'staticPropBody', Js([]))
            var.get(u"this").put(u'body', Js([]))
            var.get(u"this").put(u'bareSuperAfter', Js([]))
            var.get(u"this").put(u'bareSupers', Js([]))
            var.get(u"this").put(u'pushedConstructor', Js(False))
            var.get(u"this").put(u'pushedInherits', Js(False))
            var.get(u"this").put(u'isLoose', Js(False))
            var.get(u"this").put(u'superThises', Js([]))
            var.get(u"this").put(u'classId', var.get(u"this").get(u'node').get(u'id'))
            var.get(u"this").put(u'classRef', (var.get(u't').callprop(u'identifier', var.get(u"this").get(u'node').get(u'id').get(u'name')) if var.get(u"this").get(u'node').get(u'id') else var.get(u"this").get(u'scope').callprop(u'generateUidIdentifier', Js(u'class'))))
            var.get(u"this").put(u'superName', (var.get(u"this").get(u'node').get(u'superClass') or var.get(u't').callprop(u'identifier', Js(u'Function'))))
            var.get(u"this").put(u'isDerived', var.get(u"this").get(u'node').get(u'superClass').neg().neg())
        PyJsHoisted_ClassTransformer_.func_name = u'ClassTransformer'
        var.put(u'ClassTransformer', PyJsHoisted_ClassTransformer_)
        pass
        @Js
        def PyJs_run_881_(this, arguments, var=var):
            var = Scope({u'this':this, u'run':PyJs_run_881_, u'arguments':arguments}, var)
            var.registers([u'body', u'container', u'_this', u'file', u'superName', u'closureArgs', u'closureParams', u'constructorBody'])
            var.put(u'_this', var.get(u"this"))
            var.put(u'superName', var.get(u"this").get(u'superName'))
            var.put(u'file', var.get(u"this").get(u'file'))
            var.put(u'body', var.get(u"this").get(u'body'))
            var.put(u'constructorBody', var.get(u"this").put(u'constructorBody', var.get(u't').callprop(u'blockStatement', Js([]))))
            var.get(u"this").put(u'constructor', var.get(u"this").callprop(u'buildConstructor'))
            var.put(u'closureParams', Js([]))
            var.put(u'closureArgs', Js([]))
            if var.get(u"this").get(u'isDerived'):
                var.get(u'closureArgs').callprop(u'push', var.get(u'superName'))
                var.put(u'superName', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'superName')))
                var.get(u'closureParams').callprop(u'push', var.get(u'superName'))
                var.get(u"this").put(u'superName', var.get(u'superName'))
            var.get(u"this").callprop(u'buildBody')
            var.get(u'constructorBody').get(u'body').callprop(u'unshift', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'file').callprop(u'addHelper', Js(u'classCallCheck')), Js([var.get(u't').callprop(u'thisExpression'), var.get(u"this").get(u'classRef')]))))
            @Js
            def PyJs_anonymous_882_(fn, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'fn':fn}, var)
                var.registers([u'fn'])
                return var.get(u'fn')(var.get(u'_this').get(u'classRef'))
            PyJs_anonymous_882_._set_name(u'anonymous')
            var.put(u'body', var.get(u'body').callprop(u'concat', var.get(u"this").get(u'staticPropBody').callprop(u'map', PyJs_anonymous_882_)))
            if var.get(u"this").get(u'classId'):
                if PyJsStrictEq(var.get(u'body').get(u'length'),Js(1.0)):
                    return var.get(u't').callprop(u'toExpression', var.get(u'body').get(u'0'))
            var.get(u'body').callprop(u'push', var.get(u't').callprop(u'returnStatement', var.get(u"this").get(u'classRef')))
            var.put(u'container', var.get(u't').callprop(u'functionExpression', var.get(u"null"), var.get(u'closureParams'), var.get(u't').callprop(u'blockStatement', var.get(u'body'))))
            var.get(u'container').put(u'shadow', var.get(u'true'))
            return var.get(u't').callprop(u'callExpression', var.get(u'container'), var.get(u'closureArgs'))
        PyJs_run_881_._set_name(u'run')
        var.get(u'ClassTransformer').get(u'prototype').put(u'run', PyJs_run_881_)
        @Js
        def PyJs_buildConstructor_883_(this, arguments, var=var):
            var = Scope({u'this':this, u'buildConstructor':PyJs_buildConstructor_883_, u'arguments':arguments}, var)
            var.registers([u'func'])
            var.put(u'func', var.get(u't').callprop(u'functionDeclaration', var.get(u"this").get(u'classRef'), Js([]), var.get(u"this").get(u'constructorBody')))
            var.get(u't').callprop(u'inherits', var.get(u'func'), var.get(u"this").get(u'node'))
            return var.get(u'func')
        PyJs_buildConstructor_883_._set_name(u'buildConstructor')
        var.get(u'ClassTransformer').get(u'prototype').put(u'buildConstructor', PyJs_buildConstructor_883_)
        @Js
        def PyJs_pushToMap_884_(node, enumerable, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'pushToMap':PyJs_pushToMap_884_, u'enumerable':enumerable, u'arguments':arguments}, var)
            var.registers([u'node', u'map', u'kind', u'scope', u'enumerable', u'mutatorMap'])
            var.put(u'kind', (var.get(u'arguments').get(u'2') if ((var.get(u'arguments').get(u'length')>Js(2.0)) and PyJsStrictNeq(var.get(u'arguments').get(u'2'),var.get(u'undefined'))) else Js(u'value')))
            var.put(u'scope', var.get(u'arguments').get(u'3'))
            var.put(u'mutatorMap', PyJsComma(Js(0.0), Js(None)))
            if var.get(u'node').get(u'static'):
                var.get(u"this").put(u'hasStaticDescriptors', var.get(u'true'))
                var.put(u'mutatorMap', var.get(u"this").get(u'staticMutatorMap'))
            else:
                var.get(u"this").put(u'hasInstanceDescriptors', var.get(u'true'))
                var.put(u'mutatorMap', var.get(u"this").get(u'instanceMutatorMap'))
            var.put(u'map', var.get(u'defineMap').callprop(u'push', var.get(u'mutatorMap'), var.get(u'node'), var.get(u'kind'), var.get(u"this").get(u'file'), var.get(u'scope')))
            if var.get(u'enumerable'):
                var.get(u'map').put(u'enumerable', var.get(u't').callprop(u'booleanLiteral', var.get(u'true')))
            return var.get(u'map')
        PyJs_pushToMap_884_._set_name(u'pushToMap')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushToMap', PyJs_pushToMap_884_)
        @Js
        def PyJs_constructorMeMaybe_885_(this, arguments, var=var):
            var = Scope({u'this':this, u'constructorMeMaybe':PyJs_constructorMeMaybe_885_, u'arguments':arguments}, var)
            var.registers([u'body', u'paths', u'_isArray', u'_iterator', u'_constructor', u'params', u'_i', u'path', u'hasConstructor', u'_ref'])
            var.put(u'hasConstructor', Js(False))
            var.put(u'paths', var.get(u"this").get(u'path').callprop(u'get', Js(u'body.body')))
            #for JS loop
            var.put(u'_iterator', var.get(u'paths'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'path', var.get(u'_ref'))
                var.put(u'hasConstructor', var.get(u'path').callprop(u'equals', Js(u'kind'), Js(u'constructor')))
                if var.get(u'hasConstructor'):
                    break
            
            if var.get(u'hasConstructor'):
                return var.get('undefined')
            var.put(u'params', PyJsComma(Js(0.0), Js(None)))
            var.put(u'body', PyJsComma(Js(0.0), Js(None)))
            if var.get(u"this").get(u'isDerived'):
                var.put(u'_constructor', var.get(u'buildDerivedConstructor')().get(u'expression'))
                var.put(u'params', var.get(u'_constructor').get(u'params'))
                var.put(u'body', var.get(u'_constructor').get(u'body'))
            else:
                var.put(u'params', Js([]))
                var.put(u'body', var.get(u't').callprop(u'blockStatement', Js([])))
            var.get(u"this").get(u'path').callprop(u'get', Js(u'body')).callprop(u'unshiftContainer', Js(u'body'), var.get(u't').callprop(u'classMethod', Js(u'constructor'), var.get(u't').callprop(u'identifier', Js(u'constructor')), var.get(u'params'), var.get(u'body')))
        PyJs_constructorMeMaybe_885_._set_name(u'constructorMeMaybe')
        var.get(u'ClassTransformer').get(u'prototype').put(u'constructorMeMaybe', PyJs_constructorMeMaybe_885_)
        @Js
        def PyJs_buildBody_886_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'buildBody':PyJs_buildBody_886_}, var)
            var.registers([u'constructorBody'])
            var.get(u"this").callprop(u'constructorMeMaybe')
            var.get(u"this").callprop(u'pushBody')
            var.get(u"this").callprop(u'verifyConstructor')
            if var.get(u"this").get(u'userConstructor'):
                var.put(u'constructorBody', var.get(u"this").get(u'constructorBody'))
                var.get(u'constructorBody').put(u'body', var.get(u'constructorBody').get(u'body').callprop(u'concat', var.get(u"this").get(u'userConstructor').get(u'body').get(u'body')))
                var.get(u't').callprop(u'inherits', var.get(u"this").get(u'constructor'), var.get(u"this").get(u'userConstructor'))
                var.get(u't').callprop(u'inherits', var.get(u'constructorBody'), var.get(u"this").get(u'userConstructor').get(u'body'))
            var.get(u"this").callprop(u'pushDescriptors')
        PyJs_buildBody_886_._set_name(u'buildBody')
        var.get(u'ClassTransformer').get(u'prototype').put(u'buildBody', PyJs_buildBody_886_)
        @Js
        def PyJs_pushBody_887_(this, arguments, var=var):
            var = Scope({u'this':this, u'pushBody':PyJs_pushBody_887_, u'arguments':arguments}, var)
            var.registers([u'node', u'_isArray2', u'isConstructor', u'_i2', u'classBodyPaths', u'_ref2', u'replaceSupers', u'path', u'_iterator2'])
            var.put(u'classBodyPaths', var.get(u"this").get(u'path').callprop(u'get', Js(u'body.body')))
            #for JS loop
            var.put(u'_iterator2', var.get(u'classBodyPaths'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                var.put(u'path', var.get(u'_ref2'))
                var.put(u'node', var.get(u'path').get(u'node'))
                if var.get(u'path').callprop(u'isClassProperty'):
                    PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u'Missing class properties transform.')))
                    raise PyJsTempException
                if var.get(u'node').get(u'decorators'):
                    PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u'Method has decorators, put the decorator plugin before the classes one.')))
                    raise PyJsTempException
                if var.get(u't').callprop(u'isClassMethod', var.get(u'node')):
                    var.put(u'isConstructor', PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'constructor')))
                    if var.get(u'isConstructor'):
                        var.get(u'path').callprop(u'traverse', var.get(u'verifyConstructorVisitor'), var.get(u"this"))
                        if (var.get(u"this").get(u'hasBareSuper').neg() and var.get(u"this").get(u'isDerived')):
                            PyJsTempException = JsToPyException(var.get(u'path').callprop(u'buildCodeFrameError', Js(u'missing super() call in constructor')))
                            raise PyJsTempException
                    PyJs_Object_888_ = Js({u'forceSuperMemoisation':var.get(u'isConstructor'),u'methodPath':var.get(u'path'),u'methodNode':var.get(u'node'),u'objectRef':var.get(u"this").get(u'classRef'),u'superRef':var.get(u"this").get(u'superName'),u'isStatic':var.get(u'node').get(u'static'),u'isLoose':var.get(u"this").get(u'isLoose'),u'scope':var.get(u"this").get(u'scope'),u'file':var.get(u"this").get(u'file')})
                    var.put(u'replaceSupers', var.get(u'_babelHelperReplaceSupers2').get(u'default').create(PyJs_Object_888_, var.get(u'true')))
                    var.get(u'replaceSupers').callprop(u'replace')
                    if var.get(u'isConstructor'):
                        var.get(u"this").callprop(u'pushConstructor', var.get(u'replaceSupers'), var.get(u'node'), var.get(u'path'))
                    else:
                        var.get(u"this").callprop(u'pushMethod', var.get(u'node'), var.get(u'path'))
            
        PyJs_pushBody_887_._set_name(u'pushBody')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushBody', PyJs_pushBody_887_)
        @Js
        def PyJs_clearDescriptors_889_(this, arguments, var=var):
            var = Scope({u'this':this, u'clearDescriptors':PyJs_clearDescriptors_889_, u'arguments':arguments}, var)
            var.registers([])
            var.get(u"this").put(u'hasInstanceDescriptors', Js(False))
            var.get(u"this").put(u'hasStaticDescriptors', Js(False))
            PyJs_Object_890_ = Js({})
            var.get(u"this").put(u'instanceMutatorMap', PyJs_Object_890_)
            PyJs_Object_891_ = Js({})
            var.get(u"this").put(u'staticMutatorMap', PyJs_Object_891_)
        PyJs_clearDescriptors_889_._set_name(u'clearDescriptors')
        var.get(u'ClassTransformer').get(u'prototype').put(u'clearDescriptors', PyJs_clearDescriptors_889_)
        @Js
        def PyJs_pushDescriptors_892_(this, arguments, var=var):
            var = Scope({u'this':this, u'pushDescriptors':PyJs_pushDescriptors_892_, u'arguments':arguments}, var)
            var.registers([u'body', u'i', u'args', u'lastNonNullIndex', u'staticProps', u'instanceProps', u'nullNode'])
            var.get(u"this").callprop(u'pushInherits')
            var.put(u'body', var.get(u"this").get(u'body'))
            var.put(u'instanceProps', PyJsComma(Js(0.0), Js(None)))
            var.put(u'staticProps', PyJsComma(Js(0.0), Js(None)))
            if var.get(u"this").get(u'hasInstanceDescriptors'):
                var.put(u'instanceProps', var.get(u'defineMap').callprop(u'toClassObject', var.get(u"this").get(u'instanceMutatorMap')))
            if var.get(u"this").get(u'hasStaticDescriptors'):
                var.put(u'staticProps', var.get(u'defineMap').callprop(u'toClassObject', var.get(u"this").get(u'staticMutatorMap')))
            if (var.get(u'instanceProps') or var.get(u'staticProps')):
                if var.get(u'instanceProps'):
                    var.put(u'instanceProps', var.get(u'defineMap').callprop(u'toComputedObjectFromClass', var.get(u'instanceProps')))
                if var.get(u'staticProps'):
                    var.put(u'staticProps', var.get(u'defineMap').callprop(u'toComputedObjectFromClass', var.get(u'staticProps')))
                var.put(u'nullNode', var.get(u't').callprop(u'nullLiteral'))
                var.put(u'args', Js([var.get(u"this").get(u'classRef'), var.get(u'nullNode'), var.get(u'nullNode'), var.get(u'nullNode'), var.get(u'nullNode')]))
                if var.get(u'instanceProps'):
                    var.get(u'args').put(u'1', var.get(u'instanceProps'))
                if var.get(u'staticProps'):
                    var.get(u'args').put(u'2', var.get(u'staticProps'))
                if var.get(u"this").get(u'instanceInitializersId'):
                    var.get(u'args').put(u'3', var.get(u"this").get(u'instanceInitializersId'))
                    var.get(u'body').callprop(u'unshift', var.get(u"this").callprop(u'buildObjectAssignment', var.get(u"this").get(u'instanceInitializersId')))
                if var.get(u"this").get(u'staticInitializersId'):
                    var.get(u'args').put(u'4', var.get(u"this").get(u'staticInitializersId'))
                    var.get(u'body').callprop(u'unshift', var.get(u"this").callprop(u'buildObjectAssignment', var.get(u"this").get(u'staticInitializersId')))
                var.put(u'lastNonNullIndex', Js(0.0))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'args').get(u'length')):
                    try:
                        if PyJsStrictNeq(var.get(u'args').get(var.get(u'i')),var.get(u'nullNode')):
                            var.put(u'lastNonNullIndex', var.get(u'i'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                var.put(u'args', var.get(u'args').callprop(u'slice', Js(0.0), (var.get(u'lastNonNullIndex')+Js(1.0))))
                var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'createClass')), var.get(u'args'))))
            var.get(u"this").callprop(u'clearDescriptors')
        PyJs_pushDescriptors_892_._set_name(u'pushDescriptors')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushDescriptors', PyJs_pushDescriptors_892_)
        @Js
        def PyJs_buildObjectAssignment_893_(id, this, arguments, var=var):
            var = Scope({u'this':this, u'buildObjectAssignment':PyJs_buildObjectAssignment_893_, u'id':id, u'arguments':arguments}, var)
            var.registers([u'id'])
            return var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'id'), var.get(u't').callprop(u'objectExpression', Js([])))]))
        PyJs_buildObjectAssignment_893_._set_name(u'buildObjectAssignment')
        var.get(u'ClassTransformer').get(u'prototype').put(u'buildObjectAssignment', PyJs_buildObjectAssignment_893_)
        @Js
        def PyJs_wrapSuperCall_894_(bareSuper, superRef, thisRef, body, this, arguments, var=var):
            var = Scope({u'bareSuper':bareSuper, u'body':body, u'thisRef':thisRef, u'arguments':arguments, u'this':this, u'superRef':superRef, u'wrapSuperCall':PyJs_wrapSuperCall_894_}, var)
            var.registers([u'bareSuper', u'body', u'superRef', u'call', u'bareSuperNode', u'thisRef', u'bareSuperAfter'])
            var.put(u'bareSuperNode', var.get(u'bareSuper').get(u'node'))
            if var.get(u"this").get(u'isLoose'):
                var.get(u'bareSuperNode').get(u'arguments').callprop(u'unshift', var.get(u't').callprop(u'thisExpression'))
                PyJs_Object_895_ = Js({u'name':Js(u'arguments')})
                if ((PyJsStrictEq(var.get(u'bareSuperNode').get(u'arguments').get(u'length'),Js(2.0)) and var.get(u't').callprop(u'isSpreadElement', var.get(u'bareSuperNode').get(u'arguments').get(u'1'))) and var.get(u't').callprop(u'isIdentifier', var.get(u'bareSuperNode').get(u'arguments').get(u'1').get(u'argument'), PyJs_Object_895_)):
                    var.get(u'bareSuperNode').get(u'arguments').put(u'1', var.get(u'bareSuperNode').get(u'arguments').get(u'1').get(u'argument'))
                    var.get(u'bareSuperNode').put(u'callee', var.get(u't').callprop(u'memberExpression', var.get(u'superRef'), var.get(u't').callprop(u'identifier', Js(u'apply'))))
                else:
                    var.get(u'bareSuperNode').put(u'callee', var.get(u't').callprop(u'memberExpression', var.get(u'superRef'), var.get(u't').callprop(u'identifier', Js(u'call'))))
            else:
                def PyJs_LONG_896_(var=var):
                    return var.get(u't').callprop(u'logicalExpression', Js(u'||'), var.get(u't').callprop(u'memberExpression', var.get(u"this").get(u'classRef'), var.get(u't').callprop(u'identifier', Js(u'__proto__'))), var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'Object')), var.get(u't').callprop(u'identifier', Js(u'getPrototypeOf'))), Js([var.get(u"this").get(u'classRef')])))
                var.put(u'bareSuperNode', PyJsComma(Js(0.0),var.get(u'_babelHelperOptimiseCallExpression2').get(u'default'))(PyJs_LONG_896_(), var.get(u't').callprop(u'thisExpression'), var.get(u'bareSuperNode').get(u'arguments')))
            var.put(u'call', var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'possibleConstructorReturn')), Js([var.get(u't').callprop(u'thisExpression'), var.get(u'bareSuperNode')])))
            @Js
            def PyJs_anonymous_897_(fn, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'fn':fn}, var)
                var.registers([u'fn'])
                return var.get(u'fn')(var.get(u'thisRef'))
            PyJs_anonymous_897_._set_name(u'anonymous')
            var.put(u'bareSuperAfter', var.get(u"this").get(u'bareSuperAfter').callprop(u'map', PyJs_anonymous_897_))
            if ((var.get(u'bareSuper').get(u'parentPath').callprop(u'isExpressionStatement') and PyJsStrictEq(var.get(u'bareSuper').get(u'parentPath').get(u'container'),var.get(u'body').get(u'node').get(u'body'))) and PyJsStrictEq((var.get(u'body').get(u'node').get(u'body').get(u'length')-Js(1.0)),var.get(u'bareSuper').get(u'parentPath').get(u'key'))):
                if (var.get(u"this").get(u'superThises').get(u'length') or var.get(u'bareSuperAfter').get(u'length')):
                    PyJs_Object_898_ = Js({u'id':var.get(u'thisRef')})
                    var.get(u'bareSuper').get(u'scope').callprop(u'push', PyJs_Object_898_)
                    var.put(u'call', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'thisRef'), var.get(u'call')))
                if var.get(u'bareSuperAfter').get(u'length'):
                    var.put(u'call', var.get(u't').callprop(u'toSequenceExpression', Js([var.get(u'call')]).callprop(u'concat', var.get(u'bareSuperAfter'), Js([var.get(u'thisRef')]))))
                var.get(u'bareSuper').get(u'parentPath').callprop(u'replaceWith', var.get(u't').callprop(u'returnStatement', var.get(u'call')))
            else:
                var.get(u'bareSuper').callprop(u'replaceWithMultiple', Js([var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'thisRef'), var.get(u'call'))]))]).callprop(u'concat', var.get(u'bareSuperAfter'), Js([var.get(u't').callprop(u'expressionStatement', var.get(u'thisRef'))])))
        PyJs_wrapSuperCall_894_._set_name(u'wrapSuperCall')
        var.get(u'ClassTransformer').get(u'prototype').put(u'wrapSuperCall', PyJs_wrapSuperCall_894_)
        @Js
        def PyJs_verifyConstructor_899_(this, arguments, var=var):
            var = Scope({u'this':this, u'verifyConstructor':PyJs_verifyConstructor_899_, u'arguments':arguments}, var)
            var.registers([u'_isArray5', u'_isArray4', u'wrapReturn', u'_isArray3', u'bareSuper', u'superRef', u'_i5', u'_i4', u'_i3', u'returnPath', u'ref', u'body', u'bodyPaths', u'thisPath', u'guaranteedSuperBeforeFinish', u'thisRef', u'path', u'_ref5', u'_ref4', u'_ref3', u'_iterator5', u'_iterator4', u'_this2', u'_iterator3'])
            var.put(u'_this2', var.get(u"this"))
            if var.get(u"this").get(u'isDerived').neg():
                return var.get('undefined')
            var.put(u'path', var.get(u"this").get(u'userConstructorPath'))
            var.put(u'body', var.get(u'path').callprop(u'get', Js(u'body')))
            var.get(u'path').callprop(u'traverse', var.get(u'findThisesVisitor'), var.get(u"this"))
            var.put(u'guaranteedSuperBeforeFinish', var.get(u"this").get(u'bareSupers').get(u'length').neg().neg())
            var.put(u'superRef', (var.get(u"this").get(u'superName') or var.get(u't').callprop(u'identifier', Js(u'Function'))))
            var.put(u'thisRef', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'this')))
            #for JS loop
            var.put(u'_iterator3', var.get(u"this").get(u'bareSupers'))
            var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
            var.put(u'_i3', Js(0.0))
            var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
            while 1:
                pass
                if var.get(u'_isArray3'):
                    if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                        break
                    var.put(u'_ref3', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                    if var.get(u'_i3').get(u'done'):
                        break
                    var.put(u'_ref3', var.get(u'_i3').get(u'value'))
                var.put(u'bareSuper', var.get(u'_ref3'))
                var.get(u"this").callprop(u'wrapSuperCall', var.get(u'bareSuper'), var.get(u'superRef'), var.get(u'thisRef'), var.get(u'body'))
                if var.get(u'guaranteedSuperBeforeFinish'):
                    @Js
                    def PyJs_anonymous_900_(parentPath, this, arguments, var=var):
                        var = Scope({u'this':this, u'arguments':arguments, u'parentPath':parentPath}, var)
                        var.registers([u'parentPath'])
                        if PyJsStrictEq(var.get(u'parentPath'),var.get(u'path')):
                            return var.get(u'true')
                        if (var.get(u'parentPath').callprop(u'isLoop') or var.get(u'parentPath').callprop(u'isConditional')):
                            var.put(u'guaranteedSuperBeforeFinish', Js(False))
                            return var.get(u'true')
                    PyJs_anonymous_900_._set_name(u'anonymous')
                    var.get(u'bareSuper').callprop(u'find', PyJs_anonymous_900_)
            
            #for JS loop
            var.put(u'_iterator4', var.get(u"this").get(u'superThises'))
            var.put(u'_isArray4', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator4')))
            var.put(u'_i4', Js(0.0))
            var.put(u'_iterator4', (var.get(u'_iterator4') if var.get(u'_isArray4') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator4'))))
            while 1:
                pass
                if var.get(u'_isArray4'):
                    if (var.get(u'_i4')>=var.get(u'_iterator4').get(u'length')):
                        break
                    var.put(u'_ref4', var.get(u'_iterator4').get((var.put(u'_i4',Js(var.get(u'_i4').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i4', var.get(u'_iterator4').callprop(u'next'))
                    if var.get(u'_i4').get(u'done'):
                        break
                    var.put(u'_ref4', var.get(u'_i4').get(u'value'))
                var.put(u'thisPath', var.get(u'_ref4'))
                var.get(u'thisPath').callprop(u'replaceWith', var.get(u'thisRef'))
            
            @Js
            def PyJs_wrapReturn_901_(returnArg, this, arguments, var=var):
                var = Scope({u'this':this, u'returnArg':returnArg, u'wrapReturn':PyJs_wrapReturn_901_, u'arguments':arguments}, var)
                var.registers([u'returnArg'])
                return var.get(u't').callprop(u'callExpression', var.get(u'_this2').get(u'file').callprop(u'addHelper', Js(u'possibleConstructorReturn')), Js([var.get(u'thisRef')]).callprop(u'concat', (var.get(u'returnArg') or Js([]))))
            PyJs_wrapReturn_901_._set_name(u'wrapReturn')
            var.put(u'wrapReturn', PyJs_wrapReturn_901_)
            var.put(u'bodyPaths', var.get(u'body').callprop(u'get', Js(u'body')))
            if (var.get(u'bodyPaths').get(u'length') and var.get(u'bodyPaths').callprop(u'pop').callprop(u'isReturnStatement').neg()):
                var.get(u'body').callprop(u'pushContainer', Js(u'body'), var.get(u't').callprop(u'returnStatement', (var.get(u'thisRef') if var.get(u'guaranteedSuperBeforeFinish') else var.get(u'wrapReturn')())))
            #for JS loop
            var.put(u'_iterator5', var.get(u"this").get(u'superReturns'))
            var.put(u'_isArray5', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator5')))
            var.put(u'_i5', Js(0.0))
            var.put(u'_iterator5', (var.get(u'_iterator5') if var.get(u'_isArray5') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator5'))))
            while 1:
                pass
                if var.get(u'_isArray5'):
                    if (var.get(u'_i5')>=var.get(u'_iterator5').get(u'length')):
                        break
                    var.put(u'_ref5', var.get(u'_iterator5').get((var.put(u'_i5',Js(var.get(u'_i5').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i5', var.get(u'_iterator5').callprop(u'next'))
                    if var.get(u'_i5').get(u'done'):
                        break
                    var.put(u'_ref5', var.get(u'_i5').get(u'value'))
                var.put(u'returnPath', var.get(u'_ref5'))
                if var.get(u'returnPath').get(u'node').get(u'argument'):
                    var.put(u'ref', var.get(u'returnPath').get(u'scope').callprop(u'generateDeclaredUidIdentifier', Js(u'ret')))
                    var.get(u'returnPath').callprop(u'get', Js(u'argument')).callprop(u'replaceWithMultiple', Js([var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'ref'), var.get(u'returnPath').get(u'node').get(u'argument')), var.get(u'wrapReturn')(var.get(u'ref'))]))
                else:
                    var.get(u'returnPath').callprop(u'get', Js(u'argument')).callprop(u'replaceWith', var.get(u'wrapReturn')())
            
        PyJs_verifyConstructor_899_._set_name(u'verifyConstructor')
        var.get(u'ClassTransformer').get(u'prototype').put(u'verifyConstructor', PyJs_verifyConstructor_899_)
        @Js
        def PyJs_pushMethod_902_(node, path, this, arguments, var=var):
            var = Scope({u'node':node, u'path':path, u'this':this, u'arguments':arguments, u'pushMethod':PyJs_pushMethod_902_}, var)
            var.registers([u'node', u'scope', u'path'])
            var.put(u'scope', (var.get(u'path').get(u'scope') if var.get(u'path') else var.get(u"this").get(u'scope')))
            if PyJsStrictEq(var.get(u'node').get(u'kind'),Js(u'method')):
                if var.get(u"this").callprop(u'_processMethod', var.get(u'node'), var.get(u'scope')):
                    return var.get('undefined')
            var.get(u"this").callprop(u'pushToMap', var.get(u'node'), Js(False), var.get(u"null"), var.get(u'scope'))
        PyJs_pushMethod_902_._set_name(u'pushMethod')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushMethod', PyJs_pushMethod_902_)
        @Js
        def PyJs__processMethod_903_(this, arguments, var=var):
            var = Scope({u'this':this, u'_processMethod':PyJs__processMethod_903_, u'arguments':arguments}, var)
            var.registers([])
            return Js(False)
        PyJs__processMethod_903_._set_name(u'_processMethod')
        var.get(u'ClassTransformer').get(u'prototype').put(u'_processMethod', PyJs__processMethod_903_)
        @Js
        def PyJs_pushConstructor_904_(replaceSupers, method, path, this, arguments, var=var):
            var = Scope({u'this':this, u'replaceSupers':replaceSupers, u'arguments':arguments, u'path':path, u'method':method, u'pushConstructor':PyJs_pushConstructor_904_}, var)
            var.registers([u'path', u'replaceSupers', u'construct', u'method'])
            var.get(u"this").put(u'bareSupers', var.get(u'replaceSupers').get(u'bareSupers'))
            var.get(u"this").put(u'superReturns', var.get(u'replaceSupers').get(u'returns'))
            if var.get(u'path').get(u'scope').callprop(u'hasOwnBinding', var.get(u"this").get(u'classRef').get(u'name')):
                var.get(u'path').get(u'scope').callprop(u'rename', var.get(u"this").get(u'classRef').get(u'name'))
            var.put(u'construct', var.get(u"this").get(u'constructor'))
            var.get(u"this").put(u'userConstructorPath', var.get(u'path'))
            var.get(u"this").put(u'userConstructor', var.get(u'method'))
            var.get(u"this").put(u'hasConstructor', var.get(u'true'))
            var.get(u't').callprop(u'inheritsComments', var.get(u'construct'), var.get(u'method'))
            var.get(u'construct').put(u'_ignoreUserWhitespace', var.get(u'true'))
            var.get(u'construct').put(u'params', var.get(u'method').get(u'params'))
            var.get(u't').callprop(u'inherits', var.get(u'construct').get(u'body'), var.get(u'method').get(u'body'))
            var.get(u'construct').get(u'body').put(u'directives', var.get(u'method').get(u'body').get(u'directives'))
            var.get(u"this").callprop(u'_pushConstructor')
        PyJs_pushConstructor_904_._set_name(u'pushConstructor')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushConstructor', PyJs_pushConstructor_904_)
        @Js
        def PyJs__pushConstructor_905_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'_pushConstructor':PyJs__pushConstructor_905_}, var)
            var.registers([])
            if var.get(u"this").get(u'pushedConstructor'):
                return var.get('undefined')
            var.get(u"this").put(u'pushedConstructor', var.get(u'true'))
            if (var.get(u"this").get(u'hasInstanceDescriptors') or var.get(u"this").get(u'hasStaticDescriptors')):
                var.get(u"this").callprop(u'pushDescriptors')
            var.get(u"this").get(u'body').callprop(u'push', var.get(u"this").get(u'constructor'))
            var.get(u"this").callprop(u'pushInherits')
        PyJs__pushConstructor_905_._set_name(u'_pushConstructor')
        var.get(u'ClassTransformer').get(u'prototype').put(u'_pushConstructor', PyJs__pushConstructor_905_)
        @Js
        def PyJs_pushInherits_906_(this, arguments, var=var):
            var = Scope({u'this':this, u'pushInherits':PyJs_pushInherits_906_, u'arguments':arguments}, var)
            var.registers([])
            if (var.get(u"this").get(u'isDerived').neg() or var.get(u"this").get(u'pushedInherits')):
                return var.get('undefined')
            var.get(u"this").put(u'pushedInherits', var.get(u'true'))
            var.get(u"this").get(u'body').callprop(u'unshift', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'inherits')), Js([var.get(u"this").get(u'classRef'), var.get(u"this").get(u'superName')]))))
        PyJs_pushInherits_906_._set_name(u'pushInherits')
        var.get(u'ClassTransformer').get(u'prototype').put(u'pushInherits', PyJs_pushInherits_906_)
        return var.get(u'ClassTransformer')
    PyJs_anonymous_879_._set_name(u'anonymous')
    var.put(u'ClassTransformer', PyJs_anonymous_879_())
    var.get(u'exports').put(u'default', var.get(u'ClassTransformer'))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_865_._set_name(u'anonymous')
PyJs_Object_907_ = Js({u'babel-helper-define-map':Js(48.0),u'babel-helper-optimise-call-expression':Js(52.0),u'babel-helper-replace-supers':Js(54.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/helpers/classCallCheck':Js(110.0),u'babel-template':Js(221.0),u'babel-traverse':Js(225.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_908_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_918_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_918_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_909_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u'loose', u'pushAssign', u'getValue', u'pushMutatorDefine', u't', u'template', u'buildMutatorMapAssign', u'spec'])
        @Js
        def PyJsHoisted_spec_(info, this, arguments, var=var):
            var = Scope({u'info':info, u'this':this, u'arguments':arguments}, var)
            var.registers([u'body', u'info', u'_isArray2', u'_ref4', u'_i2', u'prop', u'state', u'computedProps', u'objId', u'key', u'_iterator2'])
            var.put(u'objId', var.get(u'info').get(u'objId'))
            var.put(u'body', var.get(u'info').get(u'body'))
            var.put(u'computedProps', var.get(u'info').get(u'computedProps'))
            var.put(u'state', var.get(u'info').get(u'state'))
            #for JS loop
            var.put(u'_iterator2', var.get(u'computedProps'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref4', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref4', var.get(u'_i2').get(u'value'))
                var.put(u'prop', var.get(u'_ref4'))
                var.put(u'key', var.get(u't').callprop(u'toComputedKey', var.get(u'prop')))
                if (PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'get')) or PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'set'))):
                    var.get(u'pushMutatorDefine')(var.get(u'info'), var.get(u'prop'))
                else:
                    PyJs_Object_911_ = Js({u'value':Js(u'__proto__')})
                    if var.get(u't').callprop(u'isStringLiteral', var.get(u'key'), PyJs_Object_911_):
                        var.get(u'pushAssign')(var.get(u'objId'), var.get(u'prop'), var.get(u'body'))
                    else:
                        if PyJsStrictEq(var.get(u'computedProps').get(u'length'),Js(1.0)):
                            return var.get(u't').callprop(u'callExpression', var.get(u'state').callprop(u'addHelper', Js(u'defineProperty')), Js([var.get(u'info').get(u'initPropExpression'), var.get(u'key'), var.get(u'getValue')(var.get(u'prop'))]))
                        else:
                            var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'state').callprop(u'addHelper', Js(u'defineProperty')), Js([var.get(u'objId'), var.get(u'key'), var.get(u'getValue')(var.get(u'prop'))]))))
            
        PyJsHoisted_spec_.func_name = u'spec'
        var.put(u'spec', PyJsHoisted_spec_)
        @Js
        def PyJsHoisted_pushMutatorDefine_(_ref2, prop, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'_ref2':_ref2, u'prop':prop}, var)
            var.registers([u'body', u'maybeMemoise', u'_ref2', u'prop', u'objId', u'key', u'scope', u'getMutatorId'])
            var.put(u'objId', var.get(u'_ref2').get(u'objId'))
            var.put(u'body', var.get(u'_ref2').get(u'body'))
            var.put(u'getMutatorId', var.get(u'_ref2').get(u'getMutatorId'))
            var.put(u'scope', var.get(u'_ref2').get(u'scope'))
            var.put(u'key', (var.get(u't').callprop(u'stringLiteral', var.get(u'prop').get(u'key').get(u'name')) if (var.get(u'prop').get(u'computed').neg() and var.get(u't').callprop(u'isIdentifier', var.get(u'prop').get(u'key'))) else var.get(u'prop').get(u'key')))
            var.put(u'maybeMemoise', var.get(u'scope').callprop(u'maybeGenerateMemoised', var.get(u'key')))
            if var.get(u'maybeMemoise'):
                var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'maybeMemoise'), var.get(u'key'))))
                var.put(u'key', var.get(u'maybeMemoise'))
            PyJs_Object_910_ = Js({u'MUTATOR_MAP_REF':var.get(u'getMutatorId')(),u'KEY':var.get(u'key'),u'VALUE':var.get(u'getValue')(var.get(u'prop')),u'KIND':var.get(u't').callprop(u'identifier', var.get(u'prop').get(u'kind'))})
            var.get(u'body').get(u'push').callprop(u'apply', var.get(u'body'), var.get(u'buildMutatorMapAssign')(PyJs_Object_910_))
        PyJsHoisted_pushMutatorDefine_.func_name = u'pushMutatorDefine'
        var.put(u'pushMutatorDefine', PyJsHoisted_pushMutatorDefine_)
        @Js
        def PyJsHoisted_loose_(info, this, arguments, var=var):
            var = Scope({u'info':info, u'this':this, u'arguments':arguments}, var)
            var.registers([u'info', u'_isArray', u'_iterator', u'_ref3', u'prop', u'_i'])
            #for JS loop
            var.put(u'_iterator', var.get(u'info').get(u'computedProps'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref3', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref3', var.get(u'_i').get(u'value'))
                var.put(u'prop', var.get(u'_ref3'))
                if (PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'get')) or PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'set'))):
                    var.get(u'pushMutatorDefine')(var.get(u'info'), var.get(u'prop'))
                else:
                    var.get(u'pushAssign')(var.get(u'info').get(u'objId'), var.get(u'prop'), var.get(u'info').get(u'body'))
            
        PyJsHoisted_loose_.func_name = u'loose'
        var.put(u'loose', PyJsHoisted_loose_)
        @Js
        def PyJsHoisted_pushAssign_(objId, prop, body, this, arguments, var=var):
            var = Scope({u'body':body, u'this':this, u'objId':objId, u'arguments':arguments, u'prop':prop}, var)
            var.registers([u'body', u'objId', u'prop'])
            if (PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'get')) and PyJsStrictEq(var.get(u'prop').get(u'kind'),Js(u'set'))):
                var.get(u'pushMutatorDefine')(var.get(u'objId'), var.get(u'prop'), var.get(u'body'))
            else:
                var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u't').callprop(u'memberExpression', var.get(u'objId'), var.get(u'prop').get(u'key'), (var.get(u'prop').get(u'computed') or var.get(u't').callprop(u'isLiteral', var.get(u'prop').get(u'key')))), var.get(u'getValue')(var.get(u'prop')))))
        PyJsHoisted_pushAssign_.func_name = u'pushAssign'
        var.put(u'pushAssign', PyJsHoisted_pushAssign_)
        @Js
        def PyJsHoisted_getValue_(prop, this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments, u'prop':prop}, var)
            var.registers([u'prop'])
            if var.get(u't').callprop(u'isObjectProperty', var.get(u'prop')):
                return var.get(u'prop').get(u'value')
            else:
                if var.get(u't').callprop(u'isObjectMethod', var.get(u'prop')):
                    return var.get(u't').callprop(u'functionExpression', var.get(u"null"), var.get(u'prop').get(u'params'), var.get(u'prop').get(u'body'), var.get(u'prop').get(u'generator'), var.get(u'prop').get(u'async'))
        PyJsHoisted_getValue_.func_name = u'getValue'
        var.put(u'getValue', PyJsHoisted_getValue_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        var.put(u'template', var.get(u'_ref').get(u'template'))
        var.put(u'buildMutatorMapAssign', var.get(u'template')(Js(u'\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ')))
        pass
        pass
        pass
        pass
        pass
        @Js
        def PyJs_exit_915_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'exit':PyJs_exit_915_, u'arguments':arguments}, var)
            var.registers([u'body', u'_isArray4', u'_isArray3', u'initProps', u'single', u'computedProps', u'_i4', u'_i3', u'hasComputed', u'prop', u'state', u'scope', u'getMutatorId', u'node', u'parent', u'initPropExpression', u'mutatorRef', u'foundComputed', u'objId', u'path', u'_prop', u'_ref6', u'_ref5', u'callback', u'_iterator4', u'_iterator3'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'hasComputed', Js(False))
            #for JS loop
            var.put(u'_iterator3', var.get(u'node').get(u'properties'))
            var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
            var.put(u'_i3', Js(0.0))
            var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
            while 1:
                pass
                if var.get(u'_isArray3'):
                    if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                        break
                    var.put(u'_ref5', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                    if var.get(u'_i3').get(u'done'):
                        break
                    var.put(u'_ref5', var.get(u'_i3').get(u'value'))
                var.put(u'prop', var.get(u'_ref5'))
                var.put(u'hasComputed', PyJsStrictEq(var.get(u'prop').get(u'computed'),var.get(u'true')))
                if var.get(u'hasComputed'):
                    break
            
            if var.get(u'hasComputed').neg():
                return var.get('undefined')
            var.put(u'initProps', Js([]))
            var.put(u'computedProps', Js([]))
            var.put(u'foundComputed', Js(False))
            #for JS loop
            var.put(u'_iterator4', var.get(u'node').get(u'properties'))
            var.put(u'_isArray4', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator4')))
            var.put(u'_i4', Js(0.0))
            var.put(u'_iterator4', (var.get(u'_iterator4') if var.get(u'_isArray4') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator4'))))
            while 1:
                pass
                if var.get(u'_isArray4'):
                    if (var.get(u'_i4')>=var.get(u'_iterator4').get(u'length')):
                        break
                    var.put(u'_ref6', var.get(u'_iterator4').get((var.put(u'_i4',Js(var.get(u'_i4').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i4', var.get(u'_iterator4').callprop(u'next'))
                    if var.get(u'_i4').get(u'done'):
                        break
                    var.put(u'_ref6', var.get(u'_i4').get(u'value'))
                var.put(u'_prop', var.get(u'_ref6'))
                if var.get(u'_prop').get(u'computed'):
                    var.put(u'foundComputed', var.get(u'true'))
                if var.get(u'foundComputed'):
                    var.get(u'computedProps').callprop(u'push', var.get(u'_prop'))
                else:
                    var.get(u'initProps').callprop(u'push', var.get(u'_prop'))
            
            var.put(u'objId', var.get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'parent')))
            var.put(u'initPropExpression', var.get(u't').callprop(u'objectExpression', var.get(u'initProps')))
            var.put(u'body', Js([]))
            var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'objId'), var.get(u'initPropExpression'))])))
            var.put(u'callback', var.get(u'spec'))
            if var.get(u'state').get(u'opts').get(u'loose'):
                var.put(u'callback', var.get(u'loose'))
            var.put(u'mutatorRef', PyJsComma(Js(0.0), Js(None)))
            @Js
            def PyJs_getMutatorId_916_(this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'getMutatorId':PyJs_getMutatorId_916_}, var)
                var.registers([])
                if var.get(u'mutatorRef').neg():
                    var.put(u'mutatorRef', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'mutatorMap')))
                    var.get(u'body').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'mutatorRef'), var.get(u't').callprop(u'objectExpression', Js([])))])))
                return var.get(u'mutatorRef')
            PyJs_getMutatorId_916_._set_name(u'getMutatorId')
            var.put(u'getMutatorId', PyJs_getMutatorId_916_)
            PyJs_Object_917_ = Js({u'scope':var.get(u'scope'),u'objId':var.get(u'objId'),u'body':var.get(u'body'),u'computedProps':var.get(u'computedProps'),u'initPropExpression':var.get(u'initPropExpression'),u'getMutatorId':var.get(u'getMutatorId'),u'state':var.get(u'state')})
            var.put(u'single', var.get(u'callback')(PyJs_Object_917_))
            if var.get(u'mutatorRef'):
                var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'state').callprop(u'addHelper', Js(u'defineEnumerableProperties')), Js([var.get(u'objId'), var.get(u'mutatorRef')]))))
            if var.get(u'single'):
                var.get(u'path').callprop(u'replaceWith', var.get(u'single'))
            else:
                var.get(u'body').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'objId')))
                var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'body'))
        PyJs_exit_915_._set_name(u'exit')
        PyJs_Object_914_ = Js({u'exit':PyJs_exit_915_})
        PyJs_Object_913_ = Js({u'ObjectExpression':PyJs_Object_914_})
        PyJs_Object_912_ = Js({u'visitor':PyJs_Object_913_})
        return PyJs_Object_912_
    PyJs_anonymous_909_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_909_)
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_908_._set_name(u'anonymous')
PyJs_Object_919_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0)})
@Js
def PyJs_anonymous_920_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_classCallCheck2', u'require', u'module', u'_interopRequireDefault', u'_classCallCheck3', u'_getIterator3', u'_getIterator2'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_950_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_950_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_classCallCheck2', var.get(u'require')(Js(u'babel-runtime/helpers/classCallCheck')))
    var.put(u'_classCallCheck3', var.get(u'_interopRequireDefault')(var.get(u'_classCallCheck2')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_921_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'DestructuringTransformer', u'hasRest', u'variableDeclarationHasPattern', u't', u'_ref', u'arrayUnpackVisitor'])
        @Js
        def PyJsHoisted_hasRest_(pattern, this, arguments, var=var):
            var = Scope({u'this':this, u'pattern':pattern, u'arguments':arguments}, var)
            var.registers([u'_isArray2', u'pattern', u'_ref3', u'_i2', u'elem', u'_iterator2'])
            #for JS loop
            var.put(u'_iterator2', var.get(u'pattern').get(u'elements'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref3', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref3', var.get(u'_i2').get(u'value'))
                var.put(u'elem', var.get(u'_ref3'))
                if var.get(u't').callprop(u'isRestElement', var.get(u'elem')):
                    return var.get(u'true')
            
            return Js(False)
        PyJsHoisted_hasRest_.func_name = u'hasRest'
        var.put(u'hasRest', PyJsHoisted_hasRest_)
        @Js
        def PyJsHoisted_variableDeclarationHasPattern_(node, this, arguments, var=var):
            var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
            var.registers([u'node', u'_isArray', u'_iterator', u'_ref2', u'declar', u'_i'])
            #for JS loop
            var.put(u'_iterator', var.get(u'node').get(u'declarations'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i').get(u'value'))
                var.put(u'declar', var.get(u'_ref2'))
                if var.get(u't').callprop(u'isPattern', var.get(u'declar').get(u'id')):
                    return var.get(u'true')
            
            return Js(False)
        PyJsHoisted_variableDeclarationHasPattern_.func_name = u'variableDeclarationHasPattern'
        var.put(u'variableDeclarationHasPattern', PyJsHoisted_variableDeclarationHasPattern_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        pass
        pass
        @Js
        def PyJs_ReferencedIdentifier_923_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_923_, u'arguments':arguments}, var)
            var.registers([u'path', u'state'])
            if var.get(u'state').get(u'bindings').get(var.get(u'path').get(u'node').get(u'name')):
                var.get(u'state').put(u'deopt', var.get(u'true'))
                var.get(u'path').callprop(u'stop')
        PyJs_ReferencedIdentifier_923_._set_name(u'ReferencedIdentifier')
        PyJs_Object_922_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_923_})
        var.put(u'arrayUnpackVisitor', PyJs_Object_922_)
        @Js
        def PyJs_anonymous_924_(this, arguments, var=var):
            var = Scope({u'this':this, u'arguments':arguments}, var)
            var.registers([u'DestructuringTransformer'])
            @Js
            def PyJsHoisted_DestructuringTransformer_(opts, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'opts':opts}, var)
                var.registers([u'opts'])
                PyJsComma(Js(0.0),var.get(u'_classCallCheck3').get(u'default'))(var.get(u"this"), var.get(u'DestructuringTransformer'))
                var.get(u"this").put(u'blockHoist', var.get(u'opts').get(u'blockHoist'))
                var.get(u"this").put(u'operator', var.get(u'opts').get(u'operator'))
                PyJs_Object_925_ = Js({})
                var.get(u"this").put(u'arrays', PyJs_Object_925_)
                var.get(u"this").put(u'nodes', (var.get(u'opts').get(u'nodes') or Js([])))
                var.get(u"this").put(u'scope', var.get(u'opts').get(u'scope'))
                var.get(u"this").put(u'file', var.get(u'opts').get(u'file'))
                var.get(u"this").put(u'kind', var.get(u'opts').get(u'kind'))
            PyJsHoisted_DestructuringTransformer_.func_name = u'DestructuringTransformer'
            var.put(u'DestructuringTransformer', PyJsHoisted_DestructuringTransformer_)
            pass
            @Js
            def PyJs_buildVariableAssignment_926_(id, init, this, arguments, var=var):
                var = Scope({u'this':this, u'init':init, u'buildVariableAssignment':PyJs_buildVariableAssignment_926_, u'id':id, u'arguments':arguments}, var)
                var.registers([u'node', u'init', u'id', u'op'])
                var.put(u'op', var.get(u"this").get(u'operator'))
                if var.get(u't').callprop(u'isMemberExpression', var.get(u'id')):
                    var.put(u'op', Js(u'='))
                var.put(u'node', PyJsComma(Js(0.0), Js(None)))
                if var.get(u'op'):
                    var.put(u'node', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', var.get(u'op'), var.get(u'id'), var.get(u'init'))))
                else:
                    var.put(u'node', var.get(u't').callprop(u'variableDeclaration', var.get(u"this").get(u'kind'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'id'), var.get(u'init'))])))
                var.get(u'node').put(u'_blockHoist', var.get(u"this").get(u'blockHoist'))
                return var.get(u'node')
            PyJs_buildVariableAssignment_926_._set_name(u'buildVariableAssignment')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'buildVariableAssignment', PyJs_buildVariableAssignment_926_)
            @Js
            def PyJs_buildVariableDeclaration_927_(id, init, this, arguments, var=var):
                var = Scope({u'this':this, u'init':init, u'buildVariableDeclaration':PyJs_buildVariableDeclaration_927_, u'id':id, u'arguments':arguments}, var)
                var.registers([u'init', u'declar', u'id'])
                var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'id'), var.get(u'init'))])))
                var.get(u'declar').put(u'_blockHoist', var.get(u"this").get(u'blockHoist'))
                return var.get(u'declar')
            PyJs_buildVariableDeclaration_927_._set_name(u'buildVariableDeclaration')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'buildVariableDeclaration', PyJs_buildVariableDeclaration_927_)
            @Js
            def PyJs_push_928_(id, init, this, arguments, var=var):
                var = Scope({u'this':this, u'push':PyJs_push_928_, u'init':init, u'id':id, u'arguments':arguments}, var)
                var.registers([u'init', u'id'])
                if var.get(u't').callprop(u'isObjectPattern', var.get(u'id')):
                    var.get(u"this").callprop(u'pushObjectPattern', var.get(u'id'), var.get(u'init'))
                else:
                    if var.get(u't').callprop(u'isArrayPattern', var.get(u'id')):
                        var.get(u"this").callprop(u'pushArrayPattern', var.get(u'id'), var.get(u'init'))
                    else:
                        if var.get(u't').callprop(u'isAssignmentPattern', var.get(u'id')):
                            var.get(u"this").callprop(u'pushAssignmentPattern', var.get(u'id'), var.get(u'init'))
                        else:
                            var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableAssignment', var.get(u'id'), var.get(u'init')))
            PyJs_push_928_._set_name(u'push')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'push', PyJs_push_928_)
            @Js
            def PyJs_toArray_929_(node, count, this, arguments, var=var):
                var = Scope({u'node':node, u'count':count, u'this':this, u'arguments':arguments, u'toArray':PyJs_toArray_929_}, var)
                var.registers([u'node', u'count'])
                if (var.get(u"this").get(u'file').get(u'opts').get(u'loose') or (var.get(u't').callprop(u'isIdentifier', var.get(u'node')) and var.get(u"this").get(u'arrays').get(var.get(u'node').get(u'name')))):
                    return var.get(u'node')
                else:
                    return var.get(u"this").get(u'scope').callprop(u'toArray', var.get(u'node'), var.get(u'count'))
            PyJs_toArray_929_._set_name(u'toArray')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'toArray', PyJs_toArray_929_)
            @Js
            def PyJs_pushAssignmentPattern_930_(pattern, valueRef, this, arguments, var=var):
                var = Scope({u'this':this, u'pattern':pattern, u'valueRef':valueRef, u'arguments':arguments, u'pushAssignmentPattern':PyJs_pushAssignmentPattern_930_}, var)
                var.registers([u'pattern', u'tempValueDefault', u'declar', u'tempValueRef', u'tempConditional', u'valueRef', u'left'])
                var.put(u'tempValueRef', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'valueRef')))
                var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'tempValueRef'), var.get(u'valueRef'))])))
                var.get(u'declar').put(u'_blockHoist', var.get(u"this").get(u'blockHoist'))
                var.get(u"this").get(u'nodes').callprop(u'push', var.get(u'declar'))
                var.put(u'tempConditional', var.get(u't').callprop(u'conditionalExpression', var.get(u't').callprop(u'binaryExpression', Js(u'==='), var.get(u'tempValueRef'), var.get(u't').callprop(u'identifier', Js(u'undefined'))), var.get(u'pattern').get(u'right'), var.get(u'tempValueRef')))
                var.put(u'left', var.get(u'pattern').get(u'left'))
                if var.get(u't').callprop(u'isPattern', var.get(u'left')):
                    var.put(u'tempValueDefault', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'tempValueRef'), var.get(u'tempConditional'))))
                    var.get(u'tempValueDefault').put(u'_blockHoist', var.get(u"this").get(u'blockHoist'))
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u'tempValueDefault'))
                    var.get(u"this").callprop(u'push', var.get(u'left'), var.get(u'tempValueRef'))
                else:
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableAssignment', var.get(u'left'), var.get(u'tempConditional')))
            PyJs_pushAssignmentPattern_930_._set_name(u'pushAssignmentPattern')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushAssignmentPattern', PyJs_pushAssignmentPattern_930_)
            @Js
            def PyJs_pushObjectRest_931_(pattern, objRef, spreadProp, spreadPropIndex, this, arguments, var=var):
                var = Scope({u'objRef':objRef, u'arguments':arguments, u'pushObjectRest':PyJs_pushObjectRest_931_, u'this':this, u'pattern':pattern, u'spreadProp':spreadProp, u'spreadPropIndex':spreadPropIndex}, var)
                var.registers([u'keys', u'pattern', u'spreadProp', u'value', u'prop', u'objRef', u'i', u'key', u'spreadPropIndex'])
                var.put(u'keys', Js([]))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'pattern').get(u'properties').get(u'length')):
                    try:
                        var.put(u'prop', var.get(u'pattern').get(u'properties').get(var.get(u'i')))
                        if (var.get(u'i')>=var.get(u'spreadPropIndex')):
                            break
                        if var.get(u't').callprop(u'isRestProperty', var.get(u'prop')):
                            continue
                        var.put(u'key', var.get(u'prop').get(u'key'))
                        if (var.get(u't').callprop(u'isIdentifier', var.get(u'key')) and var.get(u'prop').get(u'computed').neg()):
                            var.put(u'key', var.get(u't').callprop(u'stringLiteral', var.get(u'prop').get(u'key').get(u'name')))
                        var.get(u'keys').callprop(u'push', var.get(u'key'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                var.put(u'keys', var.get(u't').callprop(u'arrayExpression', var.get(u'keys')))
                var.put(u'value', var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'objectWithoutProperties')), Js([var.get(u'objRef'), var.get(u'keys')])))
                var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableAssignment', var.get(u'spreadProp').get(u'argument'), var.get(u'value')))
            PyJs_pushObjectRest_931_._set_name(u'pushObjectRest')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushObjectRest', PyJs_pushObjectRest_931_)
            @Js
            def PyJs_pushObjectProperty_932_(prop, propRef, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'pushObjectProperty':PyJs_pushObjectProperty_932_, u'propRef':propRef, u'prop':prop}, var)
                var.registers([u'objRef', u'pattern', u'propRef', u'prop'])
                if var.get(u't').callprop(u'isLiteral', var.get(u'prop').get(u'key')):
                    var.get(u'prop').put(u'computed', var.get(u'true'))
                var.put(u'pattern', var.get(u'prop').get(u'value'))
                var.put(u'objRef', var.get(u't').callprop(u'memberExpression', var.get(u'propRef'), var.get(u'prop').get(u'key'), var.get(u'prop').get(u'computed')))
                if var.get(u't').callprop(u'isPattern', var.get(u'pattern')):
                    var.get(u"this").callprop(u'push', var.get(u'pattern'), var.get(u'objRef'))
                else:
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableAssignment', var.get(u'pattern'), var.get(u'objRef')))
            PyJs_pushObjectProperty_932_._set_name(u'pushObjectProperty')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushObjectProperty', PyJs_pushObjectProperty_932_)
            @Js
            def PyJs_pushObjectPattern_933_(pattern, objRef, this, arguments, var=var):
                var = Scope({u'objRef':objRef, u'pattern':pattern, u'pushObjectPattern':PyJs_pushObjectPattern_933_, u'this':this, u'arguments':arguments}, var)
                var.registers([u'i', u'pattern', u'objRef', u'temp', u'prop'])
                if var.get(u'pattern').get(u'properties').get(u'length').neg():
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u"this").get(u'file').callprop(u'addHelper', Js(u'objectDestructuringEmpty')), Js([var.get(u'objRef')]))))
                if ((var.get(u'pattern').get(u'properties').get(u'length')>Js(1.0)) and var.get(u"this").get(u'scope').callprop(u'isStatic', var.get(u'objRef')).neg()):
                    var.put(u'temp', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'objRef')))
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableDeclaration', var.get(u'temp'), var.get(u'objRef')))
                    var.put(u'objRef', var.get(u'temp'))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'pattern').get(u'properties').get(u'length')):
                    try:
                        var.put(u'prop', var.get(u'pattern').get(u'properties').get(var.get(u'i')))
                        if var.get(u't').callprop(u'isRestProperty', var.get(u'prop')):
                            var.get(u"this").callprop(u'pushObjectRest', var.get(u'pattern'), var.get(u'objRef'), var.get(u'prop'), var.get(u'i'))
                        else:
                            var.get(u"this").callprop(u'pushObjectProperty', var.get(u'prop'), var.get(u'objRef'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            PyJs_pushObjectPattern_933_._set_name(u'pushObjectPattern')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushObjectPattern', PyJs_pushObjectPattern_933_)
            @Js
            def PyJs_canUnpackArrayPattern_934_(pattern, arr, this, arguments, var=var):
                var = Scope({u'this':this, u'pattern':pattern, u'arr':arr, u'canUnpackArrayPattern':PyJs_canUnpackArrayPattern_934_, u'arguments':arguments}, var)
                var.registers([u'_i4', u'arr', u'_isArray4', u'_isArray3', u'pattern', u'_ref5', u'_ref4', u'_i3', u'elem', u'state', u'_elem', u'_iterator4', u'bindings', u'_iterator3'])
                if var.get(u't').callprop(u'isArrayExpression', var.get(u'arr')).neg():
                    return Js(False)
                if (var.get(u'pattern').get(u'elements').get(u'length')>var.get(u'arr').get(u'elements').get(u'length')):
                    return var.get('undefined')
                if ((var.get(u'pattern').get(u'elements').get(u'length')<var.get(u'arr').get(u'elements').get(u'length')) and var.get(u'hasRest')(var.get(u'pattern')).neg()):
                    return Js(False)
                #for JS loop
                var.put(u'_iterator3', var.get(u'pattern').get(u'elements'))
                var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
                var.put(u'_i3', Js(0.0))
                var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
                while 1:
                    pass
                    if var.get(u'_isArray3'):
                        if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                            break
                        var.put(u'_ref4', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                        if var.get(u'_i3').get(u'done'):
                            break
                        var.put(u'_ref4', var.get(u'_i3').get(u'value'))
                    var.put(u'elem', var.get(u'_ref4'))
                    if var.get(u'elem').neg():
                        return Js(False)
                    if var.get(u't').callprop(u'isMemberExpression', var.get(u'elem')):
                        return Js(False)
                
                #for JS loop
                var.put(u'_iterator4', var.get(u'arr').get(u'elements'))
                var.put(u'_isArray4', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator4')))
                var.put(u'_i4', Js(0.0))
                var.put(u'_iterator4', (var.get(u'_iterator4') if var.get(u'_isArray4') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator4'))))
                while 1:
                    pass
                    if var.get(u'_isArray4'):
                        if (var.get(u'_i4')>=var.get(u'_iterator4').get(u'length')):
                            break
                        var.put(u'_ref5', var.get(u'_iterator4').get((var.put(u'_i4',Js(var.get(u'_i4').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i4', var.get(u'_iterator4').callprop(u'next'))
                        if var.get(u'_i4').get(u'done'):
                            break
                        var.put(u'_ref5', var.get(u'_i4').get(u'value'))
                    var.put(u'_elem', var.get(u'_ref5'))
                    if var.get(u't').callprop(u'isSpreadElement', var.get(u'_elem')):
                        return Js(False)
                    if var.get(u't').callprop(u'isCallExpression', var.get(u'_elem')):
                        return Js(False)
                    if var.get(u't').callprop(u'isMemberExpression', var.get(u'_elem')):
                        return Js(False)
                
                var.put(u'bindings', var.get(u't').callprop(u'getBindingIdentifiers', var.get(u'pattern')))
                PyJs_Object_935_ = Js({u'deopt':Js(False),u'bindings':var.get(u'bindings')})
                var.put(u'state', PyJs_Object_935_)
                var.get(u"this").get(u'scope').callprop(u'traverse', var.get(u'arr'), var.get(u'arrayUnpackVisitor'), var.get(u'state'))
                return var.get(u'state').get(u'deopt').neg()
            PyJs_canUnpackArrayPattern_934_._set_name(u'canUnpackArrayPattern')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'canUnpackArrayPattern', PyJs_canUnpackArrayPattern_934_)
            @Js
            def PyJs_pushUnpackedArrayPattern_936_(pattern, arr, this, arguments, var=var):
                var = Scope({u'this':this, u'pattern':pattern, u'arr':arr, u'arguments':arguments, u'pushUnpackedArrayPattern':PyJs_pushUnpackedArrayPattern_936_}, var)
                var.registers([u'i', u'pattern', u'arr', u'elem'])
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'pattern').get(u'elements').get(u'length')):
                    try:
                        var.put(u'elem', var.get(u'pattern').get(u'elements').get(var.get(u'i')))
                        if var.get(u't').callprop(u'isRestElement', var.get(u'elem')):
                            var.get(u"this").callprop(u'push', var.get(u'elem').get(u'argument'), var.get(u't').callprop(u'arrayExpression', var.get(u'arr').get(u'elements').callprop(u'slice', var.get(u'i'))))
                        else:
                            var.get(u"this").callprop(u'push', var.get(u'elem'), var.get(u'arr').get(u'elements').get(var.get(u'i')))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            PyJs_pushUnpackedArrayPattern_936_._set_name(u'pushUnpackedArrayPattern')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushUnpackedArrayPattern', PyJs_pushUnpackedArrayPattern_936_)
            @Js
            def PyJs_pushArrayPattern_937_(pattern, arrayRef, this, arguments, var=var):
                var = Scope({u'this':this, u'pattern':pattern, u'arguments':arguments, u'arrayRef':arrayRef, u'pushArrayPattern':PyJs_pushArrayPattern_937_}, var)
                var.registers([u'count', u'toArray', u'i', u'pattern', u'elem', u'arrayRef', u'elemRef'])
                if var.get(u'pattern').get(u'elements').neg():
                    return var.get('undefined')
                if var.get(u"this").callprop(u'canUnpackArrayPattern', var.get(u'pattern'), var.get(u'arrayRef')):
                    return var.get(u"this").callprop(u'pushUnpackedArrayPattern', var.get(u'pattern'), var.get(u'arrayRef'))
                var.put(u'count', (var.get(u'hasRest')(var.get(u'pattern')).neg() and var.get(u'pattern').get(u'elements').get(u'length')))
                var.put(u'toArray', var.get(u"this").callprop(u'toArray', var.get(u'arrayRef'), var.get(u'count')))
                if var.get(u't').callprop(u'isIdentifier', var.get(u'toArray')):
                    var.put(u'arrayRef', var.get(u'toArray'))
                else:
                    var.put(u'arrayRef', var.get(u"this").get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'arrayRef')))
                    var.get(u"this").get(u'arrays').put(var.get(u'arrayRef').get(u'name'), var.get(u'true'))
                    var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableDeclaration', var.get(u'arrayRef'), var.get(u'toArray')))
                #for JS loop
                var.put(u'i', Js(0.0))
                while (var.get(u'i')<var.get(u'pattern').get(u'elements').get(u'length')):
                    try:
                        var.put(u'elem', var.get(u'pattern').get(u'elements').get(var.get(u'i')))
                        if var.get(u'elem').neg():
                            continue
                        var.put(u'elemRef', PyJsComma(Js(0.0), Js(None)))
                        if var.get(u't').callprop(u'isRestElement', var.get(u'elem')):
                            var.put(u'elemRef', var.get(u"this").callprop(u'toArray', var.get(u'arrayRef')))
                            if (var.get(u'i')>Js(0.0)):
                                var.put(u'elemRef', var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'memberExpression', var.get(u'elemRef'), var.get(u't').callprop(u'identifier', Js(u'slice'))), Js([var.get(u't').callprop(u'numericLiteral', var.get(u'i'))])))
                            var.put(u'elem', var.get(u'elem').get(u'argument'))
                        else:
                            var.put(u'elemRef', var.get(u't').callprop(u'memberExpression', var.get(u'arrayRef'), var.get(u't').callprop(u'numericLiteral', var.get(u'i')), var.get(u'true')))
                        var.get(u"this").callprop(u'push', var.get(u'elem'), var.get(u'elemRef'))
                    finally:
                            (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            PyJs_pushArrayPattern_937_._set_name(u'pushArrayPattern')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'pushArrayPattern', PyJs_pushArrayPattern_937_)
            @Js
            def PyJs_init_938_(pattern, ref, this, arguments, var=var):
                var = Scope({u'this':this, u'pattern':pattern, u'init':PyJs_init_938_, u'ref':ref, u'arguments':arguments}, var)
                var.registers([u'pattern', u'memo', u'ref'])
                if (var.get(u't').callprop(u'isArrayExpression', var.get(u'ref')).neg() and var.get(u't').callprop(u'isMemberExpression', var.get(u'ref')).neg()):
                    var.put(u'memo', var.get(u"this").get(u'scope').callprop(u'maybeGenerateMemoised', var.get(u'ref'), var.get(u'true')))
                    if var.get(u'memo'):
                        var.get(u"this").get(u'nodes').callprop(u'push', var.get(u"this").callprop(u'buildVariableDeclaration', var.get(u'memo'), var.get(u'ref')))
                        var.put(u'ref', var.get(u'memo'))
                var.get(u"this").callprop(u'push', var.get(u'pattern'), var.get(u'ref'))
                return var.get(u"this").get(u'nodes')
            PyJs_init_938_._set_name(u'init')
            var.get(u'DestructuringTransformer').get(u'prototype').put(u'init', PyJs_init_938_)
            return var.get(u'DestructuringTransformer')
        PyJs_anonymous_924_._set_name(u'anonymous')
        var.put(u'DestructuringTransformer', PyJs_anonymous_924_())
        @Js
        def PyJs_ExportNamedDeclaration_941_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'ExportNamedDeclaration':PyJs_ExportNamedDeclaration_941_}, var)
            var.registers([u'id', u'specifiers', u'path', u'name', u'declaration'])
            var.put(u'declaration', var.get(u'path').callprop(u'get', Js(u'declaration')))
            if var.get(u'declaration').callprop(u'isVariableDeclaration').neg():
                return var.get('undefined')
            if var.get(u'variableDeclarationHasPattern')(var.get(u'declaration').get(u'node')).neg():
                return var.get('undefined')
            var.put(u'specifiers', Js([]))
            for PyJsTemp in var.get(u'path').callprop(u'getOuterBindingIdentifiers', var.get(u'path')):
                var.put(u'name', PyJsTemp)
                var.put(u'id', var.get(u't').callprop(u'identifier', var.get(u'name')))
                var.get(u'specifiers').callprop(u'push', var.get(u't').callprop(u'exportSpecifier', var.get(u'id'), var.get(u'id')))
            var.get(u'path').callprop(u'replaceWith', var.get(u'declaration').get(u'node'))
            var.get(u'path').callprop(u'insertAfter', var.get(u't').callprop(u'exportNamedDeclaration', var.get(u"null"), var.get(u'specifiers')))
        PyJs_ExportNamedDeclaration_941_._set_name(u'ExportNamedDeclaration')
        @Js
        def PyJs_ForXStatement_942_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'ForXStatement':PyJs_ForXStatement_942_}, var)
            var.registers([u'node', u'destructuring', u'file', u'temp', u'pattern', u'key', u'path', u'scope', u'nodes', u'block', u'left'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'left', var.get(u'node').get(u'left'))
            if var.get(u't').callprop(u'isPattern', var.get(u'left')):
                var.put(u'temp', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
                var.get(u'node').put(u'left', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'temp'))])))
                var.get(u'path').callprop(u'ensureBlock')
                var.get(u'node').get(u'body').get(u'body').callprop(u'unshift', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'left'), var.get(u'temp'))])))
                return var.get('undefined')
            if var.get(u't').callprop(u'isVariableDeclaration', var.get(u'left')).neg():
                return var.get('undefined')
            var.put(u'pattern', var.get(u'left').get(u'declarations').get(u'0').get(u'id'))
            if var.get(u't').callprop(u'isPattern', var.get(u'pattern')).neg():
                return var.get('undefined')
            var.put(u'key', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
            var.get(u'node').put(u'left', var.get(u't').callprop(u'variableDeclaration', var.get(u'left').get(u'kind'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'key'), var.get(u"null"))])))
            var.put(u'nodes', Js([]))
            PyJs_Object_943_ = Js({u'kind':var.get(u'left').get(u'kind'),u'file':var.get(u'file'),u'scope':var.get(u'scope'),u'nodes':var.get(u'nodes')})
            var.put(u'destructuring', var.get(u'DestructuringTransformer').create(PyJs_Object_943_))
            var.get(u'destructuring').callprop(u'init', var.get(u'pattern'), var.get(u'key'))
            var.get(u'path').callprop(u'ensureBlock')
            var.put(u'block', var.get(u'node').get(u'body'))
            var.get(u'block').put(u'body', var.get(u'nodes').callprop(u'concat', var.get(u'block').get(u'body')))
        PyJs_ForXStatement_942_._set_name(u'ForXStatement')
        @Js
        def PyJs_CatchClause_944_(_ref6, file, this, arguments, var=var):
            var = Scope({u'this':this, u'_ref6':_ref6, u'arguments':arguments, u'file':file, u'CatchClause':PyJs_CatchClause_944_}, var)
            var.registers([u'node', u'destructuring', u'pattern', u'file', u'_ref6', u'scope', u'nodes', u'ref'])
            var.put(u'node', var.get(u'_ref6').get(u'node'))
            var.put(u'scope', var.get(u'_ref6').get(u'scope'))
            var.put(u'pattern', var.get(u'node').get(u'param'))
            if var.get(u't').callprop(u'isPattern', var.get(u'pattern')).neg():
                return var.get('undefined')
            var.put(u'ref', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
            var.get(u'node').put(u'param', var.get(u'ref'))
            var.put(u'nodes', Js([]))
            PyJs_Object_945_ = Js({u'kind':Js(u'let'),u'file':var.get(u'file'),u'scope':var.get(u'scope'),u'nodes':var.get(u'nodes')})
            var.put(u'destructuring', var.get(u'DestructuringTransformer').create(PyJs_Object_945_))
            var.get(u'destructuring').callprop(u'init', var.get(u'pattern'), var.get(u'ref'))
            var.get(u'node').get(u'body').put(u'body', var.get(u'nodes').callprop(u'concat', var.get(u'node').get(u'body').get(u'body')))
        PyJs_CatchClause_944_._set_name(u'CatchClause')
        @Js
        def PyJs_AssignmentExpression_946_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'AssignmentExpression':PyJs_AssignmentExpression_946_}, var)
            var.registers([u'node', u'destructuring', u'file', u'path', u'scope', u'nodes', u'ref'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            if var.get(u't').callprop(u'isPattern', var.get(u'node').get(u'left')).neg():
                return var.get('undefined')
            var.put(u'nodes', Js([]))
            PyJs_Object_947_ = Js({u'operator':var.get(u'node').get(u'operator'),u'file':var.get(u'file'),u'scope':var.get(u'scope'),u'nodes':var.get(u'nodes')})
            var.put(u'destructuring', var.get(u'DestructuringTransformer').create(PyJs_Object_947_))
            var.put(u'ref', PyJsComma(Js(0.0), Js(None)))
            if (var.get(u'path').callprop(u'isCompletionRecord') or var.get(u'path').get(u'parentPath').callprop(u'isExpressionStatement').neg()):
                var.put(u'ref', var.get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'node').get(u'right'), Js(u'ref')))
                var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ref'), var.get(u'node').get(u'right'))])))
                if var.get(u't').callprop(u'isArrayExpression', var.get(u'node').get(u'right')):
                    var.get(u'destructuring').get(u'arrays').put(var.get(u'ref').get(u'name'), var.get(u'true'))
            var.get(u'destructuring').callprop(u'init', var.get(u'node').get(u'left'), (var.get(u'ref') or var.get(u'node').get(u'right')))
            if var.get(u'ref'):
                var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u'ref')))
            var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'nodes'))
        PyJs_AssignmentExpression_946_._set_name(u'AssignmentExpression')
        @Js
        def PyJs_VariableDeclaration_948_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file, u'VariableDeclaration':PyJs_VariableDeclaration_948_}, var)
            var.registers([u'node', u'_isArray5', u'patternId', u'_ref7', u'parent', u'i', u'pattern', u'_i5', u'tail', u'_iterator5', u'_node', u'declar', u'nodesOut', u'file', u'path', u'destructuring', u'scope', u'nodes', u'_tail$declarations'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            if var.get(u't').callprop(u'isForXStatement', var.get(u'parent')):
                return var.get('undefined')
            if (var.get(u'parent').neg() or var.get(u'path').get(u'container').neg()):
                return var.get('undefined')
            if var.get(u'variableDeclarationHasPattern')(var.get(u'node')).neg():
                return var.get('undefined')
            var.put(u'nodes', Js([]))
            var.put(u'declar', PyJsComma(Js(0.0), Js(None)))
            #for JS loop
            var.put(u'i', Js(0.0))
            while (var.get(u'i')<var.get(u'node').get(u'declarations').get(u'length')):
                try:
                    var.put(u'declar', var.get(u'node').get(u'declarations').get(var.get(u'i')))
                    var.put(u'patternId', var.get(u'declar').get(u'init'))
                    var.put(u'pattern', var.get(u'declar').get(u'id'))
                    PyJs_Object_949_ = Js({u'blockHoist':var.get(u'node').get(u'_blockHoist'),u'nodes':var.get(u'nodes'),u'scope':var.get(u'scope'),u'kind':var.get(u'node').get(u'kind'),u'file':var.get(u'file')})
                    var.put(u'destructuring', var.get(u'DestructuringTransformer').create(PyJs_Object_949_))
                    if var.get(u't').callprop(u'isPattern', var.get(u'pattern')):
                        var.get(u'destructuring').callprop(u'init', var.get(u'pattern'), var.get(u'patternId'))
                        if PyJsStrictNeq((+var.get(u'i')),(var.get(u'node').get(u'declarations').get(u'length')-Js(1.0))):
                            var.get(u't').callprop(u'inherits', var.get(u'nodes').get((var.get(u'nodes').get(u'length')-Js(1.0))), var.get(u'declar'))
                    else:
                        var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'inherits', var.get(u'destructuring').callprop(u'buildVariableAssignment', var.get(u'declar').get(u'id'), var.get(u'declar').get(u'init')), var.get(u'declar')))
                finally:
                        (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
            var.put(u'nodesOut', Js([]))
            #for JS loop
            var.put(u'_iterator5', var.get(u'nodes'))
            var.put(u'_isArray5', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator5')))
            var.put(u'_i5', Js(0.0))
            var.put(u'_iterator5', (var.get(u'_iterator5') if var.get(u'_isArray5') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator5'))))
            while 1:
                pass
                if var.get(u'_isArray5'):
                    if (var.get(u'_i5')>=var.get(u'_iterator5').get(u'length')):
                        break
                    var.put(u'_ref7', var.get(u'_iterator5').get((var.put(u'_i5',Js(var.get(u'_i5').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i5', var.get(u'_iterator5').callprop(u'next'))
                    if var.get(u'_i5').get(u'done'):
                        break
                    var.put(u'_ref7', var.get(u'_i5').get(u'value'))
                var.put(u'_node', var.get(u'_ref7'))
                var.put(u'tail', var.get(u'nodesOut').get((var.get(u'nodesOut').get(u'length')-Js(1.0))))
                if (((var.get(u'tail') and var.get(u't').callprop(u'isVariableDeclaration', var.get(u'tail'))) and var.get(u't').callprop(u'isVariableDeclaration', var.get(u'_node'))) and PyJsStrictEq(var.get(u'tail').get(u'kind'),var.get(u'_node').get(u'kind'))):
                    pass
                    var.put(u'_tail$declarations', var.get(u'tail').get(u'declarations')).get(u'push').callprop(u'apply', var.get(u'_tail$declarations'), var.get(u'_node').get(u'declarations'))
                else:
                    var.get(u'nodesOut').callprop(u'push', var.get(u'_node'))
            
            if PyJsStrictEq(var.get(u'nodesOut').get(u'length'),Js(1.0)):
                var.get(u'path').callprop(u'replaceWith', var.get(u'nodesOut').get(u'0'))
            else:
                var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'nodesOut'))
        PyJs_VariableDeclaration_948_._set_name(u'VariableDeclaration')
        PyJs_Object_940_ = Js({u'ExportNamedDeclaration':PyJs_ExportNamedDeclaration_941_,u'ForXStatement':PyJs_ForXStatement_942_,u'CatchClause':PyJs_CatchClause_944_,u'AssignmentExpression':PyJs_AssignmentExpression_946_,u'VariableDeclaration':PyJs_VariableDeclaration_948_})
        PyJs_Object_939_ = Js({u'visitor':PyJs_Object_940_})
        return PyJs_Object_939_
    PyJs_anonymous_921_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_921_)
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_920_._set_name(u'anonymous')
PyJs_Object_951_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/helpers/classCallCheck':Js(110.0)})
@Js
def PyJs_anonymous_952_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_create', u'exports', u'_interopRequireWildcard', u'getName', u'_babelTypes', u'module', u'_create2', u't', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'require'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_959_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_959_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_getName_(key, this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments, u'key':key}, var)
        var.registers([u'key'])
        if var.get(u't').callprop(u'isIdentifier', var.get(u'key')):
            return var.get(u'key').get(u'name')
        return var.get(u'key').get(u'value').callprop(u'toString')
    PyJsHoisted_getName_.func_name = u'getName'
    var.put(u'getName', PyJsHoisted_getName_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_958_ = Js({})
            var.put(u'newObj', PyJs_Object_958_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
    var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
    @Js
    def PyJs_anonymous_953_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        @Js
        def PyJs_ObjectExpression_956_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'ObjectExpression':PyJs_ObjectExpression_956_, u'arguments':arguments}, var)
            var.registers([u'node', u'alreadySeenGetters', u'_isArray', u'plainProps', u'name', u'alreadySeenSetters', u'alreadySeenData', u'prop', u'_i', u'path', u'isDuplicate', u'_iterator', u'_ref'])
            var.put(u'node', var.get(u'path').get(u'node'))
            @Js
            def PyJs_anonymous_957_(prop, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'prop':prop}, var)
                var.registers([u'prop'])
                return (var.get(u't').callprop(u'isSpreadProperty', var.get(u'prop')).neg() and var.get(u'prop').get(u'computed').neg())
            PyJs_anonymous_957_._set_name(u'anonymous')
            var.put(u'plainProps', var.get(u'node').get(u'properties').callprop(u'filter', PyJs_anonymous_957_))
            var.put(u'alreadySeenData', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'alreadySeenGetters', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'alreadySeenSetters', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            #for JS loop
            var.put(u'_iterator', var.get(u'plainProps'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'prop', var.get(u'_ref'))
                var.put(u'name', var.get(u'getName')(var.get(u'prop').get(u'key')))
                var.put(u'isDuplicate', Js(False))
                while 1:
                    SWITCHED = False
                    CONDITION = (var.get(u'prop').get(u'kind'))
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'get')):
                        SWITCHED = True
                        if (var.get(u'alreadySeenData').get(var.get(u'name')) or var.get(u'alreadySeenGetters').get(var.get(u'name'))):
                            var.put(u'isDuplicate', var.get(u'true'))
                        var.get(u'alreadySeenGetters').put(var.get(u'name'), var.get(u'true'))
                        break
                    if SWITCHED or PyJsStrictEq(CONDITION, Js(u'set')):
                        SWITCHED = True
                        if (var.get(u'alreadySeenData').get(var.get(u'name')) or var.get(u'alreadySeenSetters').get(var.get(u'name'))):
                            var.put(u'isDuplicate', var.get(u'true'))
                        var.get(u'alreadySeenSetters').put(var.get(u'name'), var.get(u'true'))
                        break
                    if True:
                        SWITCHED = True
                        if ((var.get(u'alreadySeenData').get(var.get(u'name')) or var.get(u'alreadySeenGetters').get(var.get(u'name'))) or var.get(u'alreadySeenSetters').get(var.get(u'name'))):
                            var.put(u'isDuplicate', var.get(u'true'))
                        var.get(u'alreadySeenData').put(var.get(u'name'), var.get(u'true'))
                    SWITCHED = True
                    break
                if var.get(u'isDuplicate'):
                    var.get(u'prop').put(u'computed', var.get(u'true'))
                    var.get(u'prop').put(u'key', var.get(u't').callprop(u'stringLiteral', var.get(u'name')))
            
        PyJs_ObjectExpression_956_._set_name(u'ObjectExpression')
        PyJs_Object_955_ = Js({u'ObjectExpression':PyJs_ObjectExpression_956_})
        PyJs_Object_954_ = Js({u'visitor':PyJs_Object_955_})
        return PyJs_Object_954_
    PyJs_anonymous_953_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_953_)
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_952_._set_name(u'anonymous')
PyJs_Object_960_ = Js({u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_961_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_962_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'loose', u'messages', u'_ForOfStatementArray', u'buildForOfArray', u'buildForOfLoose', u't', u'template', u'_ref', u'buildForOf', u'spec'])
        @Js
        def PyJsHoisted_loose_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file}, var)
            var.registers([u'node', u'iteratorKey', u'isArrayKey', u'declar', u'file', u'path', u'scope', u'id', u'loop', u'left'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'left', var.get(u'node').get(u'left'))
            var.put(u'declar', PyJsComma(Js(0.0), Js(None)))
            var.put(u'id', PyJsComma(Js(0.0), Js(None)))
            if ((var.get(u't').callprop(u'isIdentifier', var.get(u'left')) or var.get(u't').callprop(u'isPattern', var.get(u'left'))) or var.get(u't').callprop(u'isMemberExpression', var.get(u'left'))):
                var.put(u'id', var.get(u'left'))
            else:
                if var.get(u't').callprop(u'isVariableDeclaration', var.get(u'left')):
                    var.put(u'id', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
                    var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', var.get(u'left').get(u'kind'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'left').get(u'declarations').get(u'0').get(u'id'), var.get(u'id'))])))
                else:
                    PyJsTempException = JsToPyException(var.get(u'file').callprop(u'buildCodeFrameError', var.get(u'left'), var.get(u'messages').callprop(u'get', Js(u'unknownForHead'), var.get(u'left').get(u'type'))))
                    raise PyJsTempException
            var.put(u'iteratorKey', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'iterator')))
            var.put(u'isArrayKey', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'isArray')))
            PyJs_Object_969_ = Js({u'LOOP_OBJECT':var.get(u'iteratorKey'),u'IS_ARRAY':var.get(u'isArrayKey'),u'OBJECT':var.get(u'node').get(u'right'),u'INDEX':var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'i')),u'ID':var.get(u'id')})
            var.put(u'loop', var.get(u'buildForOfLoose')(PyJs_Object_969_))
            if var.get(u'declar').neg():
                var.get(u'loop').get(u'body').get(u'body').callprop(u'shift')
            PyJs_Object_970_ = Js({u'declar':var.get(u'declar'),u'node':var.get(u'loop'),u'loop':var.get(u'loop')})
            return PyJs_Object_970_
        PyJsHoisted_loose_.func_name = u'loose'
        var.put(u'loose', PyJsHoisted_loose_)
        @Js
        def PyJsHoisted__ForOfStatementArray_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
            var.registers([u'node', u'iterationValue', u'right', u'uid', u'iterationKey', u'path', u'scope', u'nodes', u'loop', u'left'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'nodes', Js([]))
            var.put(u'right', var.get(u'node').get(u'right'))
            if (var.get(u't').callprop(u'isIdentifier', var.get(u'right')).neg() or var.get(u'scope').callprop(u'hasBinding', var.get(u'right').get(u'name')).neg()):
                var.put(u'uid', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'arr')))
                var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'uid'), var.get(u'right'))])))
                var.put(u'right', var.get(u'uid'))
            var.put(u'iterationKey', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'i')))
            PyJs_Object_965_ = Js({u'BODY':var.get(u'node').get(u'body'),u'KEY':var.get(u'iterationKey'),u'ARR':var.get(u'right')})
            var.put(u'loop', var.get(u'buildForOfArray')(PyJs_Object_965_))
            var.get(u't').callprop(u'inherits', var.get(u'loop'), var.get(u'node'))
            var.get(u't').callprop(u'ensureBlock', var.get(u'loop'))
            var.put(u'iterationValue', var.get(u't').callprop(u'memberExpression', var.get(u'right'), var.get(u'iterationKey'), var.get(u'true')))
            var.put(u'left', var.get(u'node').get(u'left'))
            if var.get(u't').callprop(u'isVariableDeclaration', var.get(u'left')):
                var.get(u'left').get(u'declarations').get(u'0').put(u'init', var.get(u'iterationValue'))
                var.get(u'loop').get(u'body').get(u'body').callprop(u'unshift', var.get(u'left'))
            else:
                var.get(u'loop').get(u'body').get(u'body').callprop(u'unshift', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'left'), var.get(u'iterationValue'))))
            if var.get(u'path').get(u'parentPath').callprop(u'isLabeledStatement'):
                var.put(u'loop', var.get(u't').callprop(u'labeledStatement', var.get(u'path').get(u'parentPath').get(u'node').get(u'label'), var.get(u'loop')))
            var.get(u'nodes').callprop(u'push', var.get(u'loop'))
            return var.get(u'nodes')
        PyJsHoisted__ForOfStatementArray_.func_name = u'_ForOfStatementArray'
        var.put(u'_ForOfStatementArray', PyJsHoisted__ForOfStatementArray_)
        @Js
        def PyJsHoisted_spec_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'file':file}, var)
            var.registers([u'node', u'stepValue', u'isLabeledParent', u'stepKey', u'file', u'parent', u'tryBody', u'declar', u'template', u'path', u'scope', u'iteratorKey', u'loop', u'left'])
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.put(u'parent', var.get(u'path').get(u'parent'))
            var.put(u'left', var.get(u'node').get(u'left'))
            var.put(u'declar', PyJsComma(Js(0.0), Js(None)))
            var.put(u'stepKey', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'step')))
            var.put(u'stepValue', var.get(u't').callprop(u'memberExpression', var.get(u'stepKey'), var.get(u't').callprop(u'identifier', Js(u'value'))))
            if ((var.get(u't').callprop(u'isIdentifier', var.get(u'left')) or var.get(u't').callprop(u'isPattern', var.get(u'left'))) or var.get(u't').callprop(u'isMemberExpression', var.get(u'left'))):
                var.put(u'declar', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'left'), var.get(u'stepValue'))))
            else:
                if var.get(u't').callprop(u'isVariableDeclaration', var.get(u'left')):
                    var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', var.get(u'left').get(u'kind'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'left').get(u'declarations').get(u'0').get(u'id'), var.get(u'stepValue'))])))
                else:
                    PyJsTempException = JsToPyException(var.get(u'file').callprop(u'buildCodeFrameError', var.get(u'left'), var.get(u'messages').callprop(u'get', Js(u'unknownForHead'), var.get(u'left').get(u'type'))))
                    raise PyJsTempException
            var.put(u'iteratorKey', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'iterator')))
            PyJs_Object_971_ = Js({u'ITERATOR_HAD_ERROR_KEY':var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'didIteratorError')),u'ITERATOR_COMPLETION':var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'iteratorNormalCompletion')),u'ITERATOR_ERROR_KEY':var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'iteratorError')),u'ITERATOR_KEY':var.get(u'iteratorKey'),u'STEP_KEY':var.get(u'stepKey'),u'OBJECT':var.get(u'node').get(u'right'),u'BODY':var.get(u"null")})
            var.put(u'template', var.get(u'buildForOf')(PyJs_Object_971_))
            var.put(u'isLabeledParent', var.get(u't').callprop(u'isLabeledStatement', var.get(u'parent')))
            var.put(u'tryBody', var.get(u'template').get(u'3').get(u'block').get(u'body'))
            var.put(u'loop', var.get(u'tryBody').get(u'0'))
            if var.get(u'isLabeledParent'):
                var.get(u'tryBody').put(u'0', var.get(u't').callprop(u'labeledStatement', var.get(u'parent').get(u'label'), var.get(u'loop')))
            PyJs_Object_972_ = Js({u'replaceParent':var.get(u'isLabeledParent'),u'declar':var.get(u'declar'),u'loop':var.get(u'loop'),u'node':var.get(u'template')})
            return PyJs_Object_972_
        PyJsHoisted_spec_.func_name = u'spec'
        var.put(u'spec', PyJsHoisted_spec_)
        var.put(u'messages', var.get(u'_ref').get(u'messages'))
        var.put(u'template', var.get(u'_ref').get(u'template'))
        var.put(u't', var.get(u'_ref').get(u'types'))
        var.put(u'buildForOfArray', var.get(u'template')(Js(u'\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  ')))
        def PyJs_LONG_963_(var=var):
            return var.get(u'template')(Js(u'\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      var ID;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  '))
        var.put(u'buildForOfLoose', PyJs_LONG_963_())
        def PyJs_LONG_964_(var=var):
            return var.get(u'template')(Js(u'\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  '))
        var.put(u'buildForOf', PyJs_LONG_964_())
        pass
        @Js
        def PyJs_ForOfStatement_968_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'ForOfStatement':PyJs_ForOfStatement_968_}, var)
            var.registers([u'node', u'callback', u'state', u'declar', u'build', u'loop', u'path', u'block'])
            if var.get(u'path').callprop(u'get', Js(u'right')).callprop(u'isArrayExpression'):
                if var.get(u'path').get(u'parentPath').callprop(u'isLabeledStatement'):
                    return var.get(u'path').get(u'parentPath').callprop(u'replaceWithMultiple', var.get(u'_ForOfStatementArray')(var.get(u'path')))
                else:
                    return var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'_ForOfStatementArray')(var.get(u'path')))
            var.put(u'callback', var.get(u'spec'))
            if var.get(u'state').get(u'opts').get(u'loose'):
                var.put(u'callback', var.get(u'loose'))
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'build', var.get(u'callback')(var.get(u'path'), var.get(u'state')))
            var.put(u'declar', var.get(u'build').get(u'declar'))
            var.put(u'loop', var.get(u'build').get(u'loop'))
            var.put(u'block', var.get(u'loop').get(u'body'))
            var.get(u'path').callprop(u'ensureBlock')
            if var.get(u'declar'):
                var.get(u'block').get(u'body').callprop(u'push', var.get(u'declar'))
            var.get(u'block').put(u'body', var.get(u'block').get(u'body').callprop(u'concat', var.get(u'node').get(u'body').get(u'body')))
            var.get(u't').callprop(u'inherits', var.get(u'loop'), var.get(u'node'))
            var.get(u't').callprop(u'inherits', var.get(u'loop').get(u'body'), var.get(u'node').get(u'body'))
            if var.get(u'build').get(u'replaceParent'):
                var.get(u'path').get(u'parentPath').callprop(u'replaceWithMultiple', var.get(u'build').get(u'node'))
                var.get(u'path').callprop(u'remove')
            else:
                var.get(u'path').callprop(u'replaceWithMultiple', var.get(u'build').get(u'node'))
        PyJs_ForOfStatement_968_._set_name(u'ForOfStatement')
        PyJs_Object_967_ = Js({u'ForOfStatement':PyJs_ForOfStatement_968_})
        PyJs_Object_966_ = Js({u'visitor':PyJs_Object_967_})
        return PyJs_Object_966_
        pass
        pass
    PyJs_anonymous_962_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_962_)
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_961_._set_name(u'anonymous')
PyJs_Object_973_ = Js({})
@Js
def PyJs_anonymous_974_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'_babelHelperFunctionName', u'module', u'_babelHelperFunctionName2', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_981_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_981_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_975_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        @Js
        def PyJs_exit_979_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_979_, u'arguments':arguments}, var)
            var.registers([u'path', u'replacement'])
            if (PyJsStrictNeq(var.get(u'path').get(u'key'),Js(u'value')) and var.get(u'path').get(u'parentPath').callprop(u'isObjectProperty').neg()):
                var.put(u'replacement', PyJsComma(Js(0.0),var.get(u'_babelHelperFunctionName2').get(u'default'))(var.get(u'path')))
                if var.get(u'replacement'):
                    var.get(u'path').callprop(u'replaceWith', var.get(u'replacement'))
        PyJs_exit_979_._set_name(u'exit')
        PyJs_Object_978_ = Js({u'exit':PyJs_exit_979_})
        @Js
        def PyJs_ObjectProperty_980_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'ObjectProperty':PyJs_ObjectProperty_980_, u'arguments':arguments}, var)
            var.registers([u'newNode', u'value', u'path'])
            var.put(u'value', var.get(u'path').callprop(u'get', Js(u'value')))
            if var.get(u'value').callprop(u'isFunction'):
                var.put(u'newNode', PyJsComma(Js(0.0),var.get(u'_babelHelperFunctionName2').get(u'default'))(var.get(u'value')))
                if var.get(u'newNode'):
                    var.get(u'value').callprop(u'replaceWith', var.get(u'newNode'))
        PyJs_ObjectProperty_980_._set_name(u'ObjectProperty')
        PyJs_Object_977_ = Js({u'ArrowFunctionExpression|FunctionExpression':PyJs_Object_978_,u'ObjectProperty':PyJs_ObjectProperty_980_})
        PyJs_Object_976_ = Js({u'visitor':PyJs_Object_977_})
        return PyJs_Object_976_
    PyJs_anonymous_975_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_975_)
    var.put(u'_babelHelperFunctionName', var.get(u'require')(Js(u'babel-helper-function-name')))
    var.put(u'_babelHelperFunctionName2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperFunctionName')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_974_._set_name(u'anonymous')
PyJs_Object_982_ = Js({u'babel-helper-function-name':Js(49.0)})
@Js
def PyJs_anonymous_983_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'require', u'exports', u'module'])
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_984_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        @Js
        def PyJs_NumericLiteral_987_(_ref, this, arguments, var=var):
            var = Scope({u'this':this, u'NumericLiteral':PyJs_NumericLiteral_987_, u'_ref':_ref, u'arguments':arguments}, var)
            var.registers([u'node', u'_ref'])
            var.put(u'node', var.get(u'_ref').get(u'node'))
            if (var.get(u'node').get(u'extra') and JsRegExp(u'/^0[ob]/i').callprop(u'test', var.get(u'node').get(u'extra').get(u'raw'))):
                var.get(u'node').put(u'extra', var.get(u'undefined'))
        PyJs_NumericLiteral_987_._set_name(u'NumericLiteral')
        @Js
        def PyJs_StringLiteral_988_(_ref2, this, arguments, var=var):
            var = Scope({u'this':this, u'StringLiteral':PyJs_StringLiteral_988_, u'_ref2':_ref2, u'arguments':arguments}, var)
            var.registers([u'node', u'_ref2'])
            var.put(u'node', var.get(u'_ref2').get(u'node'))
            if (var.get(u'node').get(u'extra') and JsRegExp(u'/\\\\[u]/gi').callprop(u'test', var.get(u'node').get(u'extra').get(u'raw'))):
                var.get(u'node').put(u'extra', var.get(u'undefined'))
        PyJs_StringLiteral_988_._set_name(u'StringLiteral')
        PyJs_Object_986_ = Js({u'NumericLiteral':PyJs_NumericLiteral_987_,u'StringLiteral':PyJs_StringLiteral_988_})
        PyJs_Object_985_ = Js({u'visitor':PyJs_Object_986_})
        return PyJs_Object_985_
    PyJs_anonymous_984_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_984_)
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_983_._set_name(u'anonymous')
PyJs_Object_989_ = Js({})
@Js
def PyJs_anonymous_990_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_create', u'buildDefine', u'exports', u'require', u'_babelTemplate', u'module', u'_create2', u'_babelTemplate2', u'buildFactory', u'_interopRequireDefault'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1007_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1007_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
    var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
    @Js
    def PyJs_anonymous_991_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'isValidRequireCall', u'amdVisitor', u'_ref', u't'])
        @Js
        def PyJsHoisted_isValidRequireCall_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
            var.registers([u'path', u'args', u'arg'])
            if var.get(u'path').callprop(u'isCallExpression').neg():
                return Js(False)
            PyJs_Object_992_ = Js({u'name':Js(u'require')})
            if var.get(u'path').callprop(u'get', Js(u'callee')).callprop(u'isIdentifier', PyJs_Object_992_).neg():
                return Js(False)
            if var.get(u'path').get(u'scope').callprop(u'getBinding', Js(u'require')):
                return Js(False)
            var.put(u'args', var.get(u'path').callprop(u'get', Js(u'arguments')))
            if PyJsStrictNeq(var.get(u'args').get(u'length'),Js(1.0)):
                return Js(False)
            var.put(u'arg', var.get(u'args').get(u'0'))
            if var.get(u'arg').callprop(u'isStringLiteral').neg():
                return Js(False)
            return var.get(u'true')
        PyJsHoisted_isValidRequireCall_.func_name = u'isValidRequireCall'
        var.put(u'isValidRequireCall', PyJsHoisted_isValidRequireCall_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        pass
        @Js
        def PyJs_ReferencedIdentifier_994_(_ref2, this, arguments, var=var):
            var = Scope({u'this':this, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_994_, u'_ref2':_ref2, u'arguments':arguments}, var)
            var.registers([u'node', u'scope', u'_ref2'])
            var.put(u'node', var.get(u'_ref2').get(u'node'))
            var.put(u'scope', var.get(u'_ref2').get(u'scope'))
            if (PyJsStrictEq(var.get(u'node').get(u'name'),Js(u'exports')) and var.get(u'scope').callprop(u'getBinding', Js(u'exports')).neg()):
                var.get(u"this").put(u'hasExports', var.get(u'true'))
            if (PyJsStrictEq(var.get(u'node').get(u'name'),Js(u'module')) and var.get(u'scope').callprop(u'getBinding', Js(u'module')).neg()):
                var.get(u"this").put(u'hasModule', var.get(u'true'))
        PyJs_ReferencedIdentifier_994_._set_name(u'ReferencedIdentifier')
        @Js
        def PyJs_CallExpression_995_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'CallExpression':PyJs_CallExpression_995_}, var)
            var.registers([u'path'])
            if var.get(u'isValidRequireCall')(var.get(u'path')).neg():
                return var.get('undefined')
            var.get(u"this").get(u'bareSources').callprop(u'push', var.get(u'path').get(u'node').get(u'arguments').get(u'0'))
            var.get(u'path').callprop(u'remove')
        PyJs_CallExpression_995_._set_name(u'CallExpression')
        @Js
        def PyJs_VariableDeclarator_996_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'VariableDeclarator':PyJs_VariableDeclarator_996_}, var)
            var.registers([u'source', u'init', u'id', u'path'])
            var.put(u'id', var.get(u'path').callprop(u'get', Js(u'id')))
            if var.get(u'id').callprop(u'isIdentifier').neg():
                return var.get('undefined')
            var.put(u'init', var.get(u'path').callprop(u'get', Js(u'init')))
            if var.get(u'isValidRequireCall')(var.get(u'init')).neg():
                return var.get('undefined')
            var.put(u'source', var.get(u'init').get(u'node').get(u'arguments').get(u'0'))
            var.get(u"this").get(u'sourceNames').put(var.get(u'source').get(u'value'), var.get(u'true'))
            var.get(u"this").get(u'sources').callprop(u'push', Js([var.get(u'id').get(u'node'), var.get(u'source')]))
            var.get(u'path').callprop(u'remove')
        PyJs_VariableDeclarator_996_._set_name(u'VariableDeclarator')
        PyJs_Object_993_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_994_,u'CallExpression':PyJs_CallExpression_995_,u'VariableDeclarator':PyJs_VariableDeclarator_996_})
        var.put(u'amdVisitor', PyJs_Object_993_)
        @Js
        def PyJs_pre_998_(this, arguments, var=var):
            var = Scope({u'this':this, u'pre':PyJs_pre_998_, u'arguments':arguments}, var)
            var.registers([])
            var.get(u"this").put(u'sources', Js([]))
            var.get(u"this").put(u'sourceNames', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.get(u"this").put(u'bareSources', Js([]))
            var.get(u"this").put(u'hasExports', Js(False))
            var.get(u"this").put(u'hasModule', Js(False))
        PyJs_pre_998_._set_name(u'pre')
        @Js
        def PyJs_exit_1001_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_1001_, u'arguments':arguments}, var)
            var.registers([u'node', u'moduleName', u'_this', u'factory', u'sources', u'params', u'path'])
            var.put(u'_this', var.get(u"this"))
            if var.get(u"this").get(u'ran'):
                return var.get('undefined')
            var.get(u"this").put(u'ran', var.get(u'true'))
            var.get(u'path').callprop(u'traverse', var.get(u'amdVisitor'), var.get(u"this"))
            @Js
            def PyJs_anonymous_1002_(source, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'arguments':arguments}, var)
                var.registers([u'source'])
                return var.get(u'source').get(u'0')
            PyJs_anonymous_1002_._set_name(u'anonymous')
            var.put(u'params', var.get(u"this").get(u'sources').callprop(u'map', PyJs_anonymous_1002_))
            @Js
            def PyJs_anonymous_1003_(source, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'arguments':arguments}, var)
                var.registers([u'source'])
                return var.get(u'source').get(u'1')
            PyJs_anonymous_1003_._set_name(u'anonymous')
            var.put(u'sources', var.get(u"this").get(u'sources').callprop(u'map', PyJs_anonymous_1003_))
            @Js
            def PyJs_anonymous_1004_(str, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'str':str}, var)
                var.registers([u'str'])
                return var.get(u'_this').get(u'sourceNames').get(var.get(u'str').get(u'value')).neg()
            PyJs_anonymous_1004_._set_name(u'anonymous')
            var.put(u'sources', var.get(u'sources').callprop(u'concat', var.get(u"this").get(u'bareSources').callprop(u'filter', PyJs_anonymous_1004_)))
            var.put(u'moduleName', var.get(u"this").callprop(u'getModuleName'))
            if var.get(u'moduleName'):
                var.put(u'moduleName', var.get(u't').callprop(u'stringLiteral', var.get(u'moduleName')))
            if var.get(u"this").get(u'hasExports'):
                var.get(u'sources').callprop(u'unshift', var.get(u't').callprop(u'stringLiteral', Js(u'exports')))
                var.get(u'params').callprop(u'unshift', var.get(u't').callprop(u'identifier', Js(u'exports')))
            if var.get(u"this").get(u'hasModule'):
                var.get(u'sources').callprop(u'unshift', var.get(u't').callprop(u'stringLiteral', Js(u'module')))
                var.get(u'params').callprop(u'unshift', var.get(u't').callprop(u'identifier', Js(u'module')))
            var.put(u'node', var.get(u'path').get(u'node'))
            PyJs_Object_1005_ = Js({u'PARAMS':var.get(u'params'),u'BODY':var.get(u'node').get(u'body')})
            var.put(u'factory', var.get(u'buildFactory')(PyJs_Object_1005_))
            var.get(u'factory').get(u'expression').get(u'body').put(u'directives', var.get(u'node').get(u'directives'))
            var.get(u'node').put(u'directives', Js([]))
            PyJs_Object_1006_ = Js({u'MODULE_NAME':var.get(u'moduleName'),u'SOURCES':var.get(u'sources'),u'FACTORY':var.get(u'factory')})
            var.get(u'node').put(u'body', Js([var.get(u'buildDefine')(PyJs_Object_1006_)]))
        PyJs_exit_1001_._set_name(u'exit')
        PyJs_Object_1000_ = Js({u'exit':PyJs_exit_1001_})
        PyJs_Object_999_ = Js({u'Program':PyJs_Object_1000_})
        PyJs_Object_997_ = Js({u'inherits':var.get(u'require')(Js(u'babel-plugin-transform-es2015-modules-commonjs')),u'pre':PyJs_pre_998_,u'visitor':PyJs_Object_999_})
        return PyJs_Object_997_
    PyJs_anonymous_991_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_991_)
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    pass
    var.put(u'buildDefine', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  define(MODULE_NAME, [SOURCES], FACTORY);\n')))
    var.put(u'buildFactory', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (PARAMS) {\n    BODY;\n  })\n')))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_990_._set_name(u'anonymous')
PyJs_Object_1008_ = Js({u'babel-plugin-transform-es2015-modules-commonjs':Js(73.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-template':Js(221.0)})
@Js
def PyJs_anonymous_1009_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_symbol2', u'_babelTemplate', u'module', u'buildLooseExportsModuleDeclaration', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'buildExportAll', u'_create2', u'_keys', u'buildExportsAssignment', u'THIS_BREAK_KEYS', u'_create', u'exports', u'_interopRequireWildcard', u'_babelTypes', u'buildRequire', u'buildExportsModuleDeclaration', u'_symbol', u'_path2', u'buildExportsFrom', u'_keys2', u'_babelTemplate2', u't', u'require'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1028_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1028_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_1027_ = Js({})
            var.put(u'newObj', PyJs_Object_1027_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_keys', var.get(u'require')(Js(u'babel-runtime/core-js/object/keys')))
    var.put(u'_keys2', var.get(u'_interopRequireDefault')(var.get(u'_keys')))
    var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
    var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    @Js
    def PyJs_anonymous_1010_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([u'reassignmentVisitor', u'REASSIGN_REMAP_SKIP'])
        var.put(u'REASSIGN_REMAP_SKIP', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))())
        @Js
        def PyJs_ReferencedIdentifier_1012_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1012_, u'arguments':arguments}, var)
            var.registers([u'property', u'remap', u'object', u'name', u'path'])
            var.put(u'name', var.get(u'path').get(u'node').get(u'name'))
            var.put(u'remap', var.get(u"this").get(u'remaps').get(var.get(u'name')))
            if var.get(u'remap').neg():
                return var.get('undefined')
            if PyJsStrictNeq(var.get(u"this").get(u'scope').callprop(u'getBinding', var.get(u'name')),var.get(u'path').get(u'scope').callprop(u'getBinding', var.get(u'name'))):
                return var.get('undefined')
            PyJs_Object_1013_ = Js({u'callee':var.get(u'path').get(u'node')})
            if var.get(u'path').get(u'parentPath').callprop(u'isCallExpression', PyJs_Object_1013_):
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'sequenceExpression', Js([var.get(u't').callprop(u'numericLiteral', Js(0.0)), var.get(u'remap')])))
            else:
                if (var.get(u'path').callprop(u'isJSXIdentifier') and var.get(u't').callprop(u'isMemberExpression', var.get(u'remap'))):
                    var.put(u'object', var.get(u'remap').get(u'object'))
                    var.put(u'property', var.get(u'remap').get(u'property'))
                    var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'JSXMemberExpression', var.get(u't').callprop(u'JSXIdentifier', var.get(u'object').get(u'name')), var.get(u't').callprop(u'JSXIdentifier', var.get(u'property').get(u'name'))))
                else:
                    var.get(u'path').callprop(u'replaceWith', var.get(u'remap'))
            var.get(u"this").callprop(u'requeueInParent', var.get(u'path'))
        PyJs_ReferencedIdentifier_1012_._set_name(u'ReferencedIdentifier')
        @Js
        def PyJs_AssignmentExpression_1014_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'AssignmentExpression':PyJs_AssignmentExpression_1014_}, var)
            var.registers([u'node', u'_isArray', u'_iterator', u'name', u'exports', u'reid', u'_i', u'path', u'_ref', u'left'])
            var.put(u'node', var.get(u'path').get(u'node'))
            if var.get(u'node').get(var.get(u'REASSIGN_REMAP_SKIP')):
                return var.get('undefined')
            var.put(u'left', var.get(u'path').callprop(u'get', Js(u'left')))
            if var.get(u'left').callprop(u'isIdentifier').neg():
                return var.get('undefined')
            var.put(u'name', var.get(u'left').get(u'node').get(u'name'))
            var.put(u'exports', var.get(u"this").get(u'exports').get(var.get(u'name')))
            if var.get(u'exports').neg():
                return var.get('undefined')
            if PyJsStrictNeq(var.get(u"this").get(u'scope').callprop(u'getBinding', var.get(u'name')),var.get(u'path').get(u'scope').callprop(u'getBinding', var.get(u'name'))):
                return var.get('undefined')
            var.get(u'node').put(var.get(u'REASSIGN_REMAP_SKIP'), var.get(u'true'))
            #for JS loop
            var.put(u'_iterator', var.get(u'exports'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'reid', var.get(u'_ref'))
                var.put(u'node', var.get(u'buildExportsAssignment')(var.get(u'reid'), var.get(u'node')).get(u'expression'))
            
            var.get(u'path').callprop(u'replaceWith', var.get(u'node'))
            var.get(u"this").callprop(u'requeueInParent', var.get(u'path'))
        PyJs_AssignmentExpression_1014_._set_name(u'AssignmentExpression')
        @Js
        def PyJs_UpdateExpression_1015_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'UpdateExpression':PyJs_UpdateExpression_1015_}, var)
            var.registers([u'node', u'exports', u'name', u'arg', u'operator', u'path', u'nodes'])
            var.put(u'arg', var.get(u'path').callprop(u'get', Js(u'argument')))
            if var.get(u'arg').callprop(u'isIdentifier').neg():
                return var.get('undefined')
            var.put(u'name', var.get(u'arg').get(u'node').get(u'name'))
            var.put(u'exports', var.get(u"this").get(u'exports').get(var.get(u'name')))
            if var.get(u'exports').neg():
                return var.get('undefined')
            if PyJsStrictNeq(var.get(u"this").get(u'scope').callprop(u'getBinding', var.get(u'name')),var.get(u'path').get(u'scope').callprop(u'getBinding', var.get(u'name'))):
                return var.get('undefined')
            var.put(u'node', var.get(u't').callprop(u'assignmentExpression', (var.get(u'path').get(u'node').get(u'operator').get(u'0')+Js(u'=')), var.get(u'arg').get(u'node'), var.get(u't').callprop(u'numericLiteral', Js(1.0))))
            if ((var.get(u'path').get(u'parentPath').callprop(u'isExpressionStatement') and var.get(u'path').callprop(u'isCompletionRecord').neg()) or var.get(u'path').get(u'node').get(u'prefix')):
                var.get(u'path').callprop(u'replaceWith', var.get(u'node'))
                var.get(u"this").callprop(u'requeueInParent', var.get(u'path'))
                return var.get('undefined')
            var.put(u'nodes', Js([]))
            var.get(u'nodes').callprop(u'push', var.get(u'node'))
            var.put(u'operator', PyJsComma(Js(0.0), Js(None)))
            if PyJsStrictEq(var.get(u'path').get(u'node').get(u'operator'),Js(u'--')):
                var.put(u'operator', Js(u'+'))
            else:
                var.put(u'operator', Js(u'-'))
            var.get(u'nodes').callprop(u'push', var.get(u't').callprop(u'binaryExpression', var.get(u'operator'), var.get(u'arg').get(u'node'), var.get(u't').callprop(u'numericLiteral', Js(1.0))))
            var.get(u'path').callprop(u'replaceWithMultiple', var.get(u't').callprop(u'sequenceExpression', var.get(u'nodes')))
        PyJs_UpdateExpression_1015_._set_name(u'UpdateExpression')
        PyJs_Object_1011_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1012_,u'AssignmentExpression':PyJs_AssignmentExpression_1014_,u'UpdateExpression':PyJs_UpdateExpression_1015_})
        var.put(u'reassignmentVisitor', PyJs_Object_1011_)
        @Js
        def PyJs_ThisExpression_1018_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'ThisExpression':PyJs_ThisExpression_1018_, u'arguments':arguments}, var)
            var.registers([u'path', u'state'])
            if var.get(u"this").get(u'ranCommonJS'):
                return var.get('undefined')
            @Js
            def PyJs_anonymous_1019_(path, this, arguments, var=var):
                var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
                var.registers([u'path'])
                return (var.get(u'path').callprop(u'is', Js(u'shadow')).neg() and (var.get(u'THIS_BREAK_KEYS').callprop(u'indexOf', var.get(u'path').get(u'type'))>=Js(0.0)))
            PyJs_anonymous_1019_._set_name(u'anonymous')
            if (PyJsStrictNeq(var.get(u'state').get(u'opts').get(u'allowTopLevelThis'),var.get(u'true')) and var.get(u'path').callprop(u'findParent', PyJs_anonymous_1019_).neg()):
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'identifier', Js(u'undefined')))
        PyJs_ThisExpression_1018_._set_name(u'ThisExpression')
        @Js
        def PyJs_exit_1021_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_1021_, u'arguments':arguments}, var)
            var.registers([u'decl', u'addRequire', u'_isArray5', u'_isArray4', u'_isArray3', u'_isArray2', u'_isArray6', u'imports', u'_specifiers', u'ids', u'_specifier4', u'_isArray7', u'hoistedExportsNode', u'_declaration', u'_specifier2', u'_specifier3', u'specifier', u'importsEntry', u'_specifier', u'_importsEntry$specifi', u'uid', u'_iterator6', u'i', u'_source', u'_i7', u'_i6', u'_i5', u'_i4', u'hasImports', u'_i2', u'id', u'strict', u'init', u'exportNode', u'scope', u'nodes', u'defNode', u'ref', u'addTo', u'body', u'exports', u'node', u'_i3', u'requireNode', u'nonHoistedExportNames', u'_varDecl', u'varDecl', u'declarators', u'topNodes', u'buildTemplate', u'key', u'declaration', u'_id4', u'path', u'name', u'_id2', u'_id3', u'remaps', u'specifiers', u'_id', u'_imports$source', u'hasExports', u'_defNode', u'_ref6', u'_ref5', u'_ref4', u'_ref3', u'_ref2', u'maxBlockHoist', u'_ref7', u'declar', u'source', u'wildcard', u'target', u'_iterator5', u'_iterator4', u'_iterator7', u'_iterator2', u'requires', u'_iterator3', u'_path'])
            @Js
            def PyJsHoisted_addRequire_(source, blockHoist, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'blockHoist':blockHoist, u'arguments':arguments}, var)
                var.registers([u'cached', u'varDecl', u'blockHoist', u'ref', u'source'])
                var.put(u'cached', var.get(u'requires').get(var.get(u'source')))
                if var.get(u'cached'):
                    return var.get(u'cached')
                var.put(u'ref', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', PyJsComma(Js(0.0),var.get(u'_path2').get(u'basename'))(var.get(u'source'), PyJsComma(Js(0.0),var.get(u'_path2').get(u'extname'))(var.get(u'source')))))
                var.put(u'varDecl', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'ref'), var.get(u'buildRequire')(var.get(u't').callprop(u'stringLiteral', var.get(u'source'))).get(u'expression'))])))
                if var.get(u'imports').get(var.get(u'source')):
                    var.get(u'varDecl').put(u'loc', var.get(u'imports').get(var.get(u'source')).get(u'loc'))
                if (PyJsStrictEq(var.get(u'blockHoist',throw=False).typeof(),Js(u'number')) and (var.get(u'blockHoist')>Js(0.0))):
                    var.get(u'varDecl').put(u'_blockHoist', var.get(u'blockHoist'))
                var.get(u'topNodes').callprop(u'push', var.get(u'varDecl'))
                return var.get(u'requires').put(var.get(u'source'), var.get(u'ref'))
            PyJsHoisted_addRequire_.func_name = u'addRequire'
            var.put(u'addRequire', PyJsHoisted_addRequire_)
            @Js
            def PyJsHoisted_addTo_(obj, key, arr, this, arguments, var=var):
                var = Scope({u'this':this, u'arr':arr, u'obj':obj, u'arguments':arguments, u'key':key}, var)
                var.registers([u'arr', u'obj', u'key', u'existing'])
                var.put(u'existing', (var.get(u'obj').get(var.get(u'key')) or Js([])))
                var.get(u'obj').put(var.get(u'key'), var.get(u'existing').callprop(u'concat', var.get(u'arr')))
            PyJsHoisted_addTo_.func_name = u'addTo'
            var.put(u'addTo', PyJsHoisted_addTo_)
            var.get(u"this").put(u'ranCommonJS', var.get(u'true'))
            var.put(u'strict', var.get(u"this").get(u'opts').get(u'strict').neg().neg())
            var.put(u'scope', var.get(u'path').get(u'scope'))
            var.get(u'scope').callprop(u'rename', Js(u'module'))
            var.get(u'scope').callprop(u'rename', Js(u'exports'))
            var.get(u'scope').callprop(u'rename', Js(u'require'))
            var.put(u'hasExports', Js(False))
            var.put(u'hasImports', Js(False))
            var.put(u'body', var.get(u'path').callprop(u'get', Js(u'body')))
            var.put(u'imports', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'exports', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'nonHoistedExportNames', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'topNodes', Js([]))
            var.put(u'remaps', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'requires', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            pass
            pass
            #for JS loop
            var.put(u'_iterator2', var.get(u'body'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i2').get(u'value'))
                var.put(u'_path', var.get(u'_ref2'))
                if var.get(u'_path').callprop(u'isExportDeclaration'):
                    var.put(u'hasExports', var.get(u'true'))
                    var.put(u'specifiers', Js([]).callprop(u'concat', var.get(u'_path').callprop(u'get', Js(u'declaration')), var.get(u'_path').callprop(u'get', Js(u'specifiers'))))
                    #for JS loop
                    var.put(u'_iterator4', var.get(u'specifiers'))
                    var.put(u'_isArray4', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator4')))
                    var.put(u'_i4', Js(0.0))
                    var.put(u'_iterator4', (var.get(u'_iterator4') if var.get(u'_isArray4') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator4'))))
                    while 1:
                        pass
                        if var.get(u'_isArray4'):
                            if (var.get(u'_i4')>=var.get(u'_iterator4').get(u'length')):
                                break
                            var.put(u'_ref4', var.get(u'_iterator4').get((var.put(u'_i4',Js(var.get(u'_i4').to_number())+Js(1))-Js(1))))
                        else:
                            var.put(u'_i4', var.get(u'_iterator4').callprop(u'next'))
                            if var.get(u'_i4').get(u'done'):
                                break
                            var.put(u'_ref4', var.get(u'_i4').get(u'value'))
                        var.put(u'_specifier2', var.get(u'_ref4'))
                        var.put(u'ids', var.get(u'_specifier2').callprop(u'getBindingIdentifiers'))
                        if var.get(u'ids').get(u'__esModule'):
                            PyJsTempException = JsToPyException(var.get(u'_specifier2').callprop(u'buildCodeFrameError', Js(u'Illegal export "__esModule"')))
                            raise PyJsTempException
                    
                if var.get(u'_path').callprop(u'isImportDeclaration'):
                    pass
                    var.put(u'hasImports', var.get(u'true'))
                    var.put(u'key', var.get(u'_path').get(u'node').get(u'source').get(u'value'))
                    PyJs_Object_1022_ = Js({u'specifiers':Js([]),u'maxBlockHoist':Js(0.0),u'loc':var.get(u'_path').get(u'node').get(u'loc')})
                    var.put(u'importsEntry', (var.get(u'imports').get(var.get(u'key')) or PyJs_Object_1022_))
                    var.put(u'_importsEntry$specifi', var.get(u'importsEntry').get(u'specifiers')).get(u'push').callprop(u'apply', var.get(u'_importsEntry$specifi'), var.get(u'_path').get(u'node').get(u'specifiers'))
                    if PyJsStrictEq(var.get(u'_path').get(u'node').get(u'_blockHoist').typeof(),Js(u'number')):
                        var.get(u'importsEntry').put(u'maxBlockHoist', var.get(u'Math').callprop(u'max', var.get(u'_path').get(u'node').get(u'_blockHoist'), var.get(u'importsEntry').get(u'maxBlockHoist')))
                    var.get(u'imports').put(var.get(u'key'), var.get(u'importsEntry'))
                    var.get(u'_path').callprop(u'remove')
                else:
                    if var.get(u'_path').callprop(u'isExportDefaultDeclaration'):
                        var.put(u'declaration', var.get(u'_path').callprop(u'get', Js(u'declaration')))
                        if var.get(u'declaration').callprop(u'isFunctionDeclaration'):
                            var.put(u'id', var.get(u'declaration').get(u'node').get(u'id'))
                            var.put(u'defNode', var.get(u't').callprop(u'identifier', Js(u'default')))
                            if var.get(u'id'):
                                var.get(u'addTo')(var.get(u'exports'), var.get(u'id').get(u'name'), var.get(u'defNode'))
                                var.get(u'topNodes').callprop(u'push', var.get(u'buildExportsAssignment')(var.get(u'defNode'), var.get(u'id')))
                                var.get(u'_path').callprop(u'replaceWith', var.get(u'declaration').get(u'node'))
                            else:
                                var.get(u'topNodes').callprop(u'push', var.get(u'buildExportsAssignment')(var.get(u'defNode'), var.get(u't').callprop(u'toExpression', var.get(u'declaration').get(u'node'))))
                                var.get(u'_path').callprop(u'remove')
                        else:
                            if var.get(u'declaration').callprop(u'isClassDeclaration'):
                                var.put(u'_id', var.get(u'declaration').get(u'node').get(u'id'))
                                var.put(u'_defNode', var.get(u't').callprop(u'identifier', Js(u'default')))
                                if var.get(u'_id'):
                                    var.get(u'addTo')(var.get(u'exports'), var.get(u'_id').get(u'name'), var.get(u'_defNode'))
                                    var.get(u'_path').callprop(u'replaceWithMultiple', Js([var.get(u'declaration').get(u'node'), var.get(u'buildExportsAssignment')(var.get(u'_defNode'), var.get(u'_id'))]))
                                else:
                                    var.get(u'_path').callprop(u'replaceWith', var.get(u'buildExportsAssignment')(var.get(u'_defNode'), var.get(u't').callprop(u'toExpression', var.get(u'declaration').get(u'node'))))
                                    var.get(u'_path').get(u'parentPath').callprop(u'requeue', var.get(u'_path').callprop(u'get', Js(u'expression.left')))
                            else:
                                var.get(u'_path').callprop(u'replaceWith', var.get(u'buildExportsAssignment')(var.get(u't').callprop(u'identifier', Js(u'default')), var.get(u'declaration').get(u'node')))
                                var.get(u'_path').get(u'parentPath').callprop(u'requeue', var.get(u'_path').callprop(u'get', Js(u'expression.left')))
                    else:
                        if var.get(u'_path').callprop(u'isExportNamedDeclaration'):
                            var.put(u'_declaration', var.get(u'_path').callprop(u'get', Js(u'declaration')))
                            if var.get(u'_declaration').get(u'node'):
                                if var.get(u'_declaration').callprop(u'isFunctionDeclaration'):
                                    var.put(u'_id2', var.get(u'_declaration').get(u'node').get(u'id'))
                                    var.get(u'addTo')(var.get(u'exports'), var.get(u'_id2').get(u'name'), var.get(u'_id2'))
                                    var.get(u'topNodes').callprop(u'push', var.get(u'buildExportsAssignment')(var.get(u'_id2'), var.get(u'_id2')))
                                    var.get(u'_path').callprop(u'replaceWith', var.get(u'_declaration').get(u'node'))
                                else:
                                    if var.get(u'_declaration').callprop(u'isClassDeclaration'):
                                        var.put(u'_id3', var.get(u'_declaration').get(u'node').get(u'id'))
                                        var.get(u'addTo')(var.get(u'exports'), var.get(u'_id3').get(u'name'), var.get(u'_id3'))
                                        var.get(u'_path').callprop(u'replaceWithMultiple', Js([var.get(u'_declaration').get(u'node'), var.get(u'buildExportsAssignment')(var.get(u'_id3'), var.get(u'_id3'))]))
                                        var.get(u'nonHoistedExportNames').put(var.get(u'_id3').get(u'name'), var.get(u'true'))
                                    else:
                                        if var.get(u'_declaration').callprop(u'isVariableDeclaration'):
                                            var.put(u'declarators', var.get(u'_declaration').callprop(u'get', Js(u'declarations')))
                                            #for JS loop
                                            var.put(u'_iterator5', var.get(u'declarators'))
                                            var.put(u'_isArray5', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator5')))
                                            var.put(u'_i5', Js(0.0))
                                            var.put(u'_iterator5', (var.get(u'_iterator5') if var.get(u'_isArray5') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator5'))))
                                            while 1:
                                                pass
                                                if var.get(u'_isArray5'):
                                                    if (var.get(u'_i5')>=var.get(u'_iterator5').get(u'length')):
                                                        break
                                                    var.put(u'_ref5', var.get(u'_iterator5').get((var.put(u'_i5',Js(var.get(u'_i5').to_number())+Js(1))-Js(1))))
                                                else:
                                                    var.put(u'_i5', var.get(u'_iterator5').callprop(u'next'))
                                                    if var.get(u'_i5').get(u'done'):
                                                        break
                                                    var.put(u'_ref5', var.get(u'_i5').get(u'value'))
                                                var.put(u'decl', var.get(u'_ref5'))
                                                var.put(u'_id4', var.get(u'decl').callprop(u'get', Js(u'id')))
                                                var.put(u'init', var.get(u'decl').callprop(u'get', Js(u'init')))
                                                if var.get(u'init').get(u'node').neg():
                                                    var.get(u'init').callprop(u'replaceWith', var.get(u't').callprop(u'identifier', Js(u'undefined')))
                                                if var.get(u'_id4').callprop(u'isIdentifier'):
                                                    var.get(u'addTo')(var.get(u'exports'), var.get(u'_id4').get(u'node').get(u'name'), var.get(u'_id4').get(u'node'))
                                                    var.get(u'init').callprop(u'replaceWith', var.get(u'buildExportsAssignment')(var.get(u'_id4').get(u'node'), var.get(u'init').get(u'node')).get(u'expression'))
                                                    var.get(u'nonHoistedExportNames').put(var.get(u'_id4').get(u'node').get(u'name'), var.get(u'true'))
                                                else:
                                                    pass
                                            
                                            var.get(u'_path').callprop(u'replaceWith', var.get(u'_declaration').get(u'node'))
                                continue
                            var.put(u'_specifiers', var.get(u'_path').callprop(u'get', Js(u'specifiers')))
                            var.put(u'nodes', Js([]))
                            var.put(u'_source', var.get(u'_path').get(u'node').get(u'source'))
                            if var.get(u'_source'):
                                var.put(u'ref', var.get(u'addRequire')(var.get(u'_source').get(u'value'), var.get(u'_path').get(u'node').get(u'_blockHoist')))
                                #for JS loop
                                var.put(u'_iterator6', var.get(u'_specifiers'))
                                var.put(u'_isArray6', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator6')))
                                var.put(u'_i6', Js(0.0))
                                var.put(u'_iterator6', (var.get(u'_iterator6') if var.get(u'_isArray6') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator6'))))
                                while 1:
                                    pass
                                    if var.get(u'_isArray6'):
                                        if (var.get(u'_i6')>=var.get(u'_iterator6').get(u'length')):
                                            break
                                        var.put(u'_ref6', var.get(u'_iterator6').get((var.put(u'_i6',Js(var.get(u'_i6').to_number())+Js(1))-Js(1))))
                                    else:
                                        var.put(u'_i6', var.get(u'_iterator6').callprop(u'next'))
                                        if var.get(u'_i6').get(u'done'):
                                            break
                                        var.put(u'_ref6', var.get(u'_i6').get(u'value'))
                                    var.put(u'_specifier3', var.get(u'_ref6'))
                                    if var.get(u'_specifier3').callprop(u'isExportNamespaceSpecifier'):
                                        pass
                                    else:
                                        if var.get(u'_specifier3').callprop(u'isExportDefaultSpecifier'):
                                            pass
                                        else:
                                            if var.get(u'_specifier3').callprop(u'isExportSpecifier'):
                                                if PyJsStrictEq(var.get(u'_specifier3').get(u'node').get(u'local').get(u'name'),Js(u'default')):
                                                    def PyJs_LONG_1023_(var=var):
                                                        return var.get(u'topNodes').callprop(u'push', var.get(u'buildExportsFrom')(var.get(u't').callprop(u'stringLiteral', var.get(u'_specifier3').get(u'node').get(u'exported').get(u'name')), var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'callExpression', var.get(u"this").callprop(u'addHelper', Js(u'interopRequireDefault')), Js([var.get(u'ref')])), var.get(u'_specifier3').get(u'node').get(u'local'))))
                                                    PyJs_LONG_1023_()
                                                else:
                                                    var.get(u'topNodes').callprop(u'push', var.get(u'buildExportsFrom')(var.get(u't').callprop(u'stringLiteral', var.get(u'_specifier3').get(u'node').get(u'exported').get(u'name')), var.get(u't').callprop(u'memberExpression', var.get(u'ref'), var.get(u'_specifier3').get(u'node').get(u'local'))))
                                                var.get(u'nonHoistedExportNames').put(var.get(u'_specifier3').get(u'node').get(u'exported').get(u'name'), var.get(u'true'))
                                
                            else:
                                #for JS loop
                                var.put(u'_iterator7', var.get(u'_specifiers'))
                                var.put(u'_isArray7', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator7')))
                                var.put(u'_i7', Js(0.0))
                                var.put(u'_iterator7', (var.get(u'_iterator7') if var.get(u'_isArray7') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator7'))))
                                while 1:
                                    pass
                                    if var.get(u'_isArray7'):
                                        if (var.get(u'_i7')>=var.get(u'_iterator7').get(u'length')):
                                            break
                                        var.put(u'_ref7', var.get(u'_iterator7').get((var.put(u'_i7',Js(var.get(u'_i7').to_number())+Js(1))-Js(1))))
                                    else:
                                        var.put(u'_i7', var.get(u'_iterator7').callprop(u'next'))
                                        if var.get(u'_i7').get(u'done'):
                                            break
                                        var.put(u'_ref7', var.get(u'_i7').get(u'value'))
                                    var.put(u'_specifier4', var.get(u'_ref7'))
                                    if var.get(u'_specifier4').callprop(u'isExportSpecifier'):
                                        var.get(u'addTo')(var.get(u'exports'), var.get(u'_specifier4').get(u'node').get(u'local').get(u'name'), var.get(u'_specifier4').get(u'node').get(u'exported'))
                                        var.get(u'nonHoistedExportNames').put(var.get(u'_specifier4').get(u'node').get(u'exported').get(u'name'), var.get(u'true'))
                                        var.get(u'nodes').callprop(u'push', var.get(u'buildExportsAssignment')(var.get(u'_specifier4').get(u'node').get(u'exported'), var.get(u'_specifier4').get(u'node').get(u'local')))
                                
                            var.get(u'_path').callprop(u'replaceWithMultiple', var.get(u'nodes'))
                        else:
                            if var.get(u'_path').callprop(u'isExportAllDeclaration'):
                                PyJs_Object_1024_ = Js({u'OBJECT':var.get(u'addRequire')(var.get(u'_path').get(u'node').get(u'source').get(u'value'), var.get(u'_path').get(u'node').get(u'_blockHoist'))})
                                var.put(u'exportNode', var.get(u'buildExportAll')(PyJs_Object_1024_))
                                var.get(u'exportNode').put(u'loc', var.get(u'_path').get(u'node').get(u'loc'))
                                var.get(u'topNodes').callprop(u'push', var.get(u'exportNode'))
                                var.get(u'_path').callprop(u'remove')
            
            for PyJsTemp in var.get(u'imports'):
                var.put(u'source', PyJsTemp)
                var.put(u'_imports$source', var.get(u'imports').get(var.get(u'source')))
                var.put(u'specifiers', var.get(u'_imports$source').get(u'specifiers'))
                var.put(u'maxBlockHoist', var.get(u'_imports$source').get(u'maxBlockHoist'))
                if var.get(u'specifiers').get(u'length'):
                    var.put(u'uid', var.get(u'addRequire')(var.get(u'source'), var.get(u'maxBlockHoist')))
                    var.put(u'wildcard', PyJsComma(Js(0.0), Js(None)))
                    #for JS loop
                    var.put(u'i', Js(0.0))
                    while (var.get(u'i')<var.get(u'specifiers').get(u'length')):
                        try:
                            var.put(u'specifier', var.get(u'specifiers').get(var.get(u'i')))
                            if var.get(u't').callprop(u'isImportNamespaceSpecifier', var.get(u'specifier')):
                                if var.get(u'strict'):
                                    var.get(u'remaps').put(var.get(u'specifier').get(u'local').get(u'name'), var.get(u'uid'))
                                else:
                                    var.put(u'varDecl', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'specifier').get(u'local'), var.get(u't').callprop(u'callExpression', var.get(u"this").callprop(u'addHelper', Js(u'interopRequireWildcard')), Js([var.get(u'uid')])))])))
                                    if (var.get(u'maxBlockHoist')>Js(0.0)):
                                        var.get(u'varDecl').put(u'_blockHoist', var.get(u'maxBlockHoist'))
                                    var.get(u'topNodes').callprop(u'push', var.get(u'varDecl'))
                                var.put(u'wildcard', var.get(u'specifier').get(u'local'))
                            else:
                                if var.get(u't').callprop(u'isImportDefaultSpecifier', var.get(u'specifier')):
                                    var.get(u'specifiers').put(var.get(u'i'), var.get(u't').callprop(u'importSpecifier', var.get(u'specifier').get(u'local'), var.get(u't').callprop(u'identifier', Js(u'default'))))
                        finally:
                                (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
                    #for JS loop
                    var.put(u'_iterator3', var.get(u'specifiers'))
                    var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
                    var.put(u'_i3', Js(0.0))
                    var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
                    while 1:
                        pass
                        if var.get(u'_isArray3'):
                            if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                                break
                            var.put(u'_ref3', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                        else:
                            var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                            if var.get(u'_i3').get(u'done'):
                                break
                            var.put(u'_ref3', var.get(u'_i3').get(u'value'))
                        var.put(u'_specifier', var.get(u'_ref3'))
                        if var.get(u't').callprop(u'isImportSpecifier', var.get(u'_specifier')):
                            var.put(u'target', var.get(u'uid'))
                            if PyJsStrictEq(var.get(u'_specifier').get(u'imported').get(u'name'),Js(u'default')):
                                if var.get(u'wildcard'):
                                    var.put(u'target', var.get(u'wildcard'))
                                else:
                                    var.put(u'target', var.put(u'wildcard', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', var.get(u'uid').get(u'name'))))
                                    var.put(u'_varDecl', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'target'), var.get(u't').callprop(u'callExpression', var.get(u"this").callprop(u'addHelper', Js(u'interopRequireDefault')), Js([var.get(u'uid')])))])))
                                    if (var.get(u'maxBlockHoist')>Js(0.0)):
                                        var.get(u'_varDecl').put(u'_blockHoist', var.get(u'maxBlockHoist'))
                                    var.get(u'topNodes').callprop(u'push', var.get(u'_varDecl'))
                            var.get(u'remaps').put(var.get(u'_specifier').get(u'local').get(u'name'), var.get(u't').callprop(u'memberExpression', var.get(u'target'), var.get(u't').callprop(u'cloneWithoutLoc', var.get(u'_specifier').get(u'imported'))))
                    
                else:
                    var.put(u'requireNode', var.get(u'buildRequire')(var.get(u't').callprop(u'stringLiteral', var.get(u'source'))))
                    var.get(u'requireNode').put(u'loc', var.get(u'imports').get(var.get(u'source')).get(u'loc'))
                    var.get(u'topNodes').callprop(u'push', var.get(u'requireNode'))
            if (var.get(u'hasImports') and PyJsComma(Js(0.0),var.get(u'_keys2').get(u'default'))(var.get(u'nonHoistedExportNames')).get(u'length')):
                var.put(u'hoistedExportsNode', var.get(u't').callprop(u'identifier', Js(u'undefined')))
                for PyJsTemp in var.get(u'nonHoistedExportNames'):
                    var.put(u'name', PyJsTemp)
                    var.put(u'hoistedExportsNode', var.get(u'buildExportsAssignment')(var.get(u't').callprop(u'identifier', var.get(u'name')), var.get(u'hoistedExportsNode')).get(u'expression'))
                var.put(u'node', var.get(u't').callprop(u'expressionStatement', var.get(u'hoistedExportsNode')))
                var.get(u'node').put(u'_blockHoist', Js(3.0))
                var.get(u'topNodes').callprop(u'unshift', var.get(u'node'))
            if (var.get(u'hasExports') and var.get(u'strict').neg()):
                var.put(u'buildTemplate', var.get(u'buildExportsModuleDeclaration'))
                if var.get(u"this").get(u'opts').get(u'loose'):
                    var.put(u'buildTemplate', var.get(u'buildLooseExportsModuleDeclaration'))
                var.put(u'declar', var.get(u'buildTemplate')())
                var.get(u'declar').put(u'_blockHoist', Js(3.0))
                var.get(u'topNodes').callprop(u'unshift', var.get(u'declar'))
            var.get(u'path').callprop(u'unshiftContainer', Js(u'body'), var.get(u'topNodes'))
            @Js
            def PyJs_requeueInParent_1026_(newPath, this, arguments, var=var):
                var = Scope({u'newPath':newPath, u'this':this, u'arguments':arguments, u'requeueInParent':PyJs_requeueInParent_1026_}, var)
                var.registers([u'newPath'])
                return var.get(u'path').callprop(u'requeue', var.get(u'newPath'))
            PyJs_requeueInParent_1026_._set_name(u'requeueInParent')
            PyJs_Object_1025_ = Js({u'remaps':var.get(u'remaps'),u'scope':var.get(u'scope'),u'exports':var.get(u'exports'),u'requeueInParent':PyJs_requeueInParent_1026_})
            var.get(u'path').callprop(u'traverse', var.get(u'reassignmentVisitor'), PyJs_Object_1025_)
        PyJs_exit_1021_._set_name(u'exit')
        PyJs_Object_1020_ = Js({u'exit':PyJs_exit_1021_})
        PyJs_Object_1017_ = Js({u'ThisExpression':PyJs_ThisExpression_1018_,u'Program':PyJs_Object_1020_})
        PyJs_Object_1016_ = Js({u'inherits':var.get(u'require')(Js(u'babel-plugin-transform-strict-mode')),u'visitor':PyJs_Object_1017_})
        return PyJs_Object_1016_
    PyJs_anonymous_1010_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_1010_)
    var.put(u'_path2', var.get(u'require')(Js(u'path')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'buildRequire', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  require($0);\n')))
    var.put(u'buildExportsModuleDeclaration', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  Object.defineProperty(exports, "__esModule", {\n    value: true\n  });\n')))
    var.put(u'buildExportsFrom', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  Object.defineProperty(exports, $0, {\n    enumerable: true,\n    get: function () {\n      return $1;\n    }\n  });\n')))
    var.put(u'buildLooseExportsModuleDeclaration', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  exports.__esModule = true;\n')))
    var.put(u'buildExportsAssignment', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  exports.$0 = $1;\n')))
    var.put(u'buildExportAll', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  Object.keys(OBJECT).forEach(function (key) {\n    if (key === "default" || key === "__esModule") return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return OBJECT[key];\n      }\n    });\n  });\n')))
    var.put(u'THIS_BREAK_KEYS', Js([Js(u'FunctionExpression'), Js(u'FunctionDeclaration'), Js(u'ClassProperty'), Js(u'ClassMethod'), Js(u'ObjectMethod')]))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_1009_._set_name(u'anonymous')
PyJs_Object_1029_ = Js({u'babel-plugin-transform-strict-mode':Js(94.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-runtime/core-js/object/keys':Js(103.0),u'babel-runtime/core-js/symbol':Js(105.0),u'babel-template':Js(221.0),u'babel-types':Js(258.0),u'path':Js(530.0)})
@Js
def PyJs_anonymous_1030_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_create', u'exports', u'_symbol2', u'_babelHelperHoistVariables', u'buildExportAll', u'require', u'_babelTemplate', u'module', u'_create2', u'buildTemplate', u'_symbol', u'_babelHelperHoistVariables2', u'_interopRequireDefault', u'_babelTemplate2', u'_getIterator2', u'_getIterator3'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1047_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1047_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_create', var.get(u'require')(Js(u'babel-runtime/core-js/object/create')))
    var.put(u'_create2', var.get(u'_interopRequireDefault')(var.get(u'_create')))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    @Js
    def PyJs_anonymous_1031_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'reassignmentVisitor', u'IGNORE_REASSIGNMENT_SYMBOL', u'_ref', u't'])
        var.put(u't', var.get(u'_ref').get(u'types'))
        var.put(u'IGNORE_REASSIGNMENT_SYMBOL', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))())
        @Js
        def PyJs_AssignmentExpressionUpdateExpression_1033_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'AssignmentExpressionUpdateExpression':PyJs_AssignmentExpressionUpdateExpression_1033_}, var)
            var.registers([u'node', u'_isArray', u'_iterator', u'name', u'exportedNames', u'_ref2', u'exportedName', u'_i', u'arg', u'isPostUpdateExpression', u'path'])
            if var.get(u'path').get(u'node').get(var.get(u'IGNORE_REASSIGNMENT_SYMBOL')):
                return var.get('undefined')
            var.get(u'path').get(u'node').put(var.get(u'IGNORE_REASSIGNMENT_SYMBOL'), var.get(u'true'))
            var.put(u'arg', var.get(u'path').callprop(u'get', (Js(u'left') if var.get(u'path').callprop(u'isAssignmentExpression') else Js(u'argument'))))
            if var.get(u'arg').callprop(u'isIdentifier').neg():
                return var.get('undefined')
            var.put(u'name', var.get(u'arg').get(u'node').get(u'name'))
            if PyJsStrictNeq(var.get(u"this").get(u'scope').callprop(u'getBinding', var.get(u'name')),var.get(u'path').get(u'scope').callprop(u'getBinding', var.get(u'name'))):
                return var.get('undefined')
            var.put(u'exportedNames', var.get(u"this").get(u'exports').get(var.get(u'name')))
            if var.get(u'exportedNames').neg():
                return var.get('undefined')
            var.put(u'node', var.get(u'path').get(u'node'))
            var.put(u'isPostUpdateExpression', (var.get(u'path').callprop(u'isUpdateExpression') and var.get(u'node').get(u'prefix').neg()))
            if var.get(u'isPostUpdateExpression'):
                if PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'++')):
                    var.put(u'node', var.get(u't').callprop(u'binaryExpression', Js(u'+'), var.get(u'node').get(u'argument'), var.get(u't').callprop(u'numericLiteral', Js(1.0))))
                else:
                    if PyJsStrictEq(var.get(u'node').get(u'operator'),Js(u'--')):
                        var.put(u'node', var.get(u't').callprop(u'binaryExpression', Js(u'-'), var.get(u'node').get(u'argument'), var.get(u't').callprop(u'numericLiteral', Js(1.0))))
                    else:
                        var.put(u'isPostUpdateExpression', Js(False))
            #for JS loop
            var.put(u'_iterator', var.get(u'exportedNames'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i').get(u'value'))
                var.put(u'exportedName', var.get(u'_ref2'))
                var.put(u'node', var.get(u"this").callprop(u'buildCall', var.get(u'exportedName'), var.get(u'node')).get(u'expression'))
            
            if var.get(u'isPostUpdateExpression'):
                var.put(u'node', var.get(u't').callprop(u'sequenceExpression', Js([var.get(u'node'), var.get(u'path').get(u'node')])))
            var.get(u'path').callprop(u'replaceWith', var.get(u'node'))
        PyJs_AssignmentExpressionUpdateExpression_1033_._set_name(u'AssignmentExpressionUpdateExpression')
        PyJs_Object_1032_ = Js({u'AssignmentExpression|UpdateExpression':PyJs_AssignmentExpressionUpdateExpression_1033_})
        var.put(u'reassignmentVisitor', PyJs_Object_1032_)
        @Js
        def PyJs_ReferencedIdentifier_1036_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1036_, u'arguments':arguments}, var)
            var.registers([u'path', u'state'])
            if ((var.get(u'path').get(u'node').get(u'name')==Js(u'__moduleName')) and var.get(u'path').get(u'scope').callprop(u'hasBinding', Js(u'__moduleName')).neg()):
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'memberExpression', var.get(u'state').get(u'contextIdent'), var.get(u't').callprop(u'identifier', Js(u'id'))))
        PyJs_ReferencedIdentifier_1036_._set_name(u'ReferencedIdentifier')
        @Js
        def PyJs_enter_1038_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'enter':PyJs_enter_1038_}, var)
            var.registers([u'path', u'state'])
            var.get(u'state').put(u'contextIdent', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'context')))
        PyJs_enter_1038_._set_name(u'enter')
        @Js
        def PyJs_exit_1039_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'exit':PyJs_exit_1039_, u'arguments':arguments}, var)
            var.registers([u'_isArray7', u'specifier', u'_isArray5', u'_isArray4', u'_isArray3', u'contextIdent', u'_isArray6', u'_i3', u'_name2', u'canHoist', u'_nodes', u'sources', u'variableIds', u'path', u'id', u'_isArray2', u'setterBody', u'_source', u'_i7', u'_i6', u'_i5', u'addExportName', u'removedPaths', u'_i2', u'_specifier', u'source', u'_node', u'_declar', u'nodes', u'_ref3', u'body', u'node', u'state', u'bindingIdentifiers', u'pushModule', u'setters', u'_path3', u'exportIdent', u'_specifiers', u'exportObjRef', u'_bindingIdentifiers', u'_path2', u'beforeBody', u'target', u'specifiers', u'moduleName', u'_iterator6', u'name', u'_ref8', u'_ref7', u'_ref6', u'_ref5', u'_ref4', u'modules', u'exportNames', u'_name', u'buildExportCall', u'_i4', u'declar', u'_nodes2', u'_iterator5', u'_iterator4', u'_iterator7', u'_iterator2', u'_iterator3', u'_path'])
            @Js
            def PyJsHoisted_buildExportCall_(name, val, this, arguments, var=var):
                var = Scope({u'this':this, u'name':name, u'val':val, u'arguments':arguments}, var)
                var.registers([u'name', u'val'])
                return var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'exportIdent'), Js([var.get(u't').callprop(u'stringLiteral', var.get(u'name')), var.get(u'val')])))
            PyJsHoisted_buildExportCall_.func_name = u'buildExportCall'
            var.put(u'buildExportCall', PyJsHoisted_buildExportCall_)
            @Js
            def PyJsHoisted_addExportName_(key, val, this, arguments, var=var):
                var = Scope({u'this':this, u'val':val, u'key':key, u'arguments':arguments}, var)
                var.registers([u'val', u'key'])
                var.get(u'exportNames').put(var.get(u'key'), (var.get(u'exportNames').get(var.get(u'key')) or Js([])))
                var.get(u'exportNames').get(var.get(u'key')).callprop(u'push', var.get(u'val'))
            PyJsHoisted_addExportName_.func_name = u'addExportName'
            var.put(u'addExportName', PyJsHoisted_addExportName_)
            @Js
            def PyJsHoisted_pushModule_(source, key, specifiers, this, arguments, var=var):
                var = Scope({u'this':this, u'source':source, u'arguments':arguments, u'key':key, u'specifiers':specifiers}, var)
                var.registers([u'source', u'key', u'_modules', u'specifiers'])
                PyJs_Object_1040_ = Js({u'imports':Js([]),u'exports':Js([])})
                var.put(u'_modules', var.get(u'modules').put(var.get(u'source'), (var.get(u'modules').get(var.get(u'source')) or PyJs_Object_1040_)))
                var.get(u'_modules').put(var.get(u'key'), var.get(u'_modules').get(var.get(u'key')).callprop(u'concat', var.get(u'specifiers')))
            PyJsHoisted_pushModule_.func_name = u'pushModule'
            var.put(u'pushModule', PyJsHoisted_pushModule_)
            var.put(u'exportIdent', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'export')))
            var.put(u'contextIdent', var.get(u'state').get(u'contextIdent'))
            var.put(u'exportNames', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'modules', PyJsComma(Js(0.0),var.get(u'_create2').get(u'default'))(var.get(u"null")))
            var.put(u'beforeBody', Js([]))
            var.put(u'setters', Js([]))
            var.put(u'sources', Js([]))
            var.put(u'variableIds', Js([]))
            var.put(u'removedPaths', Js([]))
            pass
            pass
            pass
            var.put(u'body', var.get(u'path').callprop(u'get', Js(u'body')))
            var.put(u'canHoist', var.get(u'true'))
            #for JS loop
            var.put(u'_iterator2', var.get(u'body'))
            var.put(u'_isArray2', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator2')))
            var.put(u'_i2', Js(0.0))
            var.put(u'_iterator2', (var.get(u'_iterator2') if var.get(u'_isArray2') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator2'))))
            while 1:
                pass
                if var.get(u'_isArray2'):
                    if (var.get(u'_i2')>=var.get(u'_iterator2').get(u'length')):
                        break
                    var.put(u'_ref3', var.get(u'_iterator2').get((var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i2', var.get(u'_iterator2').callprop(u'next'))
                    if var.get(u'_i2').get(u'done'):
                        break
                    var.put(u'_ref3', var.get(u'_i2').get(u'value'))
                var.put(u'_path', var.get(u'_ref3'))
                if var.get(u'_path').callprop(u'isExportDeclaration'):
                    var.put(u'_path', var.get(u'_path').callprop(u'get', Js(u'declaration')))
                if (var.get(u'_path').callprop(u'isVariableDeclaration') and PyJsStrictNeq(var.get(u'_path').get(u'node').get(u'kind'),Js(u'var'))):
                    var.put(u'canHoist', Js(False))
                    break
            
            #for JS loop
            var.put(u'_iterator3', var.get(u'body'))
            var.put(u'_isArray3', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator3')))
            var.put(u'_i3', Js(0.0))
            var.put(u'_iterator3', (var.get(u'_iterator3') if var.get(u'_isArray3') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator3'))))
            while 1:
                pass
                if var.get(u'_isArray3'):
                    if (var.get(u'_i3')>=var.get(u'_iterator3').get(u'length')):
                        break
                    var.put(u'_ref4', var.get(u'_iterator3').get((var.put(u'_i3',Js(var.get(u'_i3').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i3', var.get(u'_iterator3').callprop(u'next'))
                    if var.get(u'_i3').get(u'done'):
                        break
                    var.put(u'_ref4', var.get(u'_i3').get(u'value'))
                var.put(u'_path2', var.get(u'_ref4'))
                if (var.get(u'canHoist') and var.get(u'_path2').callprop(u'isFunctionDeclaration')):
                    var.get(u'beforeBody').callprop(u'push', var.get(u'_path2').get(u'node'))
                    var.get(u'removedPaths').callprop(u'push', var.get(u'_path2'))
                else:
                    if var.get(u'_path2').callprop(u'isImportDeclaration'):
                        var.put(u'_source', var.get(u'_path2').get(u'node').get(u'source').get(u'value'))
                        var.get(u'pushModule')(var.get(u'_source'), Js(u'imports'), var.get(u'_path2').get(u'node').get(u'specifiers'))
                        for PyJsTemp in var.get(u'_path2').callprop(u'getBindingIdentifiers'):
                            var.put(u'name', PyJsTemp)
                            var.get(u'_path2').get(u'scope').callprop(u'removeBinding', var.get(u'name'))
                            var.get(u'variableIds').callprop(u'push', var.get(u't').callprop(u'identifier', var.get(u'name')))
                        var.get(u'_path2').callprop(u'remove')
                    else:
                        if var.get(u'_path2').callprop(u'isExportAllDeclaration'):
                            var.get(u'pushModule')(var.get(u'_path2').get(u'node').get(u'source').get(u'value'), Js(u'exports'), var.get(u'_path2').get(u'node'))
                            var.get(u'_path2').callprop(u'remove')
                        else:
                            if var.get(u'_path2').callprop(u'isExportDefaultDeclaration'):
                                var.put(u'declar', var.get(u'_path2').callprop(u'get', Js(u'declaration')))
                                if (var.get(u'declar').callprop(u'isClassDeclaration') or var.get(u'declar').callprop(u'isFunctionDeclaration')):
                                    var.put(u'id', var.get(u'declar').get(u'node').get(u'id'))
                                    var.put(u'nodes', Js([]))
                                    if var.get(u'id'):
                                        var.get(u'nodes').callprop(u'push', var.get(u'declar').get(u'node'))
                                        var.get(u'nodes').callprop(u'push', var.get(u'buildExportCall')(Js(u'default'), var.get(u'id')))
                                        var.get(u'addExportName')(var.get(u'id').get(u'name'), Js(u'default'))
                                    else:
                                        var.get(u'nodes').callprop(u'push', var.get(u'buildExportCall')(Js(u'default'), var.get(u't').callprop(u'toExpression', var.get(u'declar').get(u'node'))))
                                    if (var.get(u'canHoist').neg() or var.get(u'declar').callprop(u'isClassDeclaration')):
                                        var.get(u'_path2').callprop(u'replaceWithMultiple', var.get(u'nodes'))
                                    else:
                                        var.put(u'beforeBody', var.get(u'beforeBody').callprop(u'concat', var.get(u'nodes')))
                                        var.get(u'removedPaths').callprop(u'push', var.get(u'_path2'))
                                else:
                                    var.get(u'_path2').callprop(u'replaceWith', var.get(u'buildExportCall')(Js(u'default'), var.get(u'declar').get(u'node')))
                            else:
                                if var.get(u'_path2').callprop(u'isExportNamedDeclaration'):
                                    var.put(u'_declar', var.get(u'_path2').callprop(u'get', Js(u'declaration')))
                                    if var.get(u'_declar').get(u'node'):
                                        var.get(u'_path2').callprop(u'replaceWith', var.get(u'_declar'))
                                        var.put(u'_nodes', Js([]))
                                        var.put(u'bindingIdentifiers', PyJsComma(Js(0.0), Js(None)))
                                        if var.get(u'_path2').callprop(u'isFunction'):
                                            var.put(u'_node', var.get(u'_declar').get(u'node'))
                                            var.put(u'_name', var.get(u'_node').get(u'id').get(u'name'))
                                            if var.get(u'canHoist'):
                                                var.get(u'addExportName')(var.get(u'_name'), var.get(u'_name'))
                                                var.get(u'beforeBody').callprop(u'push', var.get(u'_node'))
                                                var.get(u'beforeBody').callprop(u'push', var.get(u'buildExportCall')(var.get(u'_name'), var.get(u'_node').get(u'id')))
                                                var.get(u'removedPaths').callprop(u'push', var.get(u'_path2'))
                                            else:
                                                pass
                                                PyJs_Object_1041_ = Js({})
                                                var.put(u'bindingIdentifiers', PyJsComma(PyJsComma(var.put(u'_bindingIdentifiers', PyJs_Object_1041_),var.get(u'_bindingIdentifiers').put(var.get(u'_name'), var.get(u'_node').get(u'id'))),var.get(u'_bindingIdentifiers')))
                                        else:
                                            var.put(u'bindingIdentifiers', var.get(u'_declar').callprop(u'getBindingIdentifiers'))
                                        for PyJsTemp in var.get(u'bindingIdentifiers'):
                                            var.put(u'_name2', PyJsTemp)
                                            var.get(u'addExportName')(var.get(u'_name2'), var.get(u'_name2'))
                                            var.get(u'_nodes').callprop(u'push', var.get(u'buildExportCall')(var.get(u'_name2'), var.get(u't').callprop(u'identifier', var.get(u'_name2'))))
                                        var.get(u'_path2').callprop(u'insertAfter', var.get(u'_nodes'))
                                    else:
                                        var.put(u'_specifiers', var.get(u'_path2').get(u'node').get(u'specifiers'))
                                        if (var.get(u'_specifiers') and var.get(u'_specifiers').get(u'length')):
                                            if var.get(u'_path2').get(u'node').get(u'source'):
                                                var.get(u'pushModule')(var.get(u'_path2').get(u'node').get(u'source').get(u'value'), Js(u'exports'), var.get(u'_specifiers'))
                                                var.get(u'_path2').callprop(u'remove')
                                            else:
                                                var.put(u'_nodes2', Js([]))
                                                #for JS loop
                                                var.put(u'_iterator7', var.get(u'_specifiers'))
                                                var.put(u'_isArray7', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator7')))
                                                var.put(u'_i7', Js(0.0))
                                                var.put(u'_iterator7', (var.get(u'_iterator7') if var.get(u'_isArray7') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator7'))))
                                                while 1:
                                                    pass
                                                    if var.get(u'_isArray7'):
                                                        if (var.get(u'_i7')>=var.get(u'_iterator7').get(u'length')):
                                                            break
                                                        var.put(u'_ref8', var.get(u'_iterator7').get((var.put(u'_i7',Js(var.get(u'_i7').to_number())+Js(1))-Js(1))))
                                                    else:
                                                        var.put(u'_i7', var.get(u'_iterator7').callprop(u'next'))
                                                        if var.get(u'_i7').get(u'done'):
                                                            break
                                                        var.put(u'_ref8', var.get(u'_i7').get(u'value'))
                                                    var.put(u'_specifier', var.get(u'_ref8'))
                                                    var.get(u'_nodes2').callprop(u'push', var.get(u'buildExportCall')(var.get(u'_specifier').get(u'exported').get(u'name'), var.get(u'_specifier').get(u'local')))
                                                    var.get(u'addExportName')(var.get(u'_specifier').get(u'local').get(u'name'), var.get(u'_specifier').get(u'exported').get(u'name'))
                                                
                                                var.get(u'_path2').callprop(u'replaceWithMultiple', var.get(u'_nodes2'))
            
            for PyJsTemp in var.get(u'modules'):
                var.put(u'source', PyJsTemp)
                var.put(u'specifiers', var.get(u'modules').get(var.get(u'source')))
                var.put(u'setterBody', Js([]))
                var.put(u'target', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', var.get(u'source')))
                #for JS loop
                var.put(u'_iterator4', var.get(u'specifiers').get(u'imports'))
                var.put(u'_isArray4', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator4')))
                var.put(u'_i4', Js(0.0))
                var.put(u'_iterator4', (var.get(u'_iterator4') if var.get(u'_isArray4') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator4'))))
                while 1:
                    pass
                    if var.get(u'_isArray4'):
                        if (var.get(u'_i4')>=var.get(u'_iterator4').get(u'length')):
                            break
                        var.put(u'_ref5', var.get(u'_iterator4').get((var.put(u'_i4',Js(var.get(u'_i4').to_number())+Js(1))-Js(1))))
                    else:
                        var.put(u'_i4', var.get(u'_iterator4').callprop(u'next'))
                        if var.get(u'_i4').get(u'done'):
                            break
                        var.put(u'_ref5', var.get(u'_i4').get(u'value'))
                    var.put(u'specifier', var.get(u'_ref5'))
                    if var.get(u't').callprop(u'isImportNamespaceSpecifier', var.get(u'specifier')):
                        var.get(u'setterBody').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'specifier').get(u'local'), var.get(u'target'))))
                    else:
                        if var.get(u't').callprop(u'isImportDefaultSpecifier', var.get(u'specifier')):
                            var.put(u'specifier', var.get(u't').callprop(u'importSpecifier', var.get(u'specifier').get(u'local'), var.get(u't').callprop(u'identifier', Js(u'default'))))
                    if var.get(u't').callprop(u'isImportSpecifier', var.get(u'specifier')):
                        var.get(u'setterBody').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'specifier').get(u'local'), var.get(u't').callprop(u'memberExpression', var.get(u'target'), var.get(u'specifier').get(u'imported')))))
                
                if var.get(u'specifiers').get(u'exports').get(u'length'):
                    var.put(u'exportObjRef', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'exportObj')))
                    var.get(u'setterBody').callprop(u'push', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'exportObjRef'), var.get(u't').callprop(u'objectExpression', Js([])))])))
                    #for JS loop
                    var.put(u'_iterator5', var.get(u'specifiers').get(u'exports'))
                    var.put(u'_isArray5', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator5')))
                    var.put(u'_i5', Js(0.0))
                    var.put(u'_iterator5', (var.get(u'_iterator5') if var.get(u'_isArray5') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator5'))))
                    while 1:
                        pass
                        if var.get(u'_isArray5'):
                            if (var.get(u'_i5')>=var.get(u'_iterator5').get(u'length')):
                                break
                            var.put(u'_ref6', var.get(u'_iterator5').get((var.put(u'_i5',Js(var.get(u'_i5').to_number())+Js(1))-Js(1))))
                        else:
                            var.put(u'_i5', var.get(u'_iterator5').callprop(u'next'))
                            if var.get(u'_i5').get(u'done'):
                                break
                            var.put(u'_ref6', var.get(u'_i5').get(u'value'))
                        var.put(u'node', var.get(u'_ref6'))
                        if var.get(u't').callprop(u'isExportAllDeclaration', var.get(u'node')):
                            PyJs_Object_1042_ = Js({u'KEY':var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'key')),u'EXPORT_OBJ':var.get(u'exportObjRef'),u'TARGET':var.get(u'target')})
                            var.get(u'setterBody').callprop(u'push', var.get(u'buildExportAll')(PyJs_Object_1042_))
                        else:
                            if var.get(u't').callprop(u'isExportSpecifier', var.get(u'node')):
                                var.get(u'setterBody').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u't').callprop(u'memberExpression', var.get(u'exportObjRef'), var.get(u'node').get(u'exported')), var.get(u't').callprop(u'memberExpression', var.get(u'target'), var.get(u'node').get(u'local')))))
                            else:
                                pass
                    
                    var.get(u'setterBody').callprop(u'push', var.get(u't').callprop(u'expressionStatement', var.get(u't').callprop(u'callExpression', var.get(u'exportIdent'), Js([var.get(u'exportObjRef')]))))
                var.get(u'sources').callprop(u'push', var.get(u't').callprop(u'stringLiteral', var.get(u'source')))
                var.get(u'setters').callprop(u'push', var.get(u't').callprop(u'functionExpression', var.get(u"null"), Js([var.get(u'target')]), var.get(u't').callprop(u'blockStatement', var.get(u'setterBody'))))
            var.put(u'moduleName', var.get(u"this").callprop(u'getModuleName'))
            if var.get(u'moduleName'):
                var.put(u'moduleName', var.get(u't').callprop(u'stringLiteral', var.get(u'moduleName')))
            if var.get(u'canHoist'):
                @Js
                def PyJs_anonymous_1043_(id, this, arguments, var=var):
                    var = Scope({u'this':this, u'id':id, u'arguments':arguments}, var)
                    var.registers([u'id'])
                    return var.get(u'variableIds').callprop(u'push', var.get(u'id'))
                PyJs_anonymous_1043_._set_name(u'anonymous')
                PyJsComma(Js(0.0),var.get(u'_babelHelperHoistVariables2').get(u'default'))(var.get(u'path'), PyJs_anonymous_1043_)
            if var.get(u'variableIds').get(u'length'):
                @Js
                def PyJs_anonymous_1044_(id, this, arguments, var=var):
                    var = Scope({u'this':this, u'id':id, u'arguments':arguments}, var)
                    var.registers([u'id'])
                    return var.get(u't').callprop(u'variableDeclarator', var.get(u'id'))
                PyJs_anonymous_1044_._set_name(u'anonymous')
                var.get(u'beforeBody').callprop(u'unshift', var.get(u't').callprop(u'variableDeclaration', Js(u'var'), var.get(u'variableIds').callprop(u'map', PyJs_anonymous_1044_)))
            PyJs_Object_1045_ = Js({u'exports':var.get(u'exportNames'),u'buildCall':var.get(u'buildExportCall'),u'scope':var.get(u'path').get(u'scope')})
            var.get(u'path').callprop(u'traverse', var.get(u'reassignmentVisitor'), PyJs_Object_1045_)
            #for JS loop
            var.put(u'_iterator6', var.get(u'removedPaths'))
            var.put(u'_isArray6', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator6')))
            var.put(u'_i6', Js(0.0))
            var.put(u'_iterator6', (var.get(u'_iterator6') if var.get(u'_isArray6') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator6'))))
            while 1:
                pass
                if var.get(u'_isArray6'):
                    if (var.get(u'_i6')>=var.get(u'_iterator6').get(u'length')):
                        break
                    var.put(u'_ref7', var.get(u'_iterator6').get((var.put(u'_i6',Js(var.get(u'_i6').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i6', var.get(u'_iterator6').callprop(u'next'))
                    if var.get(u'_i6').get(u'done'):
                        break
                    var.put(u'_ref7', var.get(u'_i6').get(u'value'))
                var.put(u'_path3', var.get(u'_ref7'))
                var.get(u'_path3').callprop(u'remove')
            
            PyJs_Object_1046_ = Js({u'SYSTEM_REGISTER':var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', (var.get(u'state').get(u'opts').get(u'systemGlobal') or Js(u'System'))), var.get(u't').callprop(u'identifier', Js(u'register'))),u'BEFORE_BODY':var.get(u'beforeBody'),u'MODULE_NAME':var.get(u'moduleName'),u'SETTERS':var.get(u'setters'),u'SOURCES':var.get(u'sources'),u'BODY':var.get(u'path').get(u'node').get(u'body'),u'EXPORT_IDENTIFIER':var.get(u'exportIdent'),u'CONTEXT_IDENTIFIER':var.get(u'contextIdent')})
            var.get(u'path').get(u'node').put(u'body', Js([var.get(u'buildTemplate')(PyJs_Object_1046_)]))
        PyJs_exit_1039_._set_name(u'exit')
        PyJs_Object_1037_ = Js({u'enter':PyJs_enter_1038_,u'exit':PyJs_exit_1039_})
        PyJs_Object_1035_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1036_,u'Program':PyJs_Object_1037_})
        PyJs_Object_1034_ = Js({u'visitor':PyJs_Object_1035_})
        return PyJs_Object_1034_
    PyJs_anonymous_1031_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_1031_)
    var.put(u'_babelHelperHoistVariables', var.get(u'require')(Js(u'babel-helper-hoist-variables')))
    var.put(u'_babelHelperHoistVariables2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperHoistVariables')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    pass
    var.put(u'buildTemplate', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  SYSTEM_REGISTER(MODULE_NAME, [SOURCES], function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: [SETTERS],\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n')))
    var.put(u'buildExportAll', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n')))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_1030_._set_name(u'anonymous')
PyJs_Object_1048_ = Js({u'babel-helper-hoist-variables':Js(51.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/object/create':Js(101.0),u'babel-runtime/core-js/symbol':Js(105.0),u'babel-template':Js(221.0)})
@Js
def PyJs_anonymous_1049_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'require', u'_babelTemplate', u'module', u'_babelTemplate2', u'buildWrapper', u'buildGlobalExport', u'_interopRequireDefault', u'buildPrerequisiteAssignment', u'_path'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1064_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1064_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    @Js
    def PyJs_anonymous_1050_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u'isValidDefine', u't'])
        @Js
        def PyJsHoisted_isValidDefine_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
            var.registers([u'expr', u'args', u'path'])
            if var.get(u'path').callprop(u'isExpressionStatement').neg():
                return var.get('undefined')
            var.put(u'expr', var.get(u'path').callprop(u'get', Js(u'expression')))
            if var.get(u'expr').callprop(u'isCallExpression').neg():
                return Js(False)
            PyJs_Object_1051_ = Js({u'name':Js(u'define')})
            if var.get(u'expr').callprop(u'get', Js(u'callee')).callprop(u'isIdentifier', PyJs_Object_1051_).neg():
                return Js(False)
            var.put(u'args', var.get(u'expr').callprop(u'get', Js(u'arguments')))
            if (PyJsStrictEq(var.get(u'args').get(u'length'),Js(3.0)) and var.get(u'args').callprop(u'shift').callprop(u'isStringLiteral').neg()):
                return Js(False)
            if PyJsStrictNeq(var.get(u'args').get(u'length'),Js(2.0)):
                return Js(False)
            if var.get(u'args').callprop(u'shift').callprop(u'isArrayExpression').neg():
                return Js(False)
            if var.get(u'args').callprop(u'shift').callprop(u'isFunctionExpression').neg():
                return Js(False)
            return var.get(u'true')
        PyJsHoisted_isValidDefine_.func_name = u'isValidDefine'
        var.put(u'isValidDefine', PyJsHoisted_isValidDefine_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        pass
        @Js
        def PyJs_exit_1055_(path, state, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'state':state, u'exit':PyJs_exit_1055_, u'arguments':arguments}, var)
            var.registers([u'browserGlobals', u'moduleName', u'last', u'members', u'globalName', u'args', u'browserArgs', u'commonArgs', u'amdArgs', u'state', u'call', u'func', u'globalToAssign', u'moduleNameOrBasename', u'path', u'globalExport', u'prerequisiteAssignments'])
            var.put(u'last', var.get(u'path').callprop(u'get', Js(u'body')).callprop(u'pop'))
            if var.get(u'isValidDefine')(var.get(u'last')).neg():
                return var.get('undefined')
            var.put(u'call', var.get(u'last').get(u'node').get(u'expression'))
            var.put(u'args', var.get(u'call').get(u'arguments'))
            var.put(u'moduleName', (var.get(u'args').callprop(u'shift') if PyJsStrictEq(var.get(u'args').get(u'length'),Js(3.0)) else var.get(u"null")))
            var.put(u'amdArgs', var.get(u'call').get(u'arguments').get(u'0'))
            var.put(u'func', var.get(u'call').get(u'arguments').get(u'1'))
            PyJs_Object_1056_ = Js({})
            var.put(u'browserGlobals', (var.get(u'state').get(u'opts').get(u'globals') or PyJs_Object_1056_))
            @Js
            def PyJs_anonymous_1057_(arg, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'arg':arg}, var)
                var.registers([u'arg'])
                if (PyJsStrictEq(var.get(u'arg').get(u'value'),Js(u'module')) or PyJsStrictEq(var.get(u'arg').get(u'value'),Js(u'exports'))):
                    return var.get(u't').callprop(u'identifier', var.get(u'arg').get(u'value'))
                else:
                    return var.get(u't').callprop(u'callExpression', var.get(u't').callprop(u'identifier', Js(u'require')), Js([var.get(u'arg')]))
            PyJs_anonymous_1057_._set_name(u'anonymous')
            var.put(u'commonArgs', var.get(u'amdArgs').get(u'elements').callprop(u'map', PyJs_anonymous_1057_))
            @Js
            def PyJs_anonymous_1058_(arg, this, arguments, var=var):
                var = Scope({u'this':this, u'arguments':arguments, u'arg':arg}, var)
                var.registers([u'memberExpression', u'globalRef', u'arg', u'globalName', u'requireName'])
                if PyJsStrictEq(var.get(u'arg').get(u'value'),Js(u'module')):
                    return var.get(u't').callprop(u'identifier', Js(u'mod'))
                else:
                    if PyJsStrictEq(var.get(u'arg').get(u'value'),Js(u'exports')):
                        return var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'mod')), var.get(u't').callprop(u'identifier', Js(u'exports')))
                    else:
                        var.put(u'memberExpression', PyJsComma(Js(0.0), Js(None)))
                        if var.get(u'state').get(u'opts').get(u'exactGlobals'):
                            var.put(u'globalRef', var.get(u'browserGlobals').get(var.get(u'arg').get(u'value')))
                            if var.get(u'globalRef'):
                                @Js
                                def PyJs_anonymous_1059_(accum, curr, this, arguments, var=var):
                                    var = Scope({u'this':this, u'curr':curr, u'accum':accum, u'arguments':arguments}, var)
                                    var.registers([u'curr', u'accum'])
                                    return var.get(u't').callprop(u'memberExpression', var.get(u'accum'), var.get(u't').callprop(u'identifier', var.get(u'curr')))
                                PyJs_anonymous_1059_._set_name(u'anonymous')
                                var.put(u'memberExpression', var.get(u'globalRef').callprop(u'split', Js(u'.')).callprop(u'reduce', PyJs_anonymous_1059_, var.get(u't').callprop(u'identifier', Js(u'global'))))
                            else:
                                var.put(u'memberExpression', var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'global')), var.get(u't').callprop(u'identifier', var.get(u't').callprop(u'toIdentifier', var.get(u'arg').get(u'value')))))
                        else:
                            var.put(u'requireName', PyJsComma(Js(0.0),var.get(u'_path').get(u'basename'))(var.get(u'arg').get(u'value'), PyJsComma(Js(0.0),var.get(u'_path').get(u'extname'))(var.get(u'arg').get(u'value'))))
                            var.put(u'globalName', (var.get(u'browserGlobals').get(var.get(u'requireName')) or var.get(u'requireName')))
                            var.put(u'memberExpression', var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'global')), var.get(u't').callprop(u'identifier', var.get(u't').callprop(u'toIdentifier', var.get(u'globalName')))))
                        return var.get(u'memberExpression')
            PyJs_anonymous_1058_._set_name(u'anonymous')
            var.put(u'browserArgs', var.get(u'amdArgs').get(u'elements').callprop(u'map', PyJs_anonymous_1058_))
            var.put(u'moduleNameOrBasename', (var.get(u'moduleName').get(u'value') if var.get(u'moduleName') else var.get(u"this").get(u'file').get(u'opts').get(u'basename')))
            var.put(u'globalToAssign', var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'global')), var.get(u't').callprop(u'identifier', var.get(u't').callprop(u'toIdentifier', var.get(u'moduleNameOrBasename')))))
            var.put(u'prerequisiteAssignments', var.get(u"null"))
            if var.get(u'state').get(u'opts').get(u'exactGlobals'):
                var.put(u'globalName', var.get(u'browserGlobals').get(var.get(u'moduleNameOrBasename')))
                if var.get(u'globalName'):
                    var.put(u'prerequisiteAssignments', Js([]))
                    var.put(u'members', var.get(u'globalName').callprop(u'split', Js(u'.')))
                    @Js
                    def PyJs_anonymous_1060_(accum, curr, this, arguments, var=var):
                        var = Scope({u'this':this, u'curr':curr, u'accum':accum, u'arguments':arguments}, var)
                        var.registers([u'curr', u'accum'])
                        PyJs_Object_1061_ = Js({u'GLOBAL_REFERENCE':var.get(u'accum')})
                        var.get(u'prerequisiteAssignments').callprop(u'push', var.get(u'buildPrerequisiteAssignment')(PyJs_Object_1061_))
                        return var.get(u't').callprop(u'memberExpression', var.get(u'accum'), var.get(u't').callprop(u'identifier', var.get(u'curr')))
                    PyJs_anonymous_1060_._set_name(u'anonymous')
                    var.put(u'globalToAssign', var.get(u'members').callprop(u'slice', Js(1.0)).callprop(u'reduce', PyJs_anonymous_1060_, var.get(u't').callprop(u'memberExpression', var.get(u't').callprop(u'identifier', Js(u'global')), var.get(u't').callprop(u'identifier', var.get(u'members').get(u'0')))))
            PyJs_Object_1062_ = Js({u'BROWSER_ARGUMENTS':var.get(u'browserArgs'),u'PREREQUISITE_ASSIGNMENTS':var.get(u'prerequisiteAssignments'),u'GLOBAL_TO_ASSIGN':var.get(u'globalToAssign')})
            var.put(u'globalExport', var.get(u'buildGlobalExport')(PyJs_Object_1062_))
            PyJs_Object_1063_ = Js({u'MODULE_NAME':var.get(u'moduleName'),u'AMD_ARGUMENTS':var.get(u'amdArgs'),u'COMMON_ARGUMENTS':var.get(u'commonArgs'),u'GLOBAL_EXPORT':var.get(u'globalExport'),u'FUNC':var.get(u'func')})
            var.get(u'last').callprop(u'replaceWith', var.get(u'buildWrapper')(PyJs_Object_1063_))
        PyJs_exit_1055_._set_name(u'exit')
        PyJs_Object_1054_ = Js({u'exit':PyJs_exit_1055_})
        PyJs_Object_1053_ = Js({u'Program':PyJs_Object_1054_})
        PyJs_Object_1052_ = Js({u'inherits':var.get(u'require')(Js(u'babel-plugin-transform-es2015-modules-amd')),u'visitor':PyJs_Object_1053_})
        return PyJs_Object_1052_
    PyJs_anonymous_1050_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_1050_)
    var.put(u'_path', var.get(u'require')(Js(u'path')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    pass
    var.put(u'buildPrerequisiteAssignment', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n')))
    var.put(u'buildGlobalExport', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  var mod = { exports: {} };\n  factory(BROWSER_ARGUMENTS);\n  PREREQUISITE_ASSIGNMENTS\n  GLOBAL_TO_ASSIGN = mod.exports;\n')))
    var.put(u'buildWrapper', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  (function (global, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== "undefined") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      GLOBAL_EXPORT\n    }\n  })(this, FUNC);\n')))
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_1049_._set_name(u'anonymous')
PyJs_Object_1065_ = Js({u'babel-plugin-transform-es2015-modules-amd':Js(72.0),u'babel-template':Js(221.0),u'path':Js(530.0)})
@Js
def PyJs_anonymous_1066_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_babelHelperReplaceSupers2', u'exports', u'_symbol2', u'require', u'module', u'_symbol', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_babelHelperReplaceSupers'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1077_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1077_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_symbol', var.get(u'require')(Js(u'babel-runtime/core-js/symbol')))
    var.put(u'_symbol2', var.get(u'_interopRequireDefault')(var.get(u'_symbol')))
    @Js
    def PyJs_anonymous_1067_(_ref, this, arguments, var=var):
        var = Scope({u'this':this, u'_ref':_ref, u'arguments':arguments}, var)
        var.registers([u'_ref', u'Property', u't', u'CONTAINS_SUPER'])
        @Js
        def PyJsHoisted_Property_(path, node, scope, getObjectRef, file, this, arguments, var=var):
            var = Scope({u'node':node, u'getObjectRef':getObjectRef, u'arguments':arguments, u'file':file, u'scope':scope, u'this':this, u'path':path}, var)
            var.registers([u'node', u'getObjectRef', u'replaceSupers', u'file', u'scope', u'path'])
            PyJs_Object_1068_ = Js({u'getObjectRef':var.get(u'getObjectRef'),u'methodNode':var.get(u'node'),u'methodPath':var.get(u'path'),u'isStatic':var.get(u'true'),u'scope':var.get(u'scope'),u'file':var.get(u'file')})
            var.put(u'replaceSupers', var.get(u'_babelHelperReplaceSupers2').get(u'default').create(PyJs_Object_1068_))
            var.get(u'replaceSupers').callprop(u'replace')
        PyJsHoisted_Property_.func_name = u'Property'
        var.put(u'Property', PyJsHoisted_Property_)
        var.put(u't', var.get(u'_ref').get(u'types'))
        pass
        var.put(u'CONTAINS_SUPER', PyJsComma(Js(0.0),var.get(u'_symbol2').get(u'default'))())
        @Js
        def PyJs_Super_1071_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'Super':PyJs_Super_1071_, u'arguments':arguments}, var)
            var.registers([u'path', u'parentObj'])
            @Js
            def PyJs_anonymous_1072_(path, this, arguments, var=var):
                var = Scope({u'this':this, u'path':path, u'arguments':arguments}, var)
                var.registers([u'path'])
                return var.get(u'path').callprop(u'isObjectExpression')
            PyJs_anonymous_1072_._set_name(u'anonymous')
            var.put(u'parentObj', var.get(u'path').callprop(u'findParent', PyJs_anonymous_1072_))
            if var.get(u'parentObj'):
                var.get(u'parentObj').get(u'node').put(var.get(u'CONTAINS_SUPER'), var.get(u'true'))
        PyJs_Super_1071_._set_name(u'Super')
        @Js
        def PyJs_exit_1074_(path, file, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'exit':PyJs_exit_1074_, u'arguments':arguments, u'file':file}, var)
            var.registers([u'getObjectRef', u'objectRef', u'_isArray', u'_iterator', u'file', u'propPath', u'_ref2', u'propPaths', u'_i', u'path'])
            if var.get(u'path').get(u'node').get(var.get(u'CONTAINS_SUPER')).neg():
                return var.get('undefined')
            var.put(u'objectRef', PyJsComma(Js(0.0), Js(None)))
            @Js
            def PyJs_getObjectRef_1075_(this, arguments, var=var):
                var = Scope({u'this':this, u'getObjectRef':PyJs_getObjectRef_1075_, u'arguments':arguments}, var)
                var.registers([])
                return var.put(u'objectRef', (var.get(u'objectRef') or var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'obj'))))
            PyJs_getObjectRef_1075_._set_name(u'getObjectRef')
            var.put(u'getObjectRef', PyJs_getObjectRef_1075_)
            var.put(u'propPaths', var.get(u'path').callprop(u'get', Js(u'properties')))
            #for JS loop
            var.put(u'_iterator', var.get(u'propPaths'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref2', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref2', var.get(u'_i').get(u'value'))
                var.put(u'propPath', var.get(u'_ref2'))
                if var.get(u'propPath').callprop(u'isObjectProperty'):
                    var.put(u'propPath', var.get(u'propPath').callprop(u'get', Js(u'value')))
                var.get(u'Property')(var.get(u'propPath'), var.get(u'propPath').get(u'node'), var.get(u'path').get(u'scope'), var.get(u'getObjectRef'), var.get(u'file'))
            
            if var.get(u'objectRef'):
                PyJs_Object_1076_ = Js({u'id':var.get(u'objectRef')})
                var.get(u'path').get(u'scope').callprop(u'push', PyJs_Object_1076_)
                var.get(u'path').callprop(u'replaceWith', var.get(u't').callprop(u'assignmentExpression', Js(u'='), var.get(u'objectRef'), var.get(u'path').get(u'node')))
        PyJs_exit_1074_._set_name(u'exit')
        PyJs_Object_1073_ = Js({u'exit':PyJs_exit_1074_})
        PyJs_Object_1070_ = Js({u'Super':PyJs_Super_1071_,u'ObjectExpression':PyJs_Object_1073_})
        PyJs_Object_1069_ = Js({u'visitor':PyJs_Object_1070_})
        return PyJs_Object_1069_
    PyJs_anonymous_1067_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_1067_)
    var.put(u'_babelHelperReplaceSupers', var.get(u'require')(Js(u'babel-helper-replace-supers')))
    var.put(u'_babelHelperReplaceSupers2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperReplaceSupers')))
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_1066_._set_name(u'anonymous')
PyJs_Object_1078_ = Js({u'babel-helper-replace-supers':Js(54.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-runtime/core-js/symbol':Js(105.0)})
@Js
def PyJs_anonymous_1079_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'_babelHelperCallDelegate', u'module', u'require', u'_babelHelperCallDelegate2', u'exports', u'_interopRequireWildcard', u'visitor', u'_babelHelperGetFunctionArity', u'_babelTypes', u'_babelHelperGetFunctionArity2', u'iifeVisitor', u'_babelTemplate', u'isSafeBinding', u'_babelTemplate2', u't', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'buildCutOff', u'hasDefaults', u'buildDefaultParam'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1081_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1081_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_isSafeBinding_(scope, node, this, arguments, var=var):
        var = Scope({u'node':node, u'scope':scope, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'scope', u'kind', u'_scope$getOwnBinding'])
        if var.get(u'scope').callprop(u'hasOwnBinding', var.get(u'node').get(u'name')).neg():
            return var.get(u'true')
        var.put(u'_scope$getOwnBinding', var.get(u'scope').callprop(u'getOwnBinding', var.get(u'node').get(u'name')))
        var.put(u'kind', var.get(u'_scope$getOwnBinding').get(u'kind'))
        return (PyJsStrictEq(var.get(u'kind'),Js(u'param')) or PyJsStrictEq(var.get(u'kind'),Js(u'local')))
    PyJsHoisted_isSafeBinding_.func_name = u'isSafeBinding'
    var.put(u'isSafeBinding', PyJsHoisted_isSafeBinding_)
    @Js
    def PyJsHoisted_hasDefaults_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node', u'_isArray', u'_iterator', u'param', u'_i', u'_ref'])
        #for JS loop
        var.put(u'_iterator', var.get(u'node').get(u'params'))
        var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
        var.put(u'_i', Js(0.0))
        var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
        while 1:
            pass
            if var.get(u'_isArray'):
                if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                    break
                var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
            else:
                var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                if var.get(u'_i').get(u'done'):
                    break
                var.put(u'_ref', var.get(u'_i').get(u'value'))
            var.put(u'param', var.get(u'_ref'))
            if var.get(u't').callprop(u'isIdentifier', var.get(u'param')).neg():
                return var.get(u'true')
        
        return Js(False)
    PyJsHoisted_hasDefaults_.func_name = u'hasDefaults'
    var.put(u'hasDefaults', PyJsHoisted_hasDefaults_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_1080_ = Js({})
            var.put(u'newObj', PyJs_Object_1080_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'visitor', var.get(u'undefined'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_babelHelperGetFunctionArity', var.get(u'require')(Js(u'babel-helper-get-function-arity')))
    var.put(u'_babelHelperGetFunctionArity2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperGetFunctionArity')))
    var.put(u'_babelHelperCallDelegate', var.get(u'require')(Js(u'babel-helper-call-delegate')))
    var.put(u'_babelHelperCallDelegate2', var.get(u'_interopRequireDefault')(var.get(u'_babelHelperCallDelegate')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'buildDefaultParam', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  let VARIABLE_NAME =\n    ARGUMENTS.length > ARGUMENT_KEY && ARGUMENTS[ARGUMENT_KEY] !== undefined ?\n      ARGUMENTS[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n')))
    var.put(u'buildCutOff', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  let $0 = $1[$2];\n')))
    pass
    pass
    @Js
    def PyJs_ReferencedIdentifier_1083_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1083_, u'arguments':arguments}, var)
        var.registers([u'node', u'scope', u'state', u'path'])
        var.put(u'scope', var.get(u'path').get(u'scope'))
        var.put(u'node', var.get(u'path').get(u'node'))
        if (PyJsStrictEq(var.get(u'node').get(u'name'),Js(u'eval')) or var.get(u'isSafeBinding')(var.get(u'scope'), var.get(u'node')).neg()):
            var.get(u'state').put(u'iife', var.get(u'true'))
            var.get(u'path').callprop(u'stop')
    PyJs_ReferencedIdentifier_1083_._set_name(u'ReferencedIdentifier')
    @Js
    def PyJs_Scope_1084_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'Scope':PyJs_Scope_1084_}, var)
        var.registers([u'path'])
        var.get(u'path').callprop(u'skip')
    PyJs_Scope_1084_._set_name(u'Scope')
    PyJs_Object_1082_ = Js({u'ReferencedIdentifier':PyJs_ReferencedIdentifier_1083_,u'Scope':PyJs_Scope_1084_})
    var.put(u'iifeVisitor', PyJs_Object_1082_)
    @Js
    def PyJs_Function_1086_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_1086_, u'arguments':arguments}, var)
        var.registers([u'node', u'body', u'pushDefNode', u'right', u'lastNonDefaultParam', u'i', u'argsIdentifier', u'_i2', u'param', u'_param', u'state', u'declar', u'params', u'path', u'scope', u'placeholder', u'left'])
        @Js
        def PyJsHoisted_pushDefNode_(left, right, i, this, arguments, var=var):
            var = Scope({u'i':i, u'this':this, u'right':right, u'arguments':arguments, u'left':left}, var)
            var.registers([u'i', u'defNode', u'right', u'left'])
            PyJs_Object_1088_ = Js({u'VARIABLE_NAME':var.get(u'left'),u'DEFAULT_VALUE':var.get(u'right'),u'ARGUMENT_KEY':var.get(u't').callprop(u'numericLiteral', var.get(u'i')),u'ARGUMENTS':var.get(u'argsIdentifier')})
            var.put(u'defNode', var.get(u'buildDefaultParam')(PyJs_Object_1088_))
            var.get(u'defNode').put(u'_blockHoist', (var.get(u'node').get(u'params').get(u'length')-var.get(u'i')))
            var.get(u'body').callprop(u'push', var.get(u'defNode'))
        PyJsHoisted_pushDefNode_.func_name = u'pushDefNode'
        var.put(u'pushDefNode', PyJsHoisted_pushDefNode_)
        var.put(u'node', var.get(u'path').get(u'node'))
        var.put(u'scope', var.get(u'path').get(u'scope'))
        if var.get(u'hasDefaults')(var.get(u'node')).neg():
            return var.get('undefined')
        var.get(u'path').callprop(u'ensureBlock')
        PyJs_Object_1087_ = Js({u'iife':Js(False),u'scope':var.get(u'scope')})
        var.put(u'state', PyJs_Object_1087_)
        var.put(u'body', Js([]))
        var.put(u'argsIdentifier', var.get(u't').callprop(u'identifier', Js(u'arguments')))
        var.get(u'argsIdentifier').put(u'_shadowedFunctionLiteral', var.get(u'path'))
        pass
        var.put(u'lastNonDefaultParam', PyJsComma(Js(0.0),var.get(u'_babelHelperGetFunctionArity2').get(u'default'))(var.get(u'node')))
        var.put(u'params', var.get(u'path').callprop(u'get', Js(u'params')))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'params').get(u'length')):
            try:
                var.put(u'param', var.get(u'params').get(var.get(u'i')))
                if var.get(u'param').callprop(u'isAssignmentPattern').neg():
                    if (var.get(u'state').get(u'iife').neg() and var.get(u'param').callprop(u'isIdentifier').neg()):
                        var.get(u'param').callprop(u'traverse', var.get(u'iifeVisitor'), var.get(u'state'))
                    continue
                var.put(u'left', var.get(u'param').callprop(u'get', Js(u'left')))
                var.put(u'right', var.get(u'param').callprop(u'get', Js(u'right')))
                if ((var.get(u'i')>=var.get(u'lastNonDefaultParam')) or var.get(u'left').callprop(u'isPattern')):
                    var.put(u'placeholder', var.get(u'scope').callprop(u'generateUidIdentifier', Js(u'x')))
                    var.get(u'placeholder').put(u'_isDefaultPlaceholder', var.get(u'true'))
                    var.get(u'node').get(u'params').put(var.get(u'i'), var.get(u'placeholder'))
                else:
                    var.get(u'node').get(u'params').put(var.get(u'i'), var.get(u'left').get(u'node'))
                if var.get(u'state').get(u'iife').neg():
                    if (var.get(u'right').callprop(u'isIdentifier') and var.get(u'isSafeBinding')(var.get(u'scope'), var.get(u'right').get(u'node')).neg()):
                        var.get(u'state').put(u'iife', var.get(u'true'))
                    else:
                        var.get(u'right').callprop(u'traverse', var.get(u'iifeVisitor'), var.get(u'state'))
                var.get(u'pushDefNode')(var.get(u'left').get(u'node'), var.get(u'right').get(u'node'), var.get(u'i'))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
        #for JS loop
        var.put(u'_i2', (var.get(u'lastNonDefaultParam')+Js(1.0)))
        while (var.get(u'_i2')<var.get(u'node').get(u'params').get(u'length')):
            try:
                var.put(u'_param', var.get(u'node').get(u'params').get(var.get(u'_i2')))
                if var.get(u'_param').get(u'_isDefaultPlaceholder'):
                    continue
                var.put(u'declar', var.get(u'buildCutOff')(var.get(u'_param'), var.get(u'argsIdentifier'), var.get(u't').callprop(u'numericLiteral', var.get(u'_i2'))))
                var.get(u'declar').put(u'_blockHoist', (var.get(u'node').get(u'params').get(u'length')-var.get(u'_i2')))
                var.get(u'body').callprop(u'push', var.get(u'declar'))
            finally:
                    (var.put(u'_i2',Js(var.get(u'_i2').to_number())+Js(1))-Js(1))
        var.get(u'node').put(u'params', var.get(u'node').get(u'params').callprop(u'slice', Js(0.0), var.get(u'lastNonDefaultParam')))
        if var.get(u'state').get(u'iife'):
            var.get(u'body').callprop(u'push', PyJsComma(Js(0.0),var.get(u'_babelHelperCallDelegate2').get(u'default'))(var.get(u'path'), var.get(u'scope')))
            var.get(u'path').callprop(u'set', Js(u'body'), var.get(u't').callprop(u'blockStatement', var.get(u'body')))
        else:
            var.get(u'path').callprop(u'get', Js(u'body')).callprop(u'unshiftContainer', Js(u'body'), var.get(u'body'))
    PyJs_Function_1086_._set_name(u'Function')
    PyJs_Object_1085_ = Js({u'Function':PyJs_Function_1086_})
    var.put(u'visitor', var.get(u'exports').put(u'visitor', PyJs_Object_1085_))
PyJs_anonymous_1079_._set_name(u'anonymous')
PyJs_Object_1089_ = Js({u'babel-helper-call-delegate':Js(47.0),u'babel-helper-get-function-arity':Js(50.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-template':Js(221.0),u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_1090_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'module', u't'])
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_1091_ = Js({})
            var.put(u'newObj', PyJs_Object_1091_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'visitor', var.get(u'undefined'))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    @Js
    def PyJs_Function_1093_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Function':PyJs_Function_1093_, u'arguments':arguments}, var)
        var.registers([u'uid', u'i', u'param', u'outputParamsLength', u'params', u'path', u'hoistTweak', u'declar'])
        var.put(u'params', var.get(u'path').callprop(u'get', Js(u'params')))
        var.put(u'hoistTweak', (Js(1.0) if var.get(u't').callprop(u'isRestElement', var.get(u'params').get((var.get(u'params').get(u'length')-Js(1.0)))) else Js(0.0)))
        var.put(u'outputParamsLength', (var.get(u'params').get(u'length')-var.get(u'hoistTweak')))
        #for JS loop
        var.put(u'i', Js(0.0))
        while (var.get(u'i')<var.get(u'outputParamsLength')):
            try:
                var.put(u'param', var.get(u'params').get(var.get(u'i')))
                if (var.get(u'param').callprop(u'isArrayPattern') or var.get(u'param').callprop(u'isObjectPattern')):
                    var.put(u'uid', var.get(u'path').get(u'scope').callprop(u'generateUidIdentifier', Js(u'ref')))
                    var.put(u'declar', var.get(u't').callprop(u'variableDeclaration', Js(u'let'), Js([var.get(u't').callprop(u'variableDeclarator', var.get(u'param').get(u'node'), var.get(u'uid'))])))
                    var.get(u'declar').put(u'_blockHoist', (var.get(u'outputParamsLength')-var.get(u'i')))
                    var.get(u'path').callprop(u'ensureBlock')
                    var.get(u'path').callprop(u'get', Js(u'body')).callprop(u'unshiftContainer', Js(u'body'), var.get(u'declar'))
                    var.get(u'param').callprop(u'replaceWith', var.get(u'uid'))
            finally:
                    (var.put(u'i',Js(var.get(u'i').to_number())+Js(1))-Js(1))
    PyJs_Function_1093_._set_name(u'Function')
    PyJs_Object_1092_ = Js({u'Function':PyJs_Function_1093_})
    var.put(u'visitor', var.get(u'exports').put(u'visitor', PyJs_Object_1092_))
PyJs_anonymous_1090_._set_name(u'anonymous')
PyJs_Object_1094_ = Js({u'babel-types':Js(258.0)})
@Js
def PyJs_anonymous_1095_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'exports', u'destructuring', u'_interopRequireWildcard', u'_default', u'require', u'rest', u'_rest', u'_destructuring', u'module', u'_interopRequireDefault', u'_getIterator2', u'_getIterator3', u'_babelTraverse', u'def'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1101_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1101_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_1100_ = Js({})
            var.put(u'newObj', PyJs_Object_1100_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    @Js
    def PyJs_anonymous_1096_(this, arguments, var=var):
        var = Scope({u'this':this, u'arguments':arguments}, var)
        var.registers([])
        @Js
        def PyJs_ArrowFunctionExpression_1099_(path, this, arguments, var=var):
            var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'ArrowFunctionExpression':PyJs_ArrowFunctionExpression_1099_}, var)
            var.registers([u'_isArray', u'_iterator', u'param', u'params', u'_i', u'path', u'_ref'])
            var.put(u'params', var.get(u'path').callprop(u'get', Js(u'params')))
            #for JS loop
            var.put(u'_iterator', var.get(u'params'))
            var.put(u'_isArray', var.get(u'Array').callprop(u'isArray', var.get(u'_iterator')))
            var.put(u'_i', Js(0.0))
            var.put(u'_iterator', (var.get(u'_iterator') if var.get(u'_isArray') else PyJsComma(Js(0.0),var.get(u'_getIterator3').get(u'default'))(var.get(u'_iterator'))))
            while 1:
                pass
                if var.get(u'_isArray'):
                    if (var.get(u'_i')>=var.get(u'_iterator').get(u'length')):
                        break
                    var.put(u'_ref', var.get(u'_iterator').get((var.put(u'_i',Js(var.get(u'_i').to_number())+Js(1))-Js(1))))
                else:
                    var.put(u'_i', var.get(u'_iterator').callprop(u'next'))
                    if var.get(u'_i').get(u'done'):
                        break
                    var.put(u'_ref', var.get(u'_i').get(u'value'))
                var.put(u'param', var.get(u'_ref'))
                if (var.get(u'param').callprop(u'isRestElement') or var.get(u'param').callprop(u'isAssignmentPattern')):
                    var.get(u'path').callprop(u'arrowFunctionToShadowed')
                    break
            
        PyJs_ArrowFunctionExpression_1099_._set_name(u'ArrowFunctionExpression')
        PyJs_Object_1098_ = Js({u'ArrowFunctionExpression':PyJs_ArrowFunctionExpression_1099_})
        PyJs_Object_1097_ = Js({u'visitor':var.get(u'_babelTraverse').get(u'visitors').callprop(u'merge', Js([PyJs_Object_1098_, var.get(u'destructuring').get(u'visitor'), var.get(u'rest').get(u'visitor'), var.get(u'def').get(u'visitor')]))})
        return PyJs_Object_1097_
    PyJs_anonymous_1096_._set_name(u'anonymous')
    var.get(u'exports').put(u'default', PyJs_anonymous_1096_)
    var.put(u'_babelTraverse', var.get(u'require')(Js(u'babel-traverse')))
    var.put(u'_destructuring', var.get(u'require')(Js(u'./destructuring')))
    var.put(u'destructuring', var.get(u'_interopRequireWildcard')(var.get(u'_destructuring')))
    var.put(u'_default', var.get(u'require')(Js(u'./default')))
    var.put(u'def', var.get(u'_interopRequireWildcard')(var.get(u'_default')))
    var.put(u'_rest', var.get(u'require')(Js(u'./rest')))
    var.put(u'rest', var.get(u'_interopRequireWildcard')(var.get(u'_rest')))
    pass
    pass
    var.get(u'module').put(u'exports', var.get(u'exports').get(u'default'))
PyJs_anonymous_1095_._set_name(u'anonymous')
PyJs_Object_1102_ = Js({u'./default':Js(77.0),u'./destructuring':Js(78.0),u'./rest':Js(80.0),u'babel-runtime/core-js/get-iterator':Js(96.0),u'babel-traverse':Js(225.0)})
@Js
def PyJs_anonymous_1103_(require, module, exports, this, arguments, var=var):
    var = Scope({u'this':this, u'require':require, u'exports':exports, u'module':module, u'arguments':arguments}, var)
    var.registers([u'restIndexImpure', u'exports', u'optimiseLengthGetter', u'hasRest', u'_interopRequireWildcard', u'visitor', u'require', u'_babelTypes', u'_babelTemplate', u'module', u'restIndex', u'buildRest', u'_babelTemplate2', u't', u'_interopRequireDefault', u'restLength', u'_getIterator2', u'_getIterator3', u'optimiseIndexGetter', u'memberExpressionOptimisationVisitor'])
    @Js
    def PyJsHoisted__interopRequireDefault_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj'])
        PyJs_Object_1105_ = Js({u'default':var.get(u'obj')})
        return (var.get(u'obj') if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')) else PyJs_Object_1105_)
    PyJsHoisted__interopRequireDefault_.func_name = u'_interopRequireDefault'
    var.put(u'_interopRequireDefault', PyJsHoisted__interopRequireDefault_)
    @Js
    def PyJsHoisted_optimiseLengthGetter_(path, argsId, offset, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'argsId':argsId, u'offset':offset}, var)
        var.registers([u'path', u'argsId', u'offset'])
        if var.get(u'offset'):
            PyJs_Object_1121_ = Js({u'ARGUMENTS':var.get(u'argsId'),u'OFFSET':var.get(u't').callprop(u'numericLiteral', var.get(u'offset'))})
            var.get(u'path').get(u'parentPath').callprop(u'replaceWith', var.get(u'restLength')(PyJs_Object_1121_))
        else:
            var.get(u'path').callprop(u'replaceWith', var.get(u'argsId'))
    PyJsHoisted_optimiseLengthGetter_.func_name = u'optimiseLengthGetter'
    var.put(u'optimiseLengthGetter', PyJsHoisted_optimiseLengthGetter_)
    @Js
    def PyJsHoisted_optimiseIndexGetter_(path, argsId, offset, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'arguments':arguments, u'argsId':argsId, u'offset':offset}, var)
        var.registers([u'index', u'temp', u'argsId', u'offset', u'path', u'scope'])
        var.put(u'index', PyJsComma(Js(0.0), Js(None)))
        if var.get(u't').callprop(u'isNumericLiteral', var.get(u'path').get(u'parent').get(u'property')):
            var.put(u'index', var.get(u't').callprop(u'numericLiteral', (var.get(u'path').get(u'parent').get(u'property').get(u'value')+var.get(u'offset'))))
        else:
            if PyJsStrictEq(var.get(u'offset'),Js(0.0)):
                var.put(u'index', var.get(u'path').get(u'parent').get(u'property'))
            else:
                var.put(u'index', var.get(u't').callprop(u'binaryExpression', Js(u'+'), var.get(u'path').get(u'parent').get(u'property'), var.get(u't').callprop(u'numericLiteral', var.get(u'offset'))))
        var.put(u'scope', var.get(u'path').get(u'scope'))
        if var.get(u'scope').callprop(u'isPure', var.get(u'index')).neg():
            var.put(u'temp', var.get(u'scope').callprop(u'generateUidIdentifierBasedOnNode', var.get(u'index')))
            PyJs_Object_1118_ = Js({u'id':var.get(u'temp'),u'kind':Js(u'var')})
            var.get(u'scope').callprop(u'push', PyJs_Object_1118_)
            PyJs_Object_1119_ = Js({u'ARGUMENTS':var.get(u'argsId'),u'INDEX':var.get(u'index'),u'REF':var.get(u'temp')})
            var.get(u'path').get(u'parentPath').callprop(u'replaceWith', var.get(u'restIndexImpure')(PyJs_Object_1119_))
        else:
            PyJs_Object_1120_ = Js({u'ARGUMENTS':var.get(u'argsId'),u'INDEX':var.get(u'index')})
            var.get(u'path').get(u'parentPath').callprop(u'replaceWith', var.get(u'restIndex')(PyJs_Object_1120_))
    PyJsHoisted_optimiseIndexGetter_.func_name = u'optimiseIndexGetter'
    var.put(u'optimiseIndexGetter', PyJsHoisted_optimiseIndexGetter_)
    @Js
    def PyJsHoisted_hasRest_(node, this, arguments, var=var):
        var = Scope({u'node':node, u'this':this, u'arguments':arguments}, var)
        var.registers([u'node'])
        return var.get(u't').callprop(u'isRestElement', var.get(u'node').get(u'params').get((var.get(u'node').get(u'params').get(u'length')-Js(1.0))))
    PyJsHoisted_hasRest_.func_name = u'hasRest'
    var.put(u'hasRest', PyJsHoisted_hasRest_)
    @Js
    def PyJsHoisted__interopRequireWildcard_(obj, this, arguments, var=var):
        var = Scope({u'this':this, u'obj':obj, u'arguments':arguments}, var)
        var.registers([u'obj', u'key', u'newObj'])
        if (var.get(u'obj') and var.get(u'obj').get(u'__esModule')):
            return var.get(u'obj')
        else:
            PyJs_Object_1104_ = Js({})
            var.put(u'newObj', PyJs_Object_1104_)
            if (var.get(u'obj')!=var.get(u"null")):
                for PyJsTemp in var.get(u'obj'):
                    var.put(u'key', PyJsTemp)
                    if var.get(u'Object').get(u'prototype').get(u'hasOwnProperty').callprop(u'call', var.get(u'obj'), var.get(u'key')):
                        var.get(u'newObj').put(var.get(u'key'), var.get(u'obj').get(var.get(u'key')))
            var.get(u'newObj').put(u'default', var.get(u'obj'))
            return var.get(u'newObj')
    PyJsHoisted__interopRequireWildcard_.func_name = u'_interopRequireWildcard'
    var.put(u'_interopRequireWildcard', PyJsHoisted__interopRequireWildcard_)
    Js(u'use strict')
    var.get(u'exports').put(u'__esModule', var.get(u'true'))
    var.get(u'exports').put(u'visitor', var.get(u'undefined'))
    var.put(u'_getIterator2', var.get(u'require')(Js(u'babel-runtime/core-js/get-iterator')))
    var.put(u'_getIterator3', var.get(u'_interopRequireDefault')(var.get(u'_getIterator2')))
    var.put(u'_babelTemplate', var.get(u'require')(Js(u'babel-template')))
    var.put(u'_babelTemplate2', var.get(u'_interopRequireDefault')(var.get(u'_babelTemplate')))
    var.put(u'_babelTypes', var.get(u'require')(Js(u'babel-types')))
    var.put(u't', var.get(u'_interopRequireWildcard')(var.get(u'_babelTypes')))
    pass
    pass
    var.put(u'buildRest', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n')))
    var.put(u'restIndex', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\n')))
    var.put(u'restIndexImpure', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\n')))
    var.put(u'restLength', PyJsComma(Js(0.0),var.get(u'_babelTemplate2').get(u'default'))(Js(u'\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n')))
    @Js
    def PyJs_Scope_1107_(path, state, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'state':state, u'arguments':arguments, u'Scope':PyJs_Scope_1107_}, var)
        var.registers([u'path', u'state'])
        if var.get(u'path').get(u'scope').callprop(u'bindingIdentifierEquals', var.get(u'state').get(u'name'), var.get(u'state').get(u'outerBinding')).neg():
            var.get(u'path').callprop(u'skip')
    PyJs_Scope_1107_._set_name(u'Scope')
    @Js
    def PyJs_Flow_1108_(path, this, arguments, var=var):
        var = Scope({u'this':this, u'path':path, u'Flow':PyJs_Flow_1108_, u'arguments':arguments}, var)
        var.registers([u'path'])
        if var.get(u'path').callprop(u'isTypeCastExpression'):
        